{"meta":{"ns":"Tribble","version":"1","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"No description available."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get_unsafe","ident":"trb_heap_get_unsafe","summary":"Unsafe version of `trb_heap_get()`."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"No description available."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"No description available."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"No description available."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"No description available."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"No description available."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"No description available."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get_unsafe","ident":"trb_vector_get_unsafe","summary":"Unsafe version of `trb_vector_get()`."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"String","ident":"trb_string_copy","summary":"Creates a copy of the string."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"get","type_name":"Heap","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"method","name":"get","type_name":"String","ident":"trb_string_get","summary":"Gets @len bytes in the string starting from @index."},{"type":"method","name":"get","type_name":"Vector","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"method","name":"get_c","type_name":"String","ident":"trb_string_get_c","summary":"Gets the character from the string."},{"type":"method","name":"get_range","type_name":"Vector","ident":"trb_vector_get_range","summary":"Gets the range of elements in the array."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"No description available."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"No description available."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_index","type_name":"Vector","ident":"trb_vector_remove_index","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"set","type_name":"Vector","ident":"trb_vector_set","summary":"Changes the value of the entry at the given ..."},{"type":"method","name":"set_range","type_name":"Vector","ident":"trb_vector_set_range","summary":"Overwrites values of the entries at the given index ..."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."}],"terms":{"":[7,8,89,90,151,155,238,242,245,249],"-":[151,238,242,245,249],"1-3":[39,40],"128":[30],"2":[31,32,33],"2^n":[80],"32":[29,32],"32-bit":[23,24,28,38,238],"64":[30,33],"64-bit":[23,25,28,38,151,245],"FORMAT":[58],"TRB_FORMAT":[58],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[24],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[25],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[34,35],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[29,30],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[39],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[40],"[reference]https://prng.di.unimi.it/":[151,238,242,245,249],"`snprintf`":[41,43],"`trb_heap_get`":[59],"`trb_vector_get`":[79],"`vsnprintf`":[42,49],"accept":[85,101,201],"add":[81,122,123,144,145,184,185,186,187,188,189,190,191,192,193,220,221,222,223],"advanc":[93],"after":[113,114,135,136],"all":[89,109,131,198,199,224,238,242,245,249],"all-purpos":[242,249],"alloc":[41,42,43,49],"an":[86,89,90,96,155,238,245],"analog":[41,42,43,49],"and":[245],"and/or":[93],"anoth":[128,150],"arrai":[7,8,12,13,14,15,20,21,34,35,50,51,52,96,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"array'":[237],"as":[238,245],"assign":[156,157,158,159],"avail":[2,3,4,5,6,9,27,37,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,244,251],"avl":[196],"awar":[238],"back":[103,119,122,141,144,184,185,186,187,188,218,220,221],"becom":[195,237],"befor":[114,136],"begin":[123,145,189,190,191,192,193,222,223],"best":[238,245],"binari":[7,8],"bit":[30,238,245],"bucket":[82],"buffer":[97,162,194,195,211,227,233,236,237],"byte":[41,42,43,49,158,163,166,171,172,177,182,187,192],"c":[164,167,175,180,185,190],"can":[238,245],"capac":[172],"case":[238,245],"cell":[50],"chang":[231],"charact":[164,167,175,180,185,190],"check":[110,132],"circular":[107,129],"cmp":[0,1,160],"code":[57],"compar":[0,1,10,11,16,17,18,19,22,36,44,45,46,47,48,160],"comparison":[85,101,201],"complet":[83,98,111,133,165,212],"complex":[238,245],"consid":[238,245],"contain":[53],"content":[156,157,158,159],"copi":[2,108,130,161,197,210],"creat":[84,85,92,100,101,112,134,161,168,169,170,171,172,173,194,197,200,201,210,215,236],"critic":[9],"critical":[6],"current":[94,95],"data":[0,8,13,15,21,35,85,96,101,117,127,139,149,201,230,231,232,235],"debug":[6],"descript":[2,3,4,5,6,9,27,37,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,244,251],"destroi":[82,97,109,131,162,198,211],"discard":[30],"distanc":[54],"do":[55],"doubly-link":[107,112],"dynam":[155,209,215],"element":[102,103,104,105,115,116,117,118,121,128,137,138,139,140,143,150,204,214,216,217,218,219,220,221,222,223,224,226],"empti":[110,132],"end":[122,144,184,185,186,187,188,220,221],"enough":[41,42,43,49],"entri":[7,8,60,72,77,81,86,87,88,89,94,99,106,122,123,144,145,213,225,229,230,231,232],"eras":[163,164],"error":[6],"exampl":[89,90,155],"excel":[249],"except":[41,42,43,49,238,245],"exist":[86],"exit":[9,56,57],"extrem":[242],"f32":[10,240],"f32cmp":[10],"f64":[11,247],"f64cmp":[11],"fail":[9,37,55,56,57,66,67,245],"famili":[238,245],"familii":[151],"fast":[151,242],"fastest":[238,245],"first":[104,120,142,160,219],"flag":[6],"floating-point":[238,240,245,247],"fmt":[41,157,170,176,181,186,191],"follow":[89,90,155],"foreach":[61,62,73],"format":[157,159,170,173,176,178,181,183,186,188,191,193],"four":[238],"free":[3,82,83,97,98,109,111,131,133,162,165,198,199,211,212,233],"from":[88,89,103,104,105,119,120,124,128,141,142,146,150,151,163,166,167,168,170,173,207,218,219,224,225,226,238,245],"front":[104,120,123,142,145,189,190,191,192,193,219,222,223],"func":[0,1,2,3,4,5,27],"function":[0,1,7,8,85,89,101,201],"gener":[151,153,154,238,240,241,242,245,247,248,249],"get":[51,59,79,89,90,91,99,118,121,140,143,155,166,167,213,214],"given":[86,99,118,140,152,153,154,164,174,175,176,177,178,179,180,181,182,183,213,216,217,225,231,232,239,240,241,243,246,247,248,250],"ha":[249],"half":[39],"hash":[4,24,25,80,81,82,83,86,87,88,89,90],"have":[238],"heap":[14,15,59,96,97,98,99,102,103,104,105,106],"heapifi":[12,13],"heapsort":[14,15],"high-qual":[151],"hold":[41,42,43,49],"how":[89,90,155],"i16":[16],"i16cmp":[16],"i32":[17],"i32cmp":[17],"i64":[18],"i64cmp":[18],"i8":[19],"i8cmp":[19],"includ":[41,42,43,49],"index":[99,164,174,175,176,177,178,179,180,181,182,183,213,216,217,225,231,232],"info":[6],"init":[63,74,78,84,85,92,100,101,112,134,152,155,168,170,171,172,173,200,201,215,239,243,246,250],"init0":[169],"initi":[151,152,239,243,246,250],"inord":[202],"insert":[20,21,86,102,113,114,135,136,174,175,176,177,178,203,216,217],"inssort":[20,21],"isiz":[22],"isizecmp":[22],"issu":[238,245],"it":[86],"iter":[90,94,95],"itself":[199],"jenkin":[24,25],"jhash":[23],"jhash32":[24],"jhash64":[25],"just":[245],"kei":[91,93],"knuth":[34,35],"larg":[41,42,43,49],"last":[103,119,141,218],"len":[115,137,158,171,177,182,187,192],"linear":[238,245],"list":[60,61,62,63,107,108,109,110,111,112,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,141,142,143,144,145,146,147,148,149,150],"lookup":[87,116,117,138,139,204],"low":[238,245],"lowest":[238,245],"mani":[217,221,223],"max":[64],"memori":[227,233],"messag":[6,26,27],"might":[245],"min":[65],"murmurhash3":[28,29,30],"new":[81,84,85,92,100,101,112,122,123,134,144,145,168,169,170,171,172,173,194,200,201,215,236],"next":[31,32,33,93,153,154,240,241,244,247,248,251],"node":[63,74,77,78,109,113,114,119,120,124,131,135,136,141,142,146,198,199,203,207,208],"not":[110,132],"noth":[93],"now":[93],"nth":[118,140],"null":[41,42,43,49],"number":[115,137,151,153,154,238,240,241,245,247,248],"on":[86,113,114,128,135,136,150],"onto":[122,123,144,145],"or":[93],"other":[113,114,135,136],"output":[41,42,43,49,89,90,155,238,245],"over":[90],"overwrit":[179,180,181,182,183,232],"pass":[238,242,245,249],"platform":[23,28,38],"point":[93,95],"pointer":[94],"pop":[103,104,119,120,141,142,218,219],"posit":[118,121,140,143],"postord":[205],"pow2":[31,32,33],"power":[31,32,33],"preoder":[206],"preorder":[206],"print":[6,26,155],"probe":[80],"push":[122,123,144,145,184,185,186,187,188,189,190,191,192,193,220,221,222,223],"quadrat":[80],"quicksort":[34,35],"random":[153,154,240,241,247,248],"rang":[214,226,232],"real":[36],"realcmp":[36],"recommend":[151],"remov":[88,89,94,103,104,105,119,120,124,141,142,146,207,218,219,224,225,226],"replac":[86,95,156,157,158,159],"repres":[96],"requir":[227],"reserv":[227],"result":[93],"retriev":[91,93],"return":[37,66,67,115,137],"revers":[62,125,147,228],"rock-solid":[242,249],"rotl32":[68],"rotl64":[69],"rotr32":[70],"rotr64":[71],"round":[31,32,33],"s":[129],"search":[7,8,87,106,116,117,138,139,204,229,230],"second":[160],"seed":[151,152,239,243,246,250],"self-balanc":[196],"set":[231,232],"seudorandom":[151],"should":[7,8,89,90,155],"show":[89,90,155],"shrink":[233],"similar":[89,90,155],"singly-link":[129,134],"siphash":[38,39,40],"siphash32":[39],"siphash64":[40],"size":[80,155,172,209,215],"slist":[72,73,74],"sm64":[151],"so":[238,245],"sort":[7,8,14,15,20,21,34,35,126,127,148,149,234,235],"speed":[249],"splice":[128,150],"splitmix64":[151],"start":[163,166],"state":[152,153,154,239,240,241,243,246,247,248,250],"stdout":[155],"steal":[194,195,236,237],"steal0":[195,237],"strdup":[41,42],"strfmt":[43],"string":[41,42,43,49,155,157,159,160,161,162,163,164,165,166,167,170,173,175,176,178,181,183,185,186,188,190,191,193,194,195],"structur":[96],"sub-n":[242,249],"swap":[52],"tabl":[80,81,82,83,86,87,88,89,90],"talloc":[75],"talloc0":[76],"termin":[41,42,43,49],"test":[238,242,245,249],"those":[245],"three":[245],"too":[238,245],"transfer":[128,150],"travers":[202,205,206],"trb_array_cell":[50],"trb_array_get":[51],"trb_array_swap":[52],"trb_binary_search":[7],"trb_binary_search_data":[8],"trb_container_of":[53],"trb_distance_of":[54],"trb_do_if_fail":[55],"trb_exit_if_fail":[56],"trb_exit_if_fail_critical":[9],"trb_exit_with_code_if_fail":[57],"trb_f32cmp":[10],"trb_f64cmp":[11],"trb_hash_table_add":[81],"trb_hash_table_destroy":[82],"trb_hash_table_free":[83],"trb_hash_table_init":[84],"trb_hash_table_init_data":[85],"trb_hash_table_insert":[86],"trb_hash_table_iter_get":[91],"trb_hash_table_iter_init":[92],"trb_hash_table_iter_next":[93],"trb_hash_table_iter_remove":[94],"trb_hash_table_iter_replace":[95],"trb_hash_table_lookup":[87],"trb_hash_table_remove":[88],"trb_hash_table_remove_all":[89],"trb_heap_destroy":[97],"trb_heap_free":[98],"trb_heap_get":[99],"trb_heap_get_unsafe":[59],"trb_heap_init":[100],"trb_heap_init_data":[101],"trb_heap_insert":[102],"trb_heap_pop_back":[103],"trb_heap_pop_front":[104],"trb_heap_remove":[105],"trb_heap_search":[106],"trb_heapify":[12],"trb_heapify_data":[13],"trb_heapsort":[14],"trb_heapsort_data":[15],"trb_i16cmp":[16],"trb_i32cmp":[17],"trb_i64cmp":[18],"trb_i8cmp":[19],"trb_inssort":[20],"trb_inssort_data":[21],"trb_isizecmp":[22],"trb_jhash":[23],"trb_jhash32":[24],"trb_jhash64":[25],"trb_list_copy":[108],"trb_list_destroy":[109],"trb_list_empty":[110],"trb_list_entry":[60],"trb_list_foreach":[61],"trb_list_foreach_reverse":[62],"trb_list_free":[111],"trb_list_init":[112],"trb_list_insert_after":[113],"trb_list_insert_before":[114],"trb_list_len":[115],"trb_list_lookup":[116],"trb_list_lookup_data":[117],"trb_list_node_init":[63],"trb_list_nth":[118],"trb_list_pop_back":[119],"trb_list_pop_front":[120],"trb_list_position":[121],"trb_list_push_back":[122],"trb_list_push_front":[123],"trb_list_remove":[124],"trb_list_reverse":[125],"trb_list_sort":[126],"trb_list_sort_data":[127],"trb_list_splice":[128],"trb_max":[64],"trb_message":[26],"trb_message_func":[27],"trb_min":[65],"trb_murmurhash3":[28],"trb_murmurhash3_32":[29],"trb_murmurhash3_64":[30],"trb_pow2":[31],"trb_pow2_32":[32],"trb_pow2_64":[33],"trb_quicksort":[34],"trb_quicksort_data":[35],"trb_realcmp":[36],"trb_return_if_fail":[66],"trb_return_if_fail_warning":[37],"trb_return_val_if_fail":[67],"trb_rotl32":[68],"trb_rotl64":[69],"trb_rotr32":[70],"trb_rotr64":[71],"trb_siphash":[38],"trb_siphash32":[39],"trb_siphash64":[40],"trb_slist_copy":[130],"trb_slist_destroy":[131],"trb_slist_empty":[132],"trb_slist_entry":[72],"trb_slist_foreach":[73],"trb_slist_free":[133],"trb_slist_init":[134],"trb_slist_insert_after":[135],"trb_slist_insert_before":[136],"trb_slist_len":[137],"trb_slist_lookup":[138],"trb_slist_lookup_data":[139],"trb_slist_node_init":[74],"trb_slist_nth":[140],"trb_slist_pop_back":[141],"trb_slist_pop_front":[142],"trb_slist_position":[143],"trb_slist_push_back":[144],"trb_slist_push_front":[145],"trb_slist_remove":[146],"trb_slist_reverse":[147],"trb_slist_sort":[148],"trb_slist_sort_data":[149],"trb_slist_splice":[150],"trb_sm64_init":[152],"trb_sm64_next_u32":[153],"trb_sm64_next_u64":[154],"trb_strdup_fmt":[41],"trb_strdup_vfmt":[42],"trb_strfmt":[43],"trb_string_assign":[156],"trb_string_assign_fmt":[157],"trb_string_assign_len":[158],"trb_string_assign_vfmt":[159],"trb_string_cmp":[160],"trb_string_copy":[161],"trb_string_destroy":[162],"trb_string_erase":[163],"trb_string_erase_c":[164],"trb_string_free":[165],"trb_string_get":[166],"trb_string_get_c":[167],"trb_string_init":[168],"trb_string_init0":[169],"trb_string_init_fmt":[170],"trb_string_init_len":[171],"trb_string_init_sized":[172],"trb_string_init_vfmt":[173],"trb_string_insert":[174],"trb_string_insert_c":[175],"trb_string_insert_fmt":[176],"trb_string_insert_len":[177],"trb_string_insert_vfmt":[178],"trb_string_overwrite":[179],"trb_string_overwrite_c":[180],"trb_string_overwrite_fmt":[181],"trb_string_overwrite_len":[182],"trb_string_overwrite_vfmt":[183],"trb_string_push_back":[184],"trb_string_push_back_c":[185],"trb_string_push_back_fmt":[186],"trb_string_push_back_len":[187],"trb_string_push_back_vfmt":[188],"trb_string_push_front":[189],"trb_string_push_front_c":[190],"trb_string_push_front_fmt":[191],"trb_string_push_front_len":[192],"trb_string_push_front_vfmt":[193],"trb_string_steal":[194],"trb_string_steal0":[195],"trb_talloc":[75],"trb_talloc0":[76],"trb_tree_copy":[197],"trb_tree_destroy":[198],"trb_tree_free":[199],"trb_tree_init":[200],"trb_tree_init_data":[201],"trb_tree_inorder":[202],"trb_tree_insert":[203],"trb_tree_lookup":[204],"trb_tree_node_entry":[77],"trb_tree_node_init":[78],"trb_tree_postorder":[205],"trb_tree_preorder":[206],"trb_tree_remove":[207],"trb_u16cmp":[44],"trb_u32cmp":[45],"trb_u64cmp":[46],"trb_u8cmp":[47],"trb_usizecmp":[48],"trb_vector_copy":[210],"trb_vector_destroy":[211],"trb_vector_free":[212],"trb_vector_get":[213],"trb_vector_get_range":[214],"trb_vector_get_unsafe":[79],"trb_vector_init":[215],"trb_vector_insert":[216],"trb_vector_insert_many":[217],"trb_vector_pop_back":[218],"trb_vector_pop_front":[219],"trb_vector_push_back":[220],"trb_vector_push_back_many":[221],"trb_vector_push_front":[222],"trb_vector_push_front_many":[223],"trb_vector_remove_all":[224],"trb_vector_remove_index":[225],"trb_vector_remove_range":[226],"trb_vector_require":[227],"trb_vector_reverse":[228],"trb_vector_search":[229],"trb_vector_search_data":[230],"trb_vector_set":[231],"trb_vector_set_range":[232],"trb_vector_shrink":[233],"trb_vector_sort":[234],"trb_vector_sort_data":[235],"trb_vector_steal":[236],"trb_vector_steal0":[237],"trb_vstrfmt":[49],"trb_xs128p_init":[239],"trb_xs128p_next_f32":[240],"trb_xs128p_next_u32":[241],"trb_xs128ss_init":[243],"trb_xs128ss_next":[244],"trb_xs256p_init":[246],"trb_xs256p_next_f64":[247],"trb_xs256p_next_u64":[248],"trb_xs256ss_init":[250],"trb_xs256ss_next":[251],"trbcmpdatafunc":[0],"trbcmpfunc":[1],"trbcopyfunc":[2],"trbfreefunc":[3],"trbhashfunc":[4],"trbhashtable":[80],"trbhashtableiter":[90],"trbheap":[96],"trblist":[107],"trbmessageflags":[6],"trbslist":[129],"trbsm64":[151],"trbstring":[155,194],"trbstring'":[195],"trbtree":[196],"trbtreenode":[208],"trbuserfunc":[5],"trbvector":[209],"trbxs128p":[238],"trbxs128ss":[242],"trbxs256p":[245],"trbxs256ss":[249],"tree":[77,78,196,197,198,199,202,203,204,205,206,207,208],"two":[0,1,10,11,16,17,18,19,22,36,44,45,46,47,48],"u16":[44],"u16cmp":[44],"u32":[45,153,241],"u32cmp":[45],"u64":[46,154,248],"u64cmp":[46],"u8":[47],"u8cmp":[47],"unsaf":[59,79],"unus":[233],"up":[31,32,33],"upper":[30],"us":[0,7,8,13,14,15,20,21,23,28,34,35,38,89,117,127,139,149,230,235,238,245],"user":[0,5,8,13,15,21,85,101,117,127,139,149,201,230,235],"usiz":[48],"usizecmp":[48],"usual":[238,245],"val":[67],"valu":[0,1,86,91,93,95,99,213,231,232],"vector":[79,209],"version":[59,79],"vfmt":[42,159,173,178,183,188,193],"vstrfmt":[49],"want":[7,8],"warn":[37],"warning":[6],"we":[30,238],"whether":[110,132],"which":[245],"x64":[30],"x86":[29],"xorshift":[238,245],"xoshiro":[151],"xoshiro128**":[242],"xoshiro128+":[238],"xoshiro256**":[249],"xoshiro256+":[245],"xs128p":[238],"xs128ss":[242],"xs256p":[245],"xs256ss":[249],"you":[7,8,89,90,155],"zero":[177,182,187,192,216,217,220,221,222,223,231,232]}}