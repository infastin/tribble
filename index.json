{"meta":{"ns":"Tribble","version":"1","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"real","ctype":"real","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I128_MAX","ident":"I128_MAX","summary":"No description available."},{"type":"constant","name":"I128_MIN","ident":"I128_MIN","summary":"No description available."},{"type":"constant","name":"I128_WIDTH","ident":"I128_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U128_MAX","ident":"U128_MAX","summary":"No description available."},{"type":"constant","name":"U128_WIDTH","ident":"U128_WIDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs32","ident":"trb_abs32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs64","ident":"trb_abs64","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I128_C","ident":"I128_C","summary":"No description available."},{"type":"function_macro","name":"I128_HI","ident":"I128_HI","summary":"No description available."},{"type":"function_macro","name":"I128_LO","ident":"I128_LO","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U128_C","ident":"U128_C","summary":"No description available."},{"type":"function_macro","name":"U128_HI","ident":"U128_HI","summary":"No description available."},{"type":"function_macro","name":"U128_LO","ident":"U128_LO","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get_unsafe","ident":"trb_heap_get_unsafe","summary":"Unsafe version of `trb_heap_get()`."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get_unsafe","ident":"trb_vector_get_unsafe","summary":"Unsafe version of `trb_vector_get()`."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"add","type_name":"i128","ident":"i128_add","summary":"Adds up @a and @b."},{"type":"method","name":"add","type_name":"u128","ident":"u128_add","summary":"Adds up @a and @b."},{"type":"method","name":"and","type_name":"i128","ident":"i128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"and","type_name":"u128","ident":"u128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"clz","type_name":"u128","ident":"u128_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"method","name":"cmp","type_name":"i128","ident":"i128_cmp","summary":"Compares two `i128`."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"cmp","type_name":"u128","ident":"u128_cmp","summary":"Compares two `u128`."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"String","ident":"trb_string_copy","summary":"Creates a copy of the string."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"div","type_name":"i128","ident":"i128_div","summary":"Divides @num by @denom."},{"type":"method","name":"div","type_name":"u128","ident":"u128_div","summary":"Divides @num by @denom."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"get","type_name":"Heap","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"method","name":"get","type_name":"String","ident":"trb_string_get","summary":"Gets @len bytes in the string starting from @index."},{"type":"method","name":"get","type_name":"Vector","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"method","name":"get_c","type_name":"String","ident":"trb_string_get_c","summary":"Gets the character from the string."},{"type":"method","name":"get_range","type_name":"Vector","ident":"trb_vector_get_range","summary":"Gets the range of elements in the array."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on heap, use ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"minus","type_name":"i128","ident":"i128_minus","summary":"No description available."},{"type":"method","name":"mul","type_name":"i128","ident":"i128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"mul","type_name":"u128","ident":"u128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"not","type_name":"i128","ident":"i128_not","summary":"Performs one's complement negation for @num."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"or","type_name":"i128","ident":"i128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"or","type_name":"u128","ident":"u128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_index","type_name":"Vector","ident":"trb_vector_remove_index","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"set","type_name":"Vector","ident":"trb_vector_set","summary":"Changes the value of the entry at the given ..."},{"type":"method","name":"set_range","type_name":"Vector","ident":"trb_vector_set_range","summary":"Overwrites values of the entries at the given index ..."},{"type":"method","name":"shl","type_name":"i128","ident":"i128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shl","type_name":"u128","ident":"u128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shr","type_name":"i128","ident":"i128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shr","type_name":"u128","ident":"u128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"method","name":"sub","type_name":"i128","ident":"i128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"sub","type_name":"u128","ident":"u128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"xor","type_name":"i128","ident":"i128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"method","name":"xor","type_name":"u128","ident":"u128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"d128","ctype":"d128","summary":"Stores the result of division of two `i128`."},{"type":"record","name":"d32","ctype":"d32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"d64","ctype":"d64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"dsize","ctype":"dsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"i128","ctype":"i128","summary":"A signed 128-bit integer type."},{"type":"record","name":"u128","ctype":"u128","summary":"An unsigned 128-bit integer type."},{"type":"record","name":"ud128","ctype":"ud128","summary":"Stores the result of division of two `u128`."},{"type":"record","name":"ud32","ctype":"ud32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"ud64","ctype":"ud64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udsize","ctype":"udsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[30,31,139,140,225,229,328,332,335,339],"-":[225,328,332,335,339],"0-bit":[83,84,286],"1-3":[68,69],"128":[59],"128-bit":[157,283],"16-bit":[2,8],"2":[60,61,62],"2^n":[130],"32":[33,55,58,61],"32-bit":[3,9,49,50,57,67,328],"64":[34,56,59,62],"64-bit":[4,10,49,51,57,67,225,335],"8-bit":[5,11],"C":[92,95,96,97,98,118,121,122,123,124],"FALSE":[19],"FORMAT":[90],"HI":[93,119],"I128":[20,21,22,92,93,94],"I128_C":[92],"I128_HI":[93],"I128_LO":[94],"I16":[95],"I16_C":[95],"I32":[96],"I32_C":[96],"I64":[97],"I64_C":[97],"I8":[98],"I8_C":[98],"LO":[94,120],"MAX":[20,24],"MIN":[21],"TRB_FORMAT":[90],"TRUE":[23],"U128":[24,25,118,119,120],"U128_C":[118],"U128_HI":[119],"U128_LO":[120],"U16":[121],"U16_C":[121],"U32":[122],"U32_C":[122],"U64":[123],"U64_C":[123],"U8":[124],"U8_C":[124],"WIDTH":[22,25],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[50],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[51],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[63,64],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[58,59],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[68],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[69],"[reference]https://prng.di.unimi.it/":[225,328,332,335,339],"[reference]https://www.pcg-random.org/":[192,197],"`free":[142],"`snprintf`":[70,72],"`trb_heap_get`":[91],"`trb_vector_get`":[125],"`vsnprintf`":[71,78],"ab":[27],"abs32":[28],"abs64":[29],"absolut":[27,28,29],"accept":[135,151,275],"add":[131,158,185,186,218,219,258,259,260,261,262,263,264,265,266,267,284,310,311,312,313],"advanc":[143],"after":[176,177,209,210],"all":[139,172,205,272,273,314,328,332,335,339],"all-purpos":[332,339],"alloc":[70,71,72,78,142],"an":[8,9,10,11,12,136,139,140,146,229,283,328,335],"analog":[70,71,72,78],"and":[335],"and/or":[143],"anoth":[191,224],"arrai":[30,31,38,39,40,41,46,47,63,64,79,80,81,146,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"array'":[327],"as":[328,335],"assign":[230,231,232,233],"avail":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,124,162],"avl":[270],"awar":[328],"back":[153,182,185,215,218,258,259,260,261,262,308,310,311],"becom":[269,327],"befor":[177,210],"begin":[186,219,263,264,265,266,267,312,313],"best":[328,335],"between":[103,104],"binari":[30,31],"bit":[59,83,84,107,108,109,110,166,167,286,291,292,328,335],"bucket":[132],"buffer":[147,236,268,269,301,317,323,326,327],"byte":[70,71,72,78,232,237,240,245,246,251,256,261,266],"c":[238,241,249,254,259,264],"can":[328,335],"capac":[246],"case":[328,335],"cell":[79],"chang":[321],"charact":[238,241,249,254,259,264],"check":[173,206],"choos":[103,104],"circular":[170,203],"clz":[82,286],"clz32":[83],"clz64":[84],"cmp":[13,14,160,234,287],"code":[89],"compar":[13,14,36,37,42,43,44,45,48,65,73,74,75,76,77,160,234,287],"comparison":[135,151,275],"complement":[164],"complet":[133,148,174,207,239,302],"complex":[328,335],"consid":[328,335],"contain":[85],"content":[230,231,232,233],"copi":[15,171,204,235,271,300],"count":[83,84,286],"creat":[134,135,142,150,151,175,208,235,242,243,244,245,246,247,268,271,274,275,300,305,326],"critic":[35],"critical":[26],"current":[144,145],"d128":[126],"d32":[127],"d64":[128],"data":[13,31,39,41,47,64,135,146,151,180,190,213,223,275,320,321,322,325],"debug":[26],"descript":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,106,111,112,113,114,115,116,117,118,119,120,121,122,123,124,162],"destroi":[132,147,172,205,236,272,301],"discard":[59],"distanc":[86],"div":[32,33,34,161,288],"divid":[32,33,34,161,288],"divis":[126,127,128,129,295,296,297,298],"do":[87],"doubl":[1],"doubly-link":[170,175],"dsize":[129],"dynam":[229,299,305],"element":[152,153,154,155,178,179,180,181,184,191,211,212,213,214,217,224,278,304,306,307,308,309,310,311,312,313,314,316],"empti":[173,206],"end":[185,218,258,259,260,261,262,310,311],"enough":[70,71,72,78],"entri":[30,31,99,111,116,131,136,137,138,139,144,149,156,185,186,218,219,303,315,319,320,321,322],"eras":[237,238],"error":[26],"exampl":[139,140,229],"excel":[339],"except":[70,71,72,78,328,335],"exist":[136],"exit":[35,88,89],"extrem":[332],"f32":[0,36,199,330],"f32cmp":[36],"f64":[1,37,194,200,337],"f64cmp":[37],"fail":[35,66,87,88,89,105,106,335],"false":[19],"famili":[328,335],"familii":[225],"fast":[225,332],"fastest":[328,335],"first":[154,183,216,234,309],"flag":[26],"floating-point":[0,1,7,328,330,335,337],"fmt":[70,231,244,250,255,260,265],"follow":[139,140,229],"foreach":[100,101,112],"format":[231,233,244,247,250,252,255,257,260,262,265,267],"four":[328],"free":[16,132,133,147,148,172,174,205,207,236,239,272,273,301,302,323],"from":[138,139,153,154,155,168,182,183,187,191,215,216,220,224,225,237,240,241,242,244,247,281,293,308,309,314,315,316,328,335],"front":[154,183,186,216,219,263,264,265,266,267,309,312,313],"func":[13,14,15,16,17,18,53],"function":[13,14,17,30,31,135,139,151,275],"gener":[192,194,195,196,197,199,200,201,202,225,227,228,328,330,331,332,334,335,337,338,339,341],"get":[27,28,29,80,91,125,139,140,141,149,181,184,214,217,229,240,241,303,304],"given":[136,149,181,193,194,195,196,198,199,200,201,202,214,226,227,228,238,248,249,250,251,252,253,254,255,256,257,303,306,307,315,321,322,329,330,331,333,334,336,337,338,340,341],"ha":[339],"half":[68],"hash":[17,50,51,130,131,132,133,136,137,138,139,140],"have":[328],"heap":[40,41,91,142,146,147,148,149,152,153,154,155,156],"heapifi":[38,39],"heapsort":[40,41],"high-qual":[225],"hold":[70,71,72,78],"how":[139,140,229],"i128":[126,157,160],"i128_add":[158],"i128_and":[159],"i128_cmp":[160],"i128_div":[161],"i128_max":[20],"i128_min":[21],"i128_minus":[162],"i128_mul":[163],"i128_not":[164],"i128_or":[165],"i128_shl":[166],"i128_shr":[167],"i128_sub":[168],"i128_width":[22],"i128_xor":[169],"i16":[2,42],"i16cmp":[42],"i32":[3,43,127],"i32cmp":[43],"i64":[4,44,128],"i64cmp":[44],"i8":[5,45],"i8cmp":[45],"includ":[70,71,72,78],"index":[149,238,248,249,250,251,252,253,254,255,256,257,303,306,307,315,321,322],"info":[26],"init":[102,113,117,134,135,142,150,151,175,193,198,208,226,229,242,244,245,246,247,274,275,305,329,333,336,340],"init0":[243],"initi":[193,198,225,226,329,333,336,340],"inord":[276],"insert":[46,47,136,152,176,177,209,210,248,249,250,251,252,277,306,307],"inssort":[46,47],"integ":[2,3,4,5,6,8,9,10,11,12,157,283],"isiz":[6,48,129],"isize":[6],"isizecmp":[48],"issu":[328,335],"it":[136],"iter":[140,144,145],"itself":[273],"jenkin":[50,51],"jhash":[49],"jhash32":[50],"jhash64":[51],"just":[335],"kei":[17,141,143],"knuth":[63,64],"larg":[70,71,72,78],"largest":[103],"last":[153,182,215,308],"lead":[83,84,286],"left":[107,108,166,291],"len":[178,211,232,245,251,256,261,266],"linear":[328,335],"list":[99,100,101,102,170,171,172,173,174,175,178,179,180,182,183,184,185,186,187,188,189,190,191,203,204,205,206,207,208,211,212,213,215,216,217,218,219,220,221,222,223,224],"logic":[159,165,169,285,290,294],"lookup":[137,179,180,212,213,278],"low":[328,335],"lowest":[104,328,335],"m":[195,200,202],"mani":[307,311,313],"max":[103],"memori":[142,317,323],"messag":[26,52,53],"might":[335],"min":[104],"minu":[162],"most":[83,84,286],"mul":[54,55,56,163,289],"multipli":[54,55,56,163,289],"murmurhash3":[57,58,59],"negat":[164],"new":[131,134,135,142,150,151,175,185,186,208,218,219,242,243,244,245,246,247,268,274,275,305,326],"next":[60,61,62,143,194,195,196,199,200,201,202,227,228,330,331,334,337,338,341],"node":[102,113,116,117,172,176,177,182,183,187,205,209,210,215,216,220,272,273,277,281,282],"not":[173,206],"noth":[143],"now":[143],"nth":[181,214],"null":[70,71,72,78],"number":[0,1,7,32,33,34,54,55,56,83,84,178,194,195,196,199,200,201,202,211,225,227,228,286,328,330,331,334,335,337,338,341],"on":[136,176,177,191,209,210,224],"one'":[164],"onto":[185,186,218,219],"oper":[159,165,169,285,290,294],"or":[143],"other":[176,177,209,210],"output":[70,71,72,78,139,140,229,328,335],"over":[140],"overwrit":[253,254,255,256,257,322],"pass":[328,332,335,339],"pcg128":[192,194,195,196],"pcg64":[197,199,200,201,202],"perform":[159,164,165,169,285,290,294],"platform":[49,57,67],"point":[143,145],"pointer":[6,12,144],"pop":[153,154,182,183,215,216,308,309],"posit":[83,84,181,184,214,217,286],"postord":[279],"pow2":[32,33,34,54,55,56,60,61,62],"power":[32,33,34,54,55,56,60,61,62],"precis":[0,1,7],"preoder":[280],"preorder":[280],"print":[26,52,229],"probe":[130],"push":[185,186,218,219,258,259,260,261,262,263,264,265,266,267,310,311,312,313],"quadrat":[130],"quadrupl":[7],"quicksort":[63,64],"random":[194,195,196,199,200,201,202,227,228,330,331,334,337,338,341],"rang":[304,316,322],"real":[7,65],"realcmp":[65],"recommend":[225],"releas":[142],"remov":[138,139,144,153,154,155,182,183,187,215,216,220,281,308,309,314,315,316],"replac":[136,145,230,231,232,233],"repres":[146],"requir":[317],"reserv":[317],"result":[126,127,128,129,143,295,296,297,298],"retriev":[141,143],"return":[66,105,106,178,211],"revers":[101,188,221,318],"right":[109,110,167,292],"rock-solid":[332,339],"rotat":[107,108,109,110],"rotl32":[107],"rotl64":[108],"rotr32":[109],"rotr64":[110],"round":[60,61,62],"rs":[194,196,199,201],"rx":[195,200,202],"s":[203],"search":[30,31,137,156,179,180,212,213,278,319,320],"second":[234],"seed":[193,198,225,226,329,333,336,340],"self-balanc":[270],"set":[321,322],"seudorandom":[225],"shift":[166,167,291,292],"shl":[166,291],"should":[30,31,139,140,229],"show":[139,140,229],"shr":[167,292],"shrink":[323],"sign":[2,3,4,5,6,157],"signific":[83,84,286],"similar":[139,140,229],"singl":[0],"singly-link":[203,208],"siphash":[67,68,69],"siphash32":[68],"siphash64":[69],"size":[6,12,130,229,246,299,305],"slist":[111,112,113],"sm64":[225],"so":[328,335],"sort":[30,31,40,41,46,47,63,64,189,190,222,223,324,325],"speed":[339],"splice":[191,224],"splitmix64":[225],"start":[83,84,237,240,286],"state":[192,193,194,195,196,197,198,199,200,201,202,226,227,228,329,330,331,333,334,336,337,338,340,341],"stdout":[229],"steal":[268,269,326,327],"steal0":[269,327],"store":[126,127,128,129,295,296,297,298],"strdup":[70,71],"strfmt":[72],"string":[70,71,72,78,229,231,233,234,235,236,237,238,239,240,241,244,247,249,250,252,255,257,259,260,262,264,265,267,268,269],"structur":[146],"sub":[168,293],"sub-n":[332,339],"subtract":[168,293],"swap":[81],"tabl":[130,131,132,133,136,137,138,139,140],"talloc":[114],"talloc0":[115],"termin":[70,71,72,78],"test":[328,332,335,339],"those":[335],"three":[335],"too":[328,335],"transfer":[191,224],"travers":[276,279,280],"trb_abs":[27],"trb_abs32":[28],"trb_abs64":[29],"trb_array_cell":[79],"trb_array_get":[80],"trb_array_swap":[81],"trb_binary_search":[30],"trb_binary_search_data":[31],"trb_clz":[82],"trb_clz32":[83],"trb_clz64":[84],"trb_container_of":[85],"trb_distance_of":[86],"trb_div_pow2":[32],"trb_div_pow2_32":[33],"trb_div_pow2_64":[34],"trb_do_if_fail":[87],"trb_exit_if_fail":[88],"trb_exit_if_fail_critical":[35],"trb_exit_with_code_if_fail":[89],"trb_f32cmp":[36],"trb_f64cmp":[37],"trb_hash_table_add":[131],"trb_hash_table_destroy":[132],"trb_hash_table_free":[133],"trb_hash_table_init":[134],"trb_hash_table_init_data":[135],"trb_hash_table_insert":[136],"trb_hash_table_iter_get":[141],"trb_hash_table_iter_init":[142],"trb_hash_table_iter_next":[143],"trb_hash_table_iter_remove":[144],"trb_hash_table_iter_replace":[145],"trb_hash_table_lookup":[137],"trb_hash_table_remove":[138],"trb_hash_table_remove_all":[139],"trb_heap_destroy":[147],"trb_heap_free":[148],"trb_heap_get":[149],"trb_heap_get_unsafe":[91],"trb_heap_init":[150],"trb_heap_init_data":[151],"trb_heap_insert":[152],"trb_heap_pop_back":[153],"trb_heap_pop_front":[154],"trb_heap_remove":[155],"trb_heap_search":[156],"trb_heapify":[38],"trb_heapify_data":[39],"trb_heapsort":[40],"trb_heapsort_data":[41],"trb_i16cmp":[42],"trb_i32cmp":[43],"trb_i64cmp":[44],"trb_i8cmp":[45],"trb_inssort":[46],"trb_inssort_data":[47],"trb_isizecmp":[48],"trb_jhash":[49],"trb_jhash32":[50],"trb_jhash64":[51],"trb_list_copy":[171],"trb_list_destroy":[172],"trb_list_empty":[173],"trb_list_entry":[99],"trb_list_foreach":[100],"trb_list_foreach_reverse":[101],"trb_list_free":[174],"trb_list_init":[175],"trb_list_insert_after":[176],"trb_list_insert_before":[177],"trb_list_len":[178],"trb_list_lookup":[179],"trb_list_lookup_data":[180],"trb_list_node_init":[102],"trb_list_nth":[181],"trb_list_pop_back":[182],"trb_list_pop_front":[183],"trb_list_position":[184],"trb_list_push_back":[185],"trb_list_push_front":[186],"trb_list_remove":[187],"trb_list_reverse":[188],"trb_list_sort":[189],"trb_list_sort_data":[190],"trb_list_splice":[191],"trb_max":[103],"trb_message":[52],"trb_message_func":[53],"trb_min":[104],"trb_mul_pow2":[54],"trb_mul_pow2_32":[55],"trb_mul_pow2_64":[56],"trb_murmurhash3":[57],"trb_murmurhash3_32":[58],"trb_murmurhash3_64":[59],"trb_pcg128_init":[193],"trb_pcg128_next_f64":[194],"trb_pcg128_next_u128":[195],"trb_pcg128_next_u64":[196],"trb_pcg64_init":[198],"trb_pcg64_next_f32":[199],"trb_pcg64_next_f64":[200],"trb_pcg64_next_u32":[201],"trb_pcg64_next_u64":[202],"trb_pow2":[60],"trb_pow2_32":[61],"trb_pow2_64":[62],"trb_quicksort":[63],"trb_quicksort_data":[64],"trb_realcmp":[65],"trb_return_if_fail":[105],"trb_return_if_fail_warning":[66],"trb_return_val_if_fail":[106],"trb_rotl32":[107],"trb_rotl64":[108],"trb_rotr32":[109],"trb_rotr64":[110],"trb_siphash":[67],"trb_siphash32":[68],"trb_siphash64":[69],"trb_slist_copy":[204],"trb_slist_destroy":[205],"trb_slist_empty":[206],"trb_slist_entry":[111],"trb_slist_foreach":[112],"trb_slist_free":[207],"trb_slist_init":[208],"trb_slist_insert_after":[209],"trb_slist_insert_before":[210],"trb_slist_len":[211],"trb_slist_lookup":[212],"trb_slist_lookup_data":[213],"trb_slist_node_init":[113],"trb_slist_nth":[214],"trb_slist_pop_back":[215],"trb_slist_pop_front":[216],"trb_slist_position":[217],"trb_slist_push_back":[218],"trb_slist_push_front":[219],"trb_slist_remove":[220],"trb_slist_reverse":[221],"trb_slist_sort":[222],"trb_slist_sort_data":[223],"trb_slist_splice":[224],"trb_sm64_init":[226],"trb_sm64_next_u32":[227],"trb_sm64_next_u64":[228],"trb_strdup_fmt":[70],"trb_strdup_vfmt":[71],"trb_strfmt":[72],"trb_string_assign":[230],"trb_string_assign_fmt":[231],"trb_string_assign_len":[232],"trb_string_assign_vfmt":[233],"trb_string_cmp":[234],"trb_string_copy":[235],"trb_string_destroy":[236],"trb_string_erase":[237],"trb_string_erase_c":[238],"trb_string_free":[239],"trb_string_get":[240],"trb_string_get_c":[241],"trb_string_init":[242],"trb_string_init0":[243],"trb_string_init_fmt":[244],"trb_string_init_len":[245],"trb_string_init_sized":[246],"trb_string_init_vfmt":[247],"trb_string_insert":[248],"trb_string_insert_c":[249],"trb_string_insert_fmt":[250],"trb_string_insert_len":[251],"trb_string_insert_vfmt":[252],"trb_string_overwrite":[253],"trb_string_overwrite_c":[254],"trb_string_overwrite_fmt":[255],"trb_string_overwrite_len":[256],"trb_string_overwrite_vfmt":[257],"trb_string_push_back":[258],"trb_string_push_back_c":[259],"trb_string_push_back_fmt":[260],"trb_string_push_back_len":[261],"trb_string_push_back_vfmt":[262],"trb_string_push_front":[263],"trb_string_push_front_c":[264],"trb_string_push_front_fmt":[265],"trb_string_push_front_len":[266],"trb_string_push_front_vfmt":[267],"trb_string_steal":[268],"trb_string_steal0":[269],"trb_talloc":[114],"trb_talloc0":[115],"trb_tree_copy":[271],"trb_tree_destroy":[272],"trb_tree_free":[273],"trb_tree_init":[274],"trb_tree_init_data":[275],"trb_tree_inorder":[276],"trb_tree_insert":[277],"trb_tree_lookup":[278],"trb_tree_node_entry":[116],"trb_tree_node_init":[117],"trb_tree_postorder":[279],"trb_tree_preorder":[280],"trb_tree_remove":[281],"trb_u16cmp":[73],"trb_u32cmp":[74],"trb_u64cmp":[75],"trb_u8cmp":[76],"trb_usizecmp":[77],"trb_vector_copy":[300],"trb_vector_destroy":[301],"trb_vector_free":[302],"trb_vector_get":[303],"trb_vector_get_range":[304],"trb_vector_get_unsafe":[125],"trb_vector_init":[305],"trb_vector_insert":[306],"trb_vector_insert_many":[307],"trb_vector_pop_back":[308],"trb_vector_pop_front":[309],"trb_vector_push_back":[310],"trb_vector_push_back_many":[311],"trb_vector_push_front":[312],"trb_vector_push_front_many":[313],"trb_vector_remove_all":[314],"trb_vector_remove_index":[315],"trb_vector_remove_range":[316],"trb_vector_require":[317],"trb_vector_reverse":[318],"trb_vector_search":[319],"trb_vector_search_data":[320],"trb_vector_set":[321],"trb_vector_set_range":[322],"trb_vector_shrink":[323],"trb_vector_sort":[324],"trb_vector_sort_data":[325],"trb_vector_steal":[326],"trb_vector_steal0":[327],"trb_vstrfmt":[78],"trb_xs128p_init":[329],"trb_xs128p_next_f32":[330],"trb_xs128p_next_u32":[331],"trb_xs128ss_init":[333],"trb_xs128ss_next":[334],"trb_xs256p_init":[336],"trb_xs256p_next_f64":[337],"trb_xs256p_next_u64":[338],"trb_xs256ss_init":[340],"trb_xs256ss_next":[341],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[130],"trbhashtableiter":[140],"trbheap":[146],"trblist":[170],"trbmessageflags":[26],"trbpcg128":[192],"trbpcg64":[197],"trbslist":[203],"trbsm64":[225],"trbstring":[229,268],"trbstring'":[269],"trbtree":[270],"trbtreenode":[282],"trbuserfunc":[18],"trbvector":[299],"trbxs128p":[328],"trbxs128ss":[332],"trbxs256p":[335],"trbxs256ss":[339],"tree":[116,117,270,271,272,273,276,277,278,279,280,281,282],"true":[23],"two":[13,14,32,33,34,36,37,42,43,44,45,48,54,55,56,65,73,74,75,76,77,126,127,128,129,160,287,295,296,297,298],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12,157,283],"u128":[195,283,287,295],"u128_add":[284],"u128_and":[285],"u128_clz":[286],"u128_cmp":[287],"u128_div":[288],"u128_max":[24],"u128_mul":[289],"u128_or":[290],"u128_shl":[291],"u128_shr":[292],"u128_sub":[293],"u128_width":[25],"u128_xor":[294],"u16":[8,73],"u16cmp":[73],"u32":[9,74,201,227,296,331],"u32cmp":[74],"u64":[10,75,196,202,228,297,338],"u64cmp":[75],"u8":[11,76],"u8cmp":[76],"ud128":[295],"ud32":[296],"ud64":[297],"udsiz":[298],"udsize":[298],"unsaf":[91,125],"unsign":[8,9,10,11,12,283],"unus":[323],"up":[60,61,62,158,284],"upper":[59],"us":[13,30,31,39,40,41,46,47,49,57,63,64,67,139,142,180,190,194,195,196,199,200,201,202,213,223,320,325,328,335],"user":[13,18,31,39,41,47,135,151,180,190,213,223,275,320,325],"usiz":[12,77,298],"usize":[12],"usizecmp":[77],"usual":[328,335],"val":[106],"valu":[13,14,27,28,29,103,104,136,141,143,145,149,303,321,322],"vector":[125,299],"version":[91,125],"vfmt":[71,233,247,252,257,262,267],"vstrfmt":[78],"want":[30,31],"warn":[66],"warning":[26],"we":[59,328],"whether":[173,206],"which":[335],"x64":[59],"x86":[58],"xor":[169,294],"xorshift":[328,335],"xoshiro":[225],"xoshiro128**":[332],"xoshiro128+":[328],"xoshiro256**":[339],"xoshiro256+":[335],"xs":[195,200,202],"xs128p":[328],"xs128ss":[332],"xs256p":[335],"xs256ss":[339],"xsh":[194,196,199,201],"you":[30,31,139,140,229],"zero":[251,256,261,266,306,307,310,311,312,313,321,322]}}