{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"real","ctype":"real","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I128_MAX","ident":"I128_MAX","summary":"No description available."},{"type":"constant","name":"I128_MIN","ident":"I128_MIN","summary":"No description available."},{"type":"constant","name":"I128_WIDTH","ident":"I128_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U128_MAX","ident":"U128_MAX","summary":"No description available."},{"type":"constant","name":"U128_WIDTH","ident":"U128_WIDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs32","ident":"trb_abs32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs64","ident":"trb_abs64","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I128_C","ident":"I128_C","summary":"No description available."},{"type":"function_macro","name":"I128_HI","ident":"I128_HI","summary":"No description available."},{"type":"function_macro","name":"I128_LO","ident":"I128_LO","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U128_C","ident":"U128_C","summary":"No description available."},{"type":"function_macro","name":"U128_HI","ident":"U128_HI","summary":"No description available."},{"type":"function_macro","name":"U128_LO","ident":"U128_LO","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get_unsafe","ident":"trb_deque_get_unsafe","summary":"No description available."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get_unsafe","ident":"trb_heap_get_unsafe","summary":"Unsafe version of `trb_heap_get()`."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get_unsafe","ident":"trb_vector_get_unsafe","summary":"Unsafe version of `trb_vector_get()`."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"add","type_name":"i128","ident":"i128_add","summary":"Adds up @a and @b."},{"type":"method","name":"add","type_name":"u128","ident":"u128_add","summary":"Adds up @a and @b."},{"type":"method","name":"and","type_name":"i128","ident":"i128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"and","type_name":"u128","ident":"u128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"clz","type_name":"u128","ident":"u128_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"method","name":"cmp","type_name":"i128","ident":"i128_cmp","summary":"Compares two `i128`."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"cmp","type_name":"u128","ident":"u128_cmp","summary":"Compares two `u128`."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"No description available."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"div","type_name":"i128","ident":"i128_div","summary":"Divides @num by @denom."},{"type":"method","name":"div","type_name":"u128","ident":"u128_div","summary":"Divides @num by @denom."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"No description available."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"Deque","ident":"trb_deque_get","summary":"No description available."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"get","type_name":"Heap","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"method","name":"get","type_name":"String","ident":"trb_string_get","summary":"Gets @len bytes in the string starting from @index."},{"type":"method","name":"get","type_name":"Vector","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"method","name":"get_c","type_name":"String","ident":"trb_string_get_c","summary":"Gets the character from the string."},{"type":"method","name":"get_range","type_name":"Vector","ident":"trb_vector_get_range","summary":"Gets the range of elements in the array."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"No description available."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on heap, use ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"minus","type_name":"i128","ident":"i128_minus","summary":"No description available."},{"type":"method","name":"mul","type_name":"i128","ident":"i128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"mul","type_name":"u128","ident":"u128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"not","type_name":"i128","ident":"i128_not","summary":"Performs one's complement negation for @num."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"or","type_name":"i128","ident":"i128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"or","type_name":"u128","ident":"u128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"No description available."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the array."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"No description available."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"No description available."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"No description available."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_index","type_name":"Vector","ident":"trb_vector_remove_index","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"set","type_name":"Vector","ident":"trb_vector_set","summary":"Changes the value of the entry at the given ..."},{"type":"method","name":"set_range","type_name":"Vector","ident":"trb_vector_set_range","summary":"Overwrites values of the entries at the given index ..."},{"type":"method","name":"shl","type_name":"i128","ident":"i128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shl","type_name":"u128","ident":"u128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shr","type_name":"i128","ident":"i128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shr","type_name":"u128","ident":"u128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"No description available."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"method","name":"sub","type_name":"i128","ident":"i128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"sub","type_name":"u128","ident":"u128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"xor","type_name":"i128","ident":"i128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"method","name":"xor","type_name":"u128","ident":"u128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"No description available."},{"type":"record","name":"DequeBucket","ctype":"TrbDequeBucket","summary":"No description available."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"d128","ctype":"d128","summary":"Stores the result of division of two `i128`."},{"type":"record","name":"d32","ctype":"d32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"d64","ctype":"d64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"dsize","ctype":"dsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"i128","ctype":"i128","summary":"A signed 128-bit integer type."},{"type":"record","name":"u128","ctype":"u128","summary":"An unsigned 128-bit integer type."},{"type":"record","name":"ud128","ctype":"ud128","summary":"Stores the result of division of two `u128`."},{"type":"record","name":"ud32","ctype":"ud32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"ud64","ctype":"ud64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udsize","ctype":"udsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[30,31,151,152,237,241,341,345,348,352],"-":[237,341,345,348,352],"0-bit":[83,84,297],"1-3":[68,69],"128":[59],"128-bit":[169,294],"16-bit":[2,8],"2":[60,61,62],"2^n":[142],"32":[33,55,58,61],"32-bit":[3,9,49,50,57,67,341],"64":[34,56,59,62],"64-bit":[4,10,49,51,57,67,237,348],"8-bit":[5,11],"C":[93,96,97,98,99,119,122,123,124,125],"FALSE":[19],"FORMAT":[91],"HI":[94,120],"I128":[20,21,22,93,94,95],"I128_C":[93],"I128_HI":[94],"I128_LO":[95],"I16":[96],"I16_C":[96],"I32":[97],"I32_C":[97],"I64":[98],"I64_C":[98],"I8":[99],"I8_C":[99],"LO":[95,121],"MAX":[20,24],"MIN":[21],"TRB_FORMAT":[91],"TRUE":[23],"U128":[24,25,119,120,121],"U128_C":[119],"U128_HI":[120],"U128_LO":[121],"U16":[122],"U16_C":[122],"U32":[123],"U32_C":[123],"U64":[124],"U64_C":[124],"U8":[125],"U8_C":[125],"WIDTH":[22,25],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[50],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[51],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[63,64],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[58,59],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[68],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[69],"[reference]https://prng.di.unimi.it/":[237,341,345,348,352],"[reference]https://www.pcg-random.org/":[204,209],"`free":[154],"`snprintf`":[70,72],"`trb_heap_get`":[92],"`trb_vector_get`":[126],"`vsnprintf`":[71,78],"ab":[27],"abs32":[28],"abs64":[29],"absolut":[27,28,29],"accept":[147,163,286],"add":[143,170,197,198,230,231,269,270,271,272,273,274,275,276,277,278,295,323,324,325,326],"advanc":[155],"after":[188,189,221,222],"all":[151,184,217,283,284,327,341,345,348,352],"all-purpos":[345,352],"alloc":[70,71,72,78,154],"an":[8,9,10,11,12,148,151,152,158,241,294,341,348],"analog":[70,71,72,78],"and":[348],"and/or":[155],"anoth":[203,236],"arrai":[30,31,38,39,40,41,46,47,63,64,79,80,81,158,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"array'":[340],"as":[341,348],"assign":[242,243,244,245],"avail":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,134,135,136,137,138,139,140,174],"avl":[281],"awar":[341],"back":[135,137,165,194,197,227,230,269,270,271,272,273,319,320,323,324],"becom":[280,340],"befor":[189,222],"begin":[198,231,274,275,276,277,278,325,326],"best":[341,348],"between":[104,105],"binari":[30,31],"bit":[59,83,84,108,109,110,111,178,179,297,302,303,341,348],"bucket":[140,144],"buffer":[159,247,279,280,312,330,336,339,340],"byte":[70,71,72,78,244,248,251,256,257,262,267,272,277],"c":[249,252,260,265,270,275],"can":[341,348],"capac":[257],"case":[341,348],"cell":[79],"chang":[334],"charact":[249,252,260,265,270,275],"check":[185,218],"choos":[104,105],"circular":[182,215],"clz":[82,297],"clz32":[83],"clz64":[84],"cmp":[13,14,172,246,298],"code":[90],"compar":[13,14,36,37,42,43,44,45,48,65,73,74,75,76,77,172,246,298],"comparison":[147,163,286],"complement":[176],"complet":[145,160,186,219,250,313],"complex":[341,348],"consid":[341,348],"contain":[85],"content":[242,243,244,245],"copi":[15,183,216,282,311],"count":[83,84,297],"creat":[146,147,154,162,163,187,220,253,254,255,256,257,258,279,282,285,286,311,316,339],"critic":[35],"critical":[26],"current":[156,157],"d128":[127],"d32":[128],"d64":[129],"data":[13,31,39,41,47,64,147,158,163,192,202,225,235,286,333,334,335,338],"debug":[26],"dequ":[86,130,140],"descript":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,134,135,136,137,138,139,140,174],"destroi":[131,144,159,184,217,247,283,312],"discard":[59],"distanc":[87],"div":[32,33,34,173,299],"divid":[32,33,34,173,299],"divis":[127,128,129,141,306,307,308,309],"do":[88],"doubl":[1],"doubly-link":[182,187],"dsize":[141],"dynam":[241,310,316],"element":[164,165,166,167,190,191,192,193,196,203,223,224,225,226,229,236,289,315,317,318,319,320,321,322,323,324,325,326,327,329],"empti":[185,218],"end":[197,230,269,270,271,272,273,323,324],"enough":[70,71,72,78],"entri":[30,31,100,112,117,143,148,149,150,151,156,161,168,197,198,230,231,314,328,332,333,334,335],"eras":[248,249],"error":[26],"exampl":[151,152,241],"excel":[352],"except":[70,71,72,78,341,348],"exist":[148],"exit":[35,89,90],"extrem":[345],"f32":[0,36,211,343],"f32cmp":[36],"f64":[1,37,206,212,350],"f64cmp":[37],"fail":[35,66,88,89,90,106,107,348],"false":[19],"famili":[341,348],"familii":[237],"fast":[237,345],"fastest":[341,348],"first":[166,195,228,246,321,322],"flag":[26],"floating-point":[0,1,7,341,343,348,350],"fmt":[70,243,255,261,266,271,276],"follow":[151,152,241],"foreach":[101,102,113],"format":[243,245,255,258,261,263,266,268,271,273,276,278],"four":[341],"free":[16,132,144,145,159,160,184,186,217,219,247,250,283,284,312,313,336],"from":[150,151,165,166,167,180,194,195,199,203,227,228,232,236,237,248,251,252,253,255,258,292,304,319,320,321,322,327,328,329,341,348],"front":[136,138,166,195,198,228,231,274,275,276,277,278,321,322,325,326],"func":[13,14,15,16,17,18,53],"function":[13,14,17,30,31,147,151,163,286],"gener":[204,206,207,208,209,211,212,213,214,237,239,240,341,343,344,345,347,348,350,351,352,354],"get":[27,28,29,80,86,92,126,133,151,152,153,161,193,196,226,229,241,251,252,314,315],"given":[148,161,193,205,206,207,208,210,211,212,213,214,226,238,239,240,249,259,260,261,262,263,264,265,266,267,268,314,317,318,328,334,335,342,343,344,346,347,349,350,351,353,354],"ha":[352],"half":[68],"hash":[17,50,51,142,143,144,145,148,149,150,151,152],"have":[341],"heap":[40,41,92,154,158,159,160,161,164,165,166,167,168],"heapifi":[38,39],"heapsort":[40,41],"high-qual":[237],"hold":[70,71,72,78],"how":[151,152,241],"i128":[127,169,172],"i128_add":[170],"i128_and":[171],"i128_cmp":[172],"i128_div":[173],"i128_max":[20],"i128_min":[21],"i128_minus":[174],"i128_mul":[175],"i128_not":[176],"i128_or":[177],"i128_shl":[178],"i128_shr":[179],"i128_sub":[180],"i128_width":[22],"i128_xor":[181],"i16":[2,42],"i16cmp":[42],"i32":[3,43,128],"i32cmp":[43],"i64":[4,44,129],"i64cmp":[44],"i8":[5,45],"i8cmp":[45],"includ":[70,71,72,78],"index":[161,249,259,260,261,262,263,264,265,266,267,268,314,317,318,328,334,335],"info":[26],"init":[103,114,118,134,146,147,154,162,163,187,205,210,220,238,241,253,255,256,257,258,285,286,316,342,346,349,353],"init0":[254],"initi":[205,210,237,238,342,346,349,353],"inord":[287],"insert":[46,47,148,164,188,189,221,222,259,260,261,262,263,288,317,318],"inssort":[46,47],"integ":[2,3,4,5,6,8,9,10,11,12,169,294],"isiz":[6,48,141],"isize":[6],"isizecmp":[48],"issu":[341,348],"it":[148],"iter":[152,156,157],"itself":[284],"jenkin":[50,51],"jhash":[49],"jhash32":[50],"jhash64":[51],"just":[348],"kei":[17,153,155],"knuth":[63,64],"larg":[70,71,72,78],"largest":[104],"last":[165,194,227,319,320],"lead":[83,84,297],"left":[108,109,178,302],"len":[190,223,244,256,262,267,272,277],"linear":[341,348],"list":[100,101,102,103,182,183,184,185,186,187,190,191,192,194,195,196,197,198,199,200,201,202,203,215,216,217,218,219,220,223,224,225,227,228,229,230,231,232,233,234,235,236],"logic":[171,177,181,296,301,305],"lookup":[149,191,192,224,225,289],"low":[341,348],"lowest":[105,341,348],"m":[207,212,214],"mani":[318,320,322,324,326],"max":[104],"memori":[154,330,336],"messag":[26,52,53],"might":[348],"min":[105],"minu":[174],"most":[83,84,297],"mul":[54,55,56,175,300],"multipli":[54,55,56,175,300],"murmurhash3":[57,58,59],"negat":[176],"new":[143,146,147,154,162,163,187,197,198,220,230,231,253,254,255,256,257,258,279,285,286,316,339],"next":[60,61,62,155,206,207,208,211,212,213,214,239,240,343,344,347,350,351,354],"node":[103,114,117,118,184,188,189,194,195,199,217,221,222,227,228,232,283,284,288,292,293],"not":[185,218],"noth":[155],"now":[155],"nth":[193,226],"null":[70,71,72,78],"number":[0,1,7,32,33,34,54,55,56,83,84,190,206,207,208,211,212,213,214,223,237,239,240,297,341,343,344,347,348,350,351,354],"on":[148,188,189,203,221,222,236],"one'":[176],"onto":[197,198,230,231],"oper":[171,177,181,296,301,305],"or":[155],"other":[188,189,221,222],"output":[70,71,72,78,151,152,241,341,348],"over":[152],"overwrit":[264,265,266,267,268,335],"pass":[341,345,348,352],"pcg128":[204,206,207,208],"pcg64":[209,211,212,213,214],"perform":[171,176,177,181,296,301,305],"platform":[49,57,67],"point":[155,157],"pointer":[6,12,156],"pop":[135,136,165,166,194,195,227,228,319,320,321,322],"posit":[83,84,193,196,226,229,297],"postord":[290],"pow2":[32,33,34,54,55,56,60,61,62],"power":[32,33,34,54,55,56,60,61,62],"precis":[0,1,7],"preoder":[291],"preorder":[291],"print":[26,52,241],"probe":[142],"push":[137,138,197,198,230,231,269,270,271,272,273,274,275,276,277,278,323,324,325,326],"quadrat":[142],"quadrupl":[7],"quicksort":[63,64],"random":[206,207,208,211,212,213,214,239,240,343,344,347,350,351,354],"rang":[315,329,335],"real":[7,65],"realcmp":[65],"recommend":[237],"releas":[154],"remov":[150,151,156,165,166,167,194,195,199,227,228,232,292,319,320,321,322,327,328,329],"replac":[148,157,242,243,244,245],"repres":[158],"requir":[330],"reserv":[330],"result":[127,128,129,141,155,306,307,308,309],"retriev":[153,155],"return":[66,106,107,190,223],"revers":[102,200,233,331],"right":[110,111,179,303],"rock-solid":[345,352],"rotat":[108,109,110,111],"rotl32":[108],"rotl64":[109],"rotr32":[110],"rotr64":[111],"round":[60,61,62],"rs":[206,208,211,213],"rx":[207,212,214],"s":[215],"search":[30,31,149,168,191,192,224,225,289,332,333],"second":[246],"seed":[205,210,237,238,342,346,349,353],"self-balanc":[281],"set":[334,335],"seudorandom":[237],"shift":[178,179,302,303],"shl":[178,302],"should":[30,31,151,152,241],"show":[151,152,241],"shr":[179,303],"shrink":[139,336],"sign":[2,3,4,5,6,169],"signific":[83,84,297],"similar":[151,152,241],"singl":[0],"singly-link":[215,220],"siphash":[67,68,69],"siphash32":[68],"siphash64":[69],"size":[6,12,142,241,257,310,316],"slist":[112,113,114],"sm64":[237],"so":[341,348],"sort":[30,31,40,41,46,47,63,64,201,202,234,235,337,338],"speed":[352],"splice":[203,236],"splitmix64":[237],"start":[83,84,248,251,297],"state":[204,205,206,207,208,209,210,211,212,213,214,238,239,240,342,343,344,346,347,349,350,351,353,354],"stdout":[241],"steal":[279,280,339,340],"steal0":[280,340],"store":[127,128,129,141,306,307,308,309],"strdup":[70,71],"strfmt":[72],"string":[70,71,72,78,241,243,245,246,247,248,249,250,251,252,255,258,260,261,263,266,268,270,271,273,275,276,278,279,280],"structur":[158],"sub":[180,304],"sub-n":[345,352],"subtract":[180,304],"swap":[81],"tabl":[142,143,144,145,148,149,150,151,152],"talloc":[115],"talloc0":[116],"termin":[70,71,72,78],"test":[341,345,348,352],"those":[348],"three":[348],"too":[341,348],"transfer":[203,236],"travers":[287,290,291],"trb_abs":[27],"trb_abs32":[28],"trb_abs64":[29],"trb_array_cell":[79],"trb_array_get":[80],"trb_array_swap":[81],"trb_binary_search":[30],"trb_binary_search_data":[31],"trb_clz":[82],"trb_clz32":[83],"trb_clz64":[84],"trb_container_of":[85],"trb_deque_destroy":[131],"trb_deque_free":[132],"trb_deque_get":[133],"trb_deque_get_unsafe":[86],"trb_deque_init":[134],"trb_deque_pop_back":[135],"trb_deque_pop_front":[136],"trb_deque_push_back":[137],"trb_deque_push_front":[138],"trb_deque_shrink":[139],"trb_distance_of":[87],"trb_div_pow2":[32],"trb_div_pow2_32":[33],"trb_div_pow2_64":[34],"trb_do_if_fail":[88],"trb_exit_if_fail":[89],"trb_exit_if_fail_critical":[35],"trb_exit_with_code_if_fail":[90],"trb_f32cmp":[36],"trb_f64cmp":[37],"trb_hash_table_add":[143],"trb_hash_table_destroy":[144],"trb_hash_table_free":[145],"trb_hash_table_init":[146],"trb_hash_table_init_data":[147],"trb_hash_table_insert":[148],"trb_hash_table_iter_get":[153],"trb_hash_table_iter_init":[154],"trb_hash_table_iter_next":[155],"trb_hash_table_iter_remove":[156],"trb_hash_table_iter_replace":[157],"trb_hash_table_lookup":[149],"trb_hash_table_remove":[150],"trb_hash_table_remove_all":[151],"trb_heap_destroy":[159],"trb_heap_free":[160],"trb_heap_get":[161],"trb_heap_get_unsafe":[92],"trb_heap_init":[162],"trb_heap_init_data":[163],"trb_heap_insert":[164],"trb_heap_pop_back":[165],"trb_heap_pop_front":[166],"trb_heap_remove":[167],"trb_heap_search":[168],"trb_heapify":[38],"trb_heapify_data":[39],"trb_heapsort":[40],"trb_heapsort_data":[41],"trb_i16cmp":[42],"trb_i32cmp":[43],"trb_i64cmp":[44],"trb_i8cmp":[45],"trb_inssort":[46],"trb_inssort_data":[47],"trb_isizecmp":[48],"trb_jhash":[49],"trb_jhash32":[50],"trb_jhash64":[51],"trb_list_copy":[183],"trb_list_destroy":[184],"trb_list_empty":[185],"trb_list_entry":[100],"trb_list_foreach":[101],"trb_list_foreach_reverse":[102],"trb_list_free":[186],"trb_list_init":[187],"trb_list_insert_after":[188],"trb_list_insert_before":[189],"trb_list_len":[190],"trb_list_lookup":[191],"trb_list_lookup_data":[192],"trb_list_node_init":[103],"trb_list_nth":[193],"trb_list_pop_back":[194],"trb_list_pop_front":[195],"trb_list_position":[196],"trb_list_push_back":[197],"trb_list_push_front":[198],"trb_list_remove":[199],"trb_list_reverse":[200],"trb_list_sort":[201],"trb_list_sort_data":[202],"trb_list_splice":[203],"trb_max":[104],"trb_message":[52],"trb_message_func":[53],"trb_min":[105],"trb_mul_pow2":[54],"trb_mul_pow2_32":[55],"trb_mul_pow2_64":[56],"trb_murmurhash3":[57],"trb_murmurhash3_32":[58],"trb_murmurhash3_64":[59],"trb_pcg128_init":[205],"trb_pcg128_next_f64":[206],"trb_pcg128_next_u128":[207],"trb_pcg128_next_u64":[208],"trb_pcg64_init":[210],"trb_pcg64_next_f32":[211],"trb_pcg64_next_f64":[212],"trb_pcg64_next_u32":[213],"trb_pcg64_next_u64":[214],"trb_pow2":[60],"trb_pow2_32":[61],"trb_pow2_64":[62],"trb_quicksort":[63],"trb_quicksort_data":[64],"trb_realcmp":[65],"trb_return_if_fail":[106],"trb_return_if_fail_warning":[66],"trb_return_val_if_fail":[107],"trb_rotl32":[108],"trb_rotl64":[109],"trb_rotr32":[110],"trb_rotr64":[111],"trb_siphash":[67],"trb_siphash32":[68],"trb_siphash64":[69],"trb_slist_copy":[216],"trb_slist_destroy":[217],"trb_slist_empty":[218],"trb_slist_entry":[112],"trb_slist_foreach":[113],"trb_slist_free":[219],"trb_slist_init":[220],"trb_slist_insert_after":[221],"trb_slist_insert_before":[222],"trb_slist_len":[223],"trb_slist_lookup":[224],"trb_slist_lookup_data":[225],"trb_slist_node_init":[114],"trb_slist_nth":[226],"trb_slist_pop_back":[227],"trb_slist_pop_front":[228],"trb_slist_position":[229],"trb_slist_push_back":[230],"trb_slist_push_front":[231],"trb_slist_remove":[232],"trb_slist_reverse":[233],"trb_slist_sort":[234],"trb_slist_sort_data":[235],"trb_slist_splice":[236],"trb_sm64_init":[238],"trb_sm64_next_u32":[239],"trb_sm64_next_u64":[240],"trb_strdup_fmt":[70],"trb_strdup_vfmt":[71],"trb_strfmt":[72],"trb_string_assign":[242],"trb_string_assign_fmt":[243],"trb_string_assign_len":[244],"trb_string_assign_vfmt":[245],"trb_string_cmp":[246],"trb_string_destroy":[247],"trb_string_erase":[248],"trb_string_erase_c":[249],"trb_string_free":[250],"trb_string_get":[251],"trb_string_get_c":[252],"trb_string_init":[253],"trb_string_init0":[254],"trb_string_init_fmt":[255],"trb_string_init_len":[256],"trb_string_init_sized":[257],"trb_string_init_vfmt":[258],"trb_string_insert":[259],"trb_string_insert_c":[260],"trb_string_insert_fmt":[261],"trb_string_insert_len":[262],"trb_string_insert_vfmt":[263],"trb_string_overwrite":[264],"trb_string_overwrite_c":[265],"trb_string_overwrite_fmt":[266],"trb_string_overwrite_len":[267],"trb_string_overwrite_vfmt":[268],"trb_string_push_back":[269],"trb_string_push_back_c":[270],"trb_string_push_back_fmt":[271],"trb_string_push_back_len":[272],"trb_string_push_back_vfmt":[273],"trb_string_push_front":[274],"trb_string_push_front_c":[275],"trb_string_push_front_fmt":[276],"trb_string_push_front_len":[277],"trb_string_push_front_vfmt":[278],"trb_string_steal":[279],"trb_string_steal0":[280],"trb_talloc":[115],"trb_talloc0":[116],"trb_tree_copy":[282],"trb_tree_destroy":[283],"trb_tree_free":[284],"trb_tree_init":[285],"trb_tree_init_data":[286],"trb_tree_inorder":[287],"trb_tree_insert":[288],"trb_tree_lookup":[289],"trb_tree_node_entry":[117],"trb_tree_node_init":[118],"trb_tree_postorder":[290],"trb_tree_preorder":[291],"trb_tree_remove":[292],"trb_u16cmp":[73],"trb_u32cmp":[74],"trb_u64cmp":[75],"trb_u8cmp":[76],"trb_usizecmp":[77],"trb_vector_copy":[311],"trb_vector_destroy":[312],"trb_vector_free":[313],"trb_vector_get":[314],"trb_vector_get_range":[315],"trb_vector_get_unsafe":[126],"trb_vector_init":[316],"trb_vector_insert":[317],"trb_vector_insert_many":[318],"trb_vector_pop_back":[319],"trb_vector_pop_back_many":[320],"trb_vector_pop_front":[321],"trb_vector_pop_front_many":[322],"trb_vector_push_back":[323],"trb_vector_push_back_many":[324],"trb_vector_push_front":[325],"trb_vector_push_front_many":[326],"trb_vector_remove_all":[327],"trb_vector_remove_index":[328],"trb_vector_remove_range":[329],"trb_vector_require":[330],"trb_vector_reverse":[331],"trb_vector_search":[332],"trb_vector_search_data":[333],"trb_vector_set":[334],"trb_vector_set_range":[335],"trb_vector_shrink":[336],"trb_vector_sort":[337],"trb_vector_sort_data":[338],"trb_vector_steal":[339],"trb_vector_steal0":[340],"trb_vstrfmt":[78],"trb_xs128p_init":[342],"trb_xs128p_next_f32":[343],"trb_xs128p_next_u32":[344],"trb_xs128ss_init":[346],"trb_xs128ss_next":[347],"trb_xs256p_init":[349],"trb_xs256p_next_f64":[350],"trb_xs256p_next_u64":[351],"trb_xs256ss_init":[353],"trb_xs256ss_next":[354],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[130],"trbdequebucket":[140],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[142],"trbhashtableiter":[152],"trbheap":[158],"trblist":[182],"trbmessageflags":[26],"trbpcg128":[204],"trbpcg64":[209],"trbslist":[215],"trbsm64":[237],"trbstring":[241,279],"trbstring'":[280],"trbtree":[281],"trbtreenode":[293],"trbuserfunc":[18],"trbvector":[310],"trbxs128p":[341],"trbxs128ss":[345],"trbxs256p":[348],"trbxs256ss":[352],"tree":[117,118,281,282,283,284,287,288,289,290,291,292,293],"true":[23],"two":[13,14,32,33,34,36,37,42,43,44,45,48,54,55,56,65,73,74,75,76,77,127,128,129,141,172,298,306,307,308,309],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12,169,294],"u128":[207,294,298,306],"u128_add":[295],"u128_and":[296],"u128_clz":[297],"u128_cmp":[298],"u128_div":[299],"u128_max":[24],"u128_mul":[300],"u128_or":[301],"u128_shl":[302],"u128_shr":[303],"u128_sub":[304],"u128_width":[25],"u128_xor":[305],"u16":[8,73],"u16cmp":[73],"u32":[9,74,213,239,307,344],"u32cmp":[74],"u64":[10,75,208,214,240,308,351],"u64cmp":[75],"u8":[11,76],"u8cmp":[76],"ud128":[306],"ud32":[307],"ud64":[308],"udsiz":[309],"udsize":[309],"unsaf":[86,92,126],"unsign":[8,9,10,11,12,294],"unus":[336],"up":[60,61,62,170,295],"upper":[59],"us":[13,30,31,39,40,41,46,47,49,57,63,64,67,151,154,192,202,206,207,208,211,212,213,214,225,235,333,338,341,348],"user":[13,18,31,39,41,47,147,163,192,202,225,235,286,333,338],"usiz":[12,77,309],"usize":[12],"usizecmp":[77],"usual":[341,348],"val":[107],"valu":[13,14,27,28,29,104,105,148,153,155,157,161,314,334,335],"vector":[126,310],"version":[92,126],"vfmt":[71,245,258,263,268,273,278],"vstrfmt":[78],"want":[30,31],"warn":[66],"warning":[26],"we":[59,341],"whether":[185,218],"which":[348],"x64":[59],"x86":[58],"xor":[181,305],"xorshift":[341,348],"xoshiro":[237],"xoshiro128**":[345],"xoshiro128+":[341],"xoshiro256**":[352],"xoshiro256+":[348],"xs":[207,212,214],"xs128p":[341],"xs128ss":[345],"xs256p":[348],"xs256ss":[352],"xsh":[206,208,211,213],"you":[30,31,151,152,241],"zero":[262,267,272,277,317,318,323,324,325,326,334,335]}}