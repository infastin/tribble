{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"real","ctype":"real","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I128_MAX","ident":"I128_MAX","summary":"No description available."},{"type":"constant","name":"I128_MIN","ident":"I128_MIN","summary":"No description available."},{"type":"constant","name":"I128_WIDTH","ident":"I128_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U128_MAX","ident":"U128_MAX","summary":"No description available."},{"type":"constant","name":"U128_WIDTH","ident":"U128_WIDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs32","ident":"trb_abs32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs64","ident":"trb_abs64","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I128_C","ident":"I128_C","summary":"No description available."},{"type":"function_macro","name":"I128_HI","ident":"I128_HI","summary":"No description available."},{"type":"function_macro","name":"I128_LO","ident":"I128_LO","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U128_C","ident":"U128_C","summary":"No description available."},{"type":"function_macro","name":"U128_HI","ident":"U128_HI","summary":"No description available."},{"type":"function_macro","name":"U128_LO","ident":"U128_LO","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get","ident":"trb_deque_get","summary":"Gets the value of the entry in the deque ..."},{"type":"function_macro","name":"deque_ptr","ident":"trb_deque_ptr","summary":"Gets the pointer to the entry in the deque ..."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"function_macro","name":"heap_ptr","ident":"trb_heap_ptr","summary":"Gets the pointer to the entry in the heap ..."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"string_get","ident":"trb_string_get","summary":"Gets the character in the string at the given index."},{"type":"function_macro","name":"string_ptr","ident":"trb_string_ptr","summary":"Gets the pointer to the character in the string ..."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"function_macro","name":"vector_ptr","ident":"trb_vector_ptr","summary":"Gets the pointer to the entry in the array ..."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"add","type_name":"i128","ident":"i128_add","summary":"Adds up @a and @b."},{"type":"method","name":"add","type_name":"u128","ident":"u128_add","summary":"Adds up @a and @b."},{"type":"method","name":"and","type_name":"i128","ident":"i128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"and","type_name":"u128","ident":"u128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"clz","type_name":"u128","ident":"u128_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"method","name":"cmp","type_name":"i128","ident":"i128_cmp","summary":"Compares two `i128`."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"cmp","type_name":"u128","ident":"u128_cmp","summary":"Compares two `u128`."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"No description available."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"div","type_name":"i128","ident":"i128_div","summary":"Divides @num by @denom."},{"type":"method","name":"div","type_name":"u128","ident":"u128_div","summary":"Divides @num by @denom."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"No description available."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"No description available."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on heap, use ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"Deque","ident":"trb_deque_insert","summary":"No description available."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Deque","ident":"trb_deque_insert_many","summary":"No description available."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"minus","type_name":"i128","ident":"i128_minus","summary":"No description available."},{"type":"method","name":"mul","type_name":"i128","ident":"i128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"mul","type_name":"u128","ident":"u128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"not","type_name":"i128","ident":"i128_not","summary":"Performs one's complement negation for @num."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"or","type_name":"i128","ident":"i128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"or","type_name":"u128","ident":"u128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"No description available."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_back_many","type_name":"Deque","ident":"trb_deque_pop_back_many","summary":"No description available."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the array."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"No description available."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"pop_front_many","type_name":"Deque","ident":"trb_deque_pop_front_many","summary":"No description available."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"No description available."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Deque","ident":"trb_deque_push_back_many","summary":"No description available."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"No description available."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Deque","ident":"trb_deque_push_front_many","summary":"No description available."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"Deque","ident":"trb_deque_remove","summary":"No description available."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove","type_name":"Vector","ident":"trb_vector_remove","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_all","type_name":"Deque","ident":"trb_deque_remove_all","summary":"No description available."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_range","type_name":"Deque","ident":"trb_deque_remove_range","summary":"No description available."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Deque","ident":"trb_deque_search","summary":"No description available."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Deque","ident":"trb_deque_search_data","summary":"No description available."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"shl","type_name":"i128","ident":"i128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shl","type_name":"u128","ident":"u128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shr","type_name":"i128","ident":"i128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shr","type_name":"u128","ident":"u128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"No description available."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"method","name":"sub","type_name":"i128","ident":"i128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"sub","type_name":"u128","ident":"u128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"xor","type_name":"i128","ident":"i128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"method","name":"xor","type_name":"u128","ident":"u128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"No description available."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"d128","ctype":"d128","summary":"Stores the result of division of two `i128`."},{"type":"record","name":"d32","ctype":"d32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"d64","ctype":"d64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"dsize","ctype":"dsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"i128","ctype":"i128","summary":"A signed 128-bit integer type."},{"type":"record","name":"u128","ctype":"u128","summary":"An unsigned 128-bit integer type."},{"type":"record","name":"ud128","ctype":"ud128","summary":"Stores the result of division of two `u128`."},{"type":"record","name":"ud32","ctype":"ud32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"ud64","ctype":"ud64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udsize","ctype":"udsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[30,31,165,166,250,254,348,352,355,359],"-":[250,348,352,355,359],"0-bit":[83,84,308],"1-3":[68,69],"128":[59],"128-bit":[182,305],"16-bit":[2,8],"2":[60,61,62],"2^n":[156],"32":[33,55,58,61],"32-bit":[3,9,49,50,57,67,348],"64":[34,56,59,62],"64-bit":[4,10,49,51,57,67,250,355],"8-bit":[5,11],"C":[95,98,99,100,101,123,126,127,128,129],"FALSE":[19],"FORMAT":[92],"HI":[96,124],"I128":[20,21,22,95,96,97],"I128_C":[95],"I128_HI":[96],"I128_LO":[97],"I16":[98],"I16_C":[98],"I32":[99],"I32_C":[99],"I64":[100],"I64_C":[100],"I8":[101],"I8_C":[101],"LO":[97,125],"MAX":[20,24],"MIN":[21],"TRB_FORMAT":[92],"TRUE":[23],"U128":[24,25,123,124,125],"U128_C":[123],"U128_HI":[124],"U128_LO":[125],"U16":[126],"U16_C":[126],"U32":[127],"U32_C":[127],"U64":[128],"U64_C":[128],"U8":[129],"U8_C":[129],"WIDTH":[22,25],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[50],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[51],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[63,64],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[58,59],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[68],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[69],"[reference]https://prng.di.unimi.it/":[250,348,352,355,359],"[reference]https://www.pcg-random.org/":[217,222],"`free":[168],"`snprintf`":[70,72],"`vsnprintf`":[71,78],"ab":[27],"abs32":[28],"abs64":[29],"absolut":[27,28,29],"accept":[161,176,297],"add":[157,183,210,211,243,244,280,281,282,283,284,285,286,287,288,289,306,332,333,334,335],"advanc":[169],"after":[201,202,234,235],"all":[150,165,197,230,294,295,337,348,352,355,359],"all-purpos":[352,359],"alloc":[70,71,72,78,168],"an":[8,9,10,11,12,162,165,166,172,254,305,348,355],"analog":[70,71,72,78],"and":[355],"and/or":[169],"anoth":[216,249],"arrai":[30,31,38,39,40,41,46,47,63,64,79,80,81,130,131,172,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"array'":[347],"as":[348,355],"assign":[255,256,257,258],"avail":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,108,109,114,115,116,119,120,121,122,123,124,125,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,187],"avl":[292],"awar":[348],"back":[141,142,145,146,178,207,210,240,243,280,281,282,283,284,328,329,332,333],"becom":[291,347],"befor":[202,235],"begin":[211,244,285,286,287,288,289,334,335],"best":[348,355],"between":[106,107],"binari":[30,31],"bit":[59,83,84,110,111,112,113,191,192,308,313,314,348,355],"bucket":[158],"buffer":[173,260,290,291,323,339,343,346,347],"byte":[70,71,72,78,257,261,267,268,273,278,283,288],"c":[262,271,276,281,286],"can":[348,355],"capac":[268],"case":[348,355],"cell":[79],"charact":[117,118,262,271,276,281,286],"check":[198,231],"choos":[106,107],"circular":[195,228],"clz":[82,308],"clz32":[83],"clz64":[84],"cmp":[13,14,185,259,309],"code":[91],"compar":[13,14,36,37,42,43,44,45,48,65,73,74,75,76,77,185,259,309],"comparison":[161,176,297],"complement":[189],"complet":[159,174,199,232,263,324],"complex":[348,355],"consid":[348,355],"contain":[85],"content":[255,256,257,258],"copi":[15,196,229,293,322],"count":[83,84,308],"creat":[160,161,168,175,176,200,233,264,265,266,267,268,269,290,293,296,297,322,325,346],"critic":[35],"critical":[26],"current":[170,171],"d128":[132],"d32":[133],"d64":[134],"data":[13,31,39,41,47,64,153,161,172,176,205,215,238,248,297,342,345],"debug":[26],"dequ":[86,87,135],"descript":[15,16,18,19,20,21,22,23,24,25,26,35,53,66,79,80,81,82,85,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,108,109,114,115,116,119,120,121,122,123,124,125,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,187],"destroi":[136,158,173,197,230,260,294,323],"discard":[59],"distanc":[88],"div":[32,33,34,186,310],"divid":[32,33,34,186,310],"divis":[132,133,134,155,317,318,319,320],"do":[89],"doubl":[1],"doubly-link":[195,200],"dsize":[155],"dynam":[254,321,325],"element":[177,178,179,180,203,204,205,206,209,216,236,237,238,239,242,249,300,326,327,328,329,330,331,332,333,334,335,337,338],"empti":[198,231],"end":[210,243,280,281,282,283,284,332,333],"enough":[70,71,72,78],"entri":[30,31,86,87,93,94,102,114,121,130,131,157,162,163,164,165,170,181,210,211,243,244,336,341,342],"eras":[261,262],"error":[26],"exampl":[165,166,254],"excel":[359],"except":[70,71,72,78,348,355],"exist":[162],"exit":[35,90,91],"extrem":[352],"f32":[0,36,224,350],"f32cmp":[36],"f64":[1,37,219,225,357],"f64cmp":[37],"fail":[35,66,89,90,91,108,109,355],"false":[19],"famili":[348,355],"familii":[250],"fast":[250,352],"fastest":[348,355],"first":[179,208,241,259,330,331],"flag":[26],"floating-point":[0,1,7,348,350,355,357],"fmt":[70,256,266,272,277,282,287],"follow":[165,166,254],"foreach":[103,104,115],"format":[256,258,266,269,272,274,277,279,282,284,287,289],"four":[348],"free":[16,137,158,159,173,174,197,199,230,232,260,263,294,295,323,324,343],"from":[164,165,178,179,180,193,207,208,212,216,240,241,245,249,250,261,264,266,269,303,315,328,329,330,331,336,337,338,348,355],"front":[143,144,147,148,179,208,211,241,244,285,286,287,288,289,330,331,334,335],"func":[13,14,15,16,17,18,53],"function":[13,14,17,30,31,161,165,176,297],"gener":[217,219,220,221,222,224,225,226,227,250,252,253,348,350,351,352,354,355,357,358,359,361],"get":[27,28,29,80,86,87,93,94,117,118,130,131,165,166,167,206,209,239,242,254],"given":[86,87,93,94,117,118,130,131,162,206,218,219,220,221,223,224,225,226,227,239,251,252,253,262,270,271,272,273,274,275,276,277,278,279,326,327,336,349,350,351,353,354,356,357,358,360,361],"ha":[359],"half":[68],"hash":[17,50,51,156,157,158,159,162,163,164,165,166],"have":[348],"heap":[40,41,93,94,168,172,173,174,177,178,179,180,181],"heapifi":[38,39],"heapsort":[40,41],"high-qual":[250],"hold":[70,71,72,78],"how":[165,166,254],"i128":[132,182,185],"i128_add":[183],"i128_and":[184],"i128_cmp":[185],"i128_div":[186],"i128_max":[20],"i128_min":[21],"i128_minus":[187],"i128_mul":[188],"i128_not":[189],"i128_or":[190],"i128_shl":[191],"i128_shr":[192],"i128_sub":[193],"i128_width":[22],"i128_xor":[194],"i16":[2,42],"i16cmp":[42],"i32":[3,43,133],"i32cmp":[43],"i64":[4,44,134],"i64cmp":[44],"i8":[5,45],"i8cmp":[45],"includ":[70,71,72,78],"index":[86,87,93,94,117,118,130,131,262,270,271,272,273,274,275,276,277,278,279,326,327,336],"info":[26],"init":[105,116,122,138,160,161,168,175,176,200,218,223,233,251,254,264,266,267,268,269,296,297,325,349,353,356,360],"init0":[265],"initi":[218,223,250,251,349,353,356,360],"inord":[298],"insert":[46,47,139,140,162,177,201,202,234,235,270,271,272,273,274,299,326,327],"inssort":[46,47],"integ":[2,3,4,5,6,8,9,10,11,12,182,305],"isiz":[6,48,155],"isize":[6],"isizecmp":[48],"issu":[348,355],"it":[162],"iter":[166,170,171],"itself":[295],"jenkin":[50,51],"jhash":[49],"jhash32":[50],"jhash64":[51],"just":[355],"kei":[17,167,169],"knuth":[63,64],"larg":[70,71,72,78],"largest":[106],"last":[178,207,240,328,329],"lead":[83,84,308],"left":[110,111,191,313],"len":[203,236,257,267,273,278,283,288],"linear":[348,355],"list":[102,103,104,105,195,196,197,198,199,200,203,204,205,207,208,209,210,211,212,213,214,215,216,228,229,230,231,232,233,236,237,238,240,241,242,243,244,245,246,247,248,249],"logic":[184,190,194,307,312,316],"lookup":[163,204,205,237,238,300],"low":[348,355],"lowest":[107,348,355],"m":[220,225,227],"mani":[140,142,144,146,148,327,329,331,333,335],"max":[106],"memori":[168,339,343],"messag":[26,52,53],"might":[355],"min":[107],"minu":[187],"most":[83,84,308],"mul":[54,55,56,188,311],"multipli":[54,55,56,188,311],"murmurhash3":[57,58,59],"negat":[189],"new":[157,160,161,168,175,176,200,210,211,233,243,244,264,265,266,267,268,269,290,296,297,325,346],"next":[60,61,62,169,219,220,221,224,225,226,227,252,253,350,351,354,357,358,361],"node":[105,116,121,122,197,201,202,207,208,212,230,234,235,240,241,245,294,295,299,303,304],"not":[198,231],"noth":[169],"now":[169],"nth":[206,239],"null":[70,71,72,78],"number":[0,1,7,32,33,34,54,55,56,83,84,203,219,220,221,224,225,226,227,236,250,252,253,308,348,350,351,354,355,357,358,361],"on":[162,201,202,216,234,235,249],"one'":[189],"onto":[210,211,243,244],"oper":[184,190,194,307,312,316],"or":[169],"other":[201,202,234,235],"output":[70,71,72,78,165,166,254,348,355],"over":[166],"overwrit":[275,276,277,278,279],"pass":[348,352,355,359],"pcg128":[217,219,220,221],"pcg64":[222,224,225,226,227],"perform":[184,189,190,194,307,312,316],"platform":[49,57,67],"point":[169,171],"pointer":[6,12,87,94,118,131,170],"pop":[141,142,143,144,178,179,207,208,240,241,328,329,330,331],"posit":[83,84,206,209,239,242,308],"postord":[301],"pow2":[32,33,34,54,55,56,60,61,62],"power":[32,33,34,54,55,56,60,61,62],"precis":[0,1,7],"preoder":[302],"preorder":[302],"print":[26,52,254],"probe":[156],"ptr":[87,94,118,131],"push":[145,146,147,148,210,211,243,244,280,281,282,283,284,285,286,287,288,289,332,333,334,335],"quadrat":[156],"quadrupl":[7],"quicksort":[63,64],"random":[219,220,221,224,225,226,227,252,253,350,351,354,357,358,361],"rang":[151,338],"real":[7,65],"realcmp":[65],"recommend":[250],"releas":[168],"remov":[149,150,151,164,165,170,178,179,180,207,208,212,240,241,245,303,328,329,330,331,336,337,338],"replac":[162,171,255,256,257,258],"repres":[172],"requir":[339],"reserv":[339],"result":[132,133,134,155,169,317,318,319,320],"retriev":[167,169],"return":[66,108,109,203,236],"revers":[104,213,246,340],"right":[112,113,192,314],"rock-solid":[352,359],"rotat":[110,111,112,113],"rotl32":[110],"rotl64":[111],"rotr32":[112],"rotr64":[113],"round":[60,61,62],"rs":[219,221,224,226],"rx":[220,225,227],"s":[228],"search":[30,31,152,153,163,181,204,205,237,238,300,341,342],"second":[259],"seed":[218,223,250,251,349,353,356,360],"self-balanc":[292],"seudorandom":[250],"shift":[191,192,313,314],"shl":[191,313],"should":[30,31,165,166,254],"show":[165,166,254],"shr":[192,314],"shrink":[154,343],"sign":[2,3,4,5,6,182],"signific":[83,84,308],"similar":[165,166,254],"singl":[0],"singly-link":[228,233],"siphash":[67,68,69],"siphash32":[68],"siphash64":[69],"size":[6,12,156,254,268,321,325],"slist":[114,115,116],"sm64":[250],"so":[348,355],"sort":[30,31,40,41,46,47,63,64,214,215,247,248,344,345],"speed":[359],"splice":[216,249],"splitmix64":[250],"start":[83,84,261,308],"state":[217,218,219,220,221,222,223,224,225,226,227,251,252,253,349,350,351,353,354,356,357,358,360,361],"stdout":[254],"steal":[290,291,346,347],"steal0":[291,347],"store":[132,133,134,155,317,318,319,320],"strdup":[70,71],"strfmt":[72],"string":[70,71,72,78,117,118,254,256,258,259,260,261,262,263,266,269,271,272,274,277,279,281,282,284,286,287,289,290,291],"structur":[172],"sub":[193,315],"sub-n":[352,359],"subtract":[193,315],"swap":[81],"tabl":[156,157,158,159,162,163,164,165,166],"talloc":[119],"talloc0":[120],"termin":[70,71,72,78],"test":[348,352,355,359],"those":[355],"three":[355],"too":[348,355],"transfer":[216,249],"travers":[298,301,302],"trb_abs":[27],"trb_abs32":[28],"trb_abs64":[29],"trb_array_cell":[79],"trb_array_get":[80],"trb_array_swap":[81],"trb_binary_search":[30],"trb_binary_search_data":[31],"trb_clz":[82],"trb_clz32":[83],"trb_clz64":[84],"trb_container_of":[85],"trb_deque_destroy":[136],"trb_deque_free":[137],"trb_deque_get":[86],"trb_deque_init":[138],"trb_deque_insert":[139],"trb_deque_insert_many":[140],"trb_deque_pop_back":[141],"trb_deque_pop_back_many":[142],"trb_deque_pop_front":[143],"trb_deque_pop_front_many":[144],"trb_deque_ptr":[87],"trb_deque_push_back":[145],"trb_deque_push_back_many":[146],"trb_deque_push_front":[147],"trb_deque_push_front_many":[148],"trb_deque_remove":[149],"trb_deque_remove_all":[150],"trb_deque_remove_range":[151],"trb_deque_search":[152],"trb_deque_search_data":[153],"trb_deque_shrink":[154],"trb_distance_of":[88],"trb_div_pow2":[32],"trb_div_pow2_32":[33],"trb_div_pow2_64":[34],"trb_do_if_fail":[89],"trb_exit_if_fail":[90],"trb_exit_if_fail_critical":[35],"trb_exit_with_code_if_fail":[91],"trb_f32cmp":[36],"trb_f64cmp":[37],"trb_hash_table_add":[157],"trb_hash_table_destroy":[158],"trb_hash_table_free":[159],"trb_hash_table_init":[160],"trb_hash_table_init_data":[161],"trb_hash_table_insert":[162],"trb_hash_table_iter_get":[167],"trb_hash_table_iter_init":[168],"trb_hash_table_iter_next":[169],"trb_hash_table_iter_remove":[170],"trb_hash_table_iter_replace":[171],"trb_hash_table_lookup":[163],"trb_hash_table_remove":[164],"trb_hash_table_remove_all":[165],"trb_heap_destroy":[173],"trb_heap_free":[174],"trb_heap_get":[93],"trb_heap_init":[175],"trb_heap_init_data":[176],"trb_heap_insert":[177],"trb_heap_pop_back":[178],"trb_heap_pop_front":[179],"trb_heap_ptr":[94],"trb_heap_remove":[180],"trb_heap_search":[181],"trb_heapify":[38],"trb_heapify_data":[39],"trb_heapsort":[40],"trb_heapsort_data":[41],"trb_i16cmp":[42],"trb_i32cmp":[43],"trb_i64cmp":[44],"trb_i8cmp":[45],"trb_inssort":[46],"trb_inssort_data":[47],"trb_isizecmp":[48],"trb_jhash":[49],"trb_jhash32":[50],"trb_jhash64":[51],"trb_list_copy":[196],"trb_list_destroy":[197],"trb_list_empty":[198],"trb_list_entry":[102],"trb_list_foreach":[103],"trb_list_foreach_reverse":[104],"trb_list_free":[199],"trb_list_init":[200],"trb_list_insert_after":[201],"trb_list_insert_before":[202],"trb_list_len":[203],"trb_list_lookup":[204],"trb_list_lookup_data":[205],"trb_list_node_init":[105],"trb_list_nth":[206],"trb_list_pop_back":[207],"trb_list_pop_front":[208],"trb_list_position":[209],"trb_list_push_back":[210],"trb_list_push_front":[211],"trb_list_remove":[212],"trb_list_reverse":[213],"trb_list_sort":[214],"trb_list_sort_data":[215],"trb_list_splice":[216],"trb_max":[106],"trb_message":[52],"trb_message_func":[53],"trb_min":[107],"trb_mul_pow2":[54],"trb_mul_pow2_32":[55],"trb_mul_pow2_64":[56],"trb_murmurhash3":[57],"trb_murmurhash3_32":[58],"trb_murmurhash3_64":[59],"trb_pcg128_init":[218],"trb_pcg128_next_f64":[219],"trb_pcg128_next_u128":[220],"trb_pcg128_next_u64":[221],"trb_pcg64_init":[223],"trb_pcg64_next_f32":[224],"trb_pcg64_next_f64":[225],"trb_pcg64_next_u32":[226],"trb_pcg64_next_u64":[227],"trb_pow2":[60],"trb_pow2_32":[61],"trb_pow2_64":[62],"trb_quicksort":[63],"trb_quicksort_data":[64],"trb_realcmp":[65],"trb_return_if_fail":[108],"trb_return_if_fail_warning":[66],"trb_return_val_if_fail":[109],"trb_rotl32":[110],"trb_rotl64":[111],"trb_rotr32":[112],"trb_rotr64":[113],"trb_siphash":[67],"trb_siphash32":[68],"trb_siphash64":[69],"trb_slist_copy":[229],"trb_slist_destroy":[230],"trb_slist_empty":[231],"trb_slist_entry":[114],"trb_slist_foreach":[115],"trb_slist_free":[232],"trb_slist_init":[233],"trb_slist_insert_after":[234],"trb_slist_insert_before":[235],"trb_slist_len":[236],"trb_slist_lookup":[237],"trb_slist_lookup_data":[238],"trb_slist_node_init":[116],"trb_slist_nth":[239],"trb_slist_pop_back":[240],"trb_slist_pop_front":[241],"trb_slist_position":[242],"trb_slist_push_back":[243],"trb_slist_push_front":[244],"trb_slist_remove":[245],"trb_slist_reverse":[246],"trb_slist_sort":[247],"trb_slist_sort_data":[248],"trb_slist_splice":[249],"trb_sm64_init":[251],"trb_sm64_next_u32":[252],"trb_sm64_next_u64":[253],"trb_strdup_fmt":[70],"trb_strdup_vfmt":[71],"trb_strfmt":[72],"trb_string_assign":[255],"trb_string_assign_fmt":[256],"trb_string_assign_len":[257],"trb_string_assign_vfmt":[258],"trb_string_cmp":[259],"trb_string_destroy":[260],"trb_string_erase":[261],"trb_string_erase_c":[262],"trb_string_free":[263],"trb_string_get":[117],"trb_string_init":[264],"trb_string_init0":[265],"trb_string_init_fmt":[266],"trb_string_init_len":[267],"trb_string_init_sized":[268],"trb_string_init_vfmt":[269],"trb_string_insert":[270],"trb_string_insert_c":[271],"trb_string_insert_fmt":[272],"trb_string_insert_len":[273],"trb_string_insert_vfmt":[274],"trb_string_overwrite":[275],"trb_string_overwrite_c":[276],"trb_string_overwrite_fmt":[277],"trb_string_overwrite_len":[278],"trb_string_overwrite_vfmt":[279],"trb_string_ptr":[118],"trb_string_push_back":[280],"trb_string_push_back_c":[281],"trb_string_push_back_fmt":[282],"trb_string_push_back_len":[283],"trb_string_push_back_vfmt":[284],"trb_string_push_front":[285],"trb_string_push_front_c":[286],"trb_string_push_front_fmt":[287],"trb_string_push_front_len":[288],"trb_string_push_front_vfmt":[289],"trb_string_steal":[290],"trb_string_steal0":[291],"trb_talloc":[119],"trb_talloc0":[120],"trb_tree_copy":[293],"trb_tree_destroy":[294],"trb_tree_free":[295],"trb_tree_init":[296],"trb_tree_init_data":[297],"trb_tree_inorder":[298],"trb_tree_insert":[299],"trb_tree_lookup":[300],"trb_tree_node_entry":[121],"trb_tree_node_init":[122],"trb_tree_postorder":[301],"trb_tree_preorder":[302],"trb_tree_remove":[303],"trb_u16cmp":[73],"trb_u32cmp":[74],"trb_u64cmp":[75],"trb_u8cmp":[76],"trb_usizecmp":[77],"trb_vector_copy":[322],"trb_vector_destroy":[323],"trb_vector_free":[324],"trb_vector_get":[130],"trb_vector_init":[325],"trb_vector_insert":[326],"trb_vector_insert_many":[327],"trb_vector_pop_back":[328],"trb_vector_pop_back_many":[329],"trb_vector_pop_front":[330],"trb_vector_pop_front_many":[331],"trb_vector_ptr":[131],"trb_vector_push_back":[332],"trb_vector_push_back_many":[333],"trb_vector_push_front":[334],"trb_vector_push_front_many":[335],"trb_vector_remove":[336],"trb_vector_remove_all":[337],"trb_vector_remove_range":[338],"trb_vector_require":[339],"trb_vector_reverse":[340],"trb_vector_search":[341],"trb_vector_search_data":[342],"trb_vector_shrink":[343],"trb_vector_sort":[344],"trb_vector_sort_data":[345],"trb_vector_steal":[346],"trb_vector_steal0":[347],"trb_vstrfmt":[78],"trb_xs128p_init":[349],"trb_xs128p_next_f32":[350],"trb_xs128p_next_u32":[351],"trb_xs128ss_init":[353],"trb_xs128ss_next":[354],"trb_xs256p_init":[356],"trb_xs256p_next_f64":[357],"trb_xs256p_next_u64":[358],"trb_xs256ss_init":[360],"trb_xs256ss_next":[361],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[135],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[156],"trbhashtableiter":[166],"trbheap":[172],"trblist":[195],"trbmessageflags":[26],"trbpcg128":[217],"trbpcg64":[222],"trbslist":[228],"trbsm64":[250],"trbstring":[254,290],"trbstring'":[291],"trbtree":[292],"trbtreenode":[304],"trbuserfunc":[18],"trbvector":[321],"trbxs128p":[348],"trbxs128ss":[352],"trbxs256p":[355],"trbxs256ss":[359],"tree":[121,122,292,293,294,295,298,299,300,301,302,303,304],"true":[23],"two":[13,14,32,33,34,36,37,42,43,44,45,48,54,55,56,65,73,74,75,76,77,132,133,134,155,185,309,317,318,319,320],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12,182,305],"u128":[220,305,309,317],"u128_add":[306],"u128_and":[307],"u128_clz":[308],"u128_cmp":[309],"u128_div":[310],"u128_max":[24],"u128_mul":[311],"u128_or":[312],"u128_shl":[313],"u128_shr":[314],"u128_sub":[315],"u128_width":[25],"u128_xor":[316],"u16":[8,73],"u16cmp":[73],"u32":[9,74,226,252,318,351],"u32cmp":[74],"u64":[10,75,221,227,253,319,358],"u64cmp":[75],"u8":[11,76],"u8cmp":[76],"ud128":[317],"ud32":[318],"ud64":[319],"udsiz":[320],"udsize":[320],"unsign":[8,9,10,11,12,305],"unus":[343],"up":[60,61,62,183,306],"upper":[59],"us":[13,30,31,39,40,41,46,47,49,57,63,64,67,165,168,205,215,219,220,221,224,225,226,227,238,248,342,345,348,355],"user":[13,18,31,39,41,47,161,176,205,215,238,248,297,342,345],"usiz":[12,77,320],"usize":[12],"usizecmp":[77],"usual":[348,355],"val":[109],"valu":[13,14,27,28,29,86,93,106,107,130,162,167,169,171],"vector":[130,131,321],"vfmt":[71,258,269,274,279,284,289],"vstrfmt":[78],"want":[30,31],"warn":[66],"warning":[26],"we":[59,348],"whether":[198,231],"which":[355],"x64":[59],"x86":[58],"xor":[194,316],"xorshift":[348,355],"xoshiro":[250],"xoshiro128**":[352],"xoshiro128+":[348],"xoshiro256**":[359],"xoshiro256+":[355],"xs":[220,225,227],"xs128p":[348],"xs128ss":[352],"xs256p":[355],"xs256ss":[359],"xsh":[219,221,224,226],"you":[30,31,165,166,254],"zero":[273,278,283,288,326,327,332,333,334,335]}}