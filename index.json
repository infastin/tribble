{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f128","ctype":"f128","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs_16","ident":"trb_abs_16","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_32","ident":"trb_abs_32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_64","ident":"trb_abs_64","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_8","ident":"trb_abs_8","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_size","ident":"trb_abs_size","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the slice using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the slice using binary ..."},{"type":"function","name":"chk_add_i16","ident":"trb_chk_add_i16","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i32","ident":"trb_chk_add_i32","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i64","ident":"trb_chk_add_i64","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i8","ident":"trb_chk_add_i8","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_isize","ident":"trb_chk_add_isize","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u16","ident":"trb_chk_add_u16","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u32","ident":"trb_chk_add_u32","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u64","ident":"trb_chk_add_u64","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u8","ident":"trb_chk_add_u8","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_usize","ident":"trb_chk_add_usize","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_mul_i16","ident":"trb_chk_mul_i16","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i32","ident":"trb_chk_mul_i32","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i64","ident":"trb_chk_mul_i64","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i8","ident":"trb_chk_mul_i8","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_isize","ident":"trb_chk_mul_isize","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u16","ident":"trb_chk_mul_u16","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u32","ident":"trb_chk_mul_u32","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u64","ident":"trb_chk_mul_u64","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u8","ident":"trb_chk_mul_u8","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_usize","ident":"trb_chk_mul_usize","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_sub_i16","ident":"trb_chk_sub_i16","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i32","ident":"trb_chk_sub_i32","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i64","ident":"trb_chk_sub_i64","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i8","ident":"trb_chk_sub_i8","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_isize","ident":"trb_chk_sub_isize","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u16","ident":"trb_chk_sub_u16","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u32","ident":"trb_chk_sub_u32","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u64","ident":"trb_chk_sub_u64","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u8","ident":"trb_chk_sub_u8","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_usize","ident":"trb_chk_sub_usize","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_size","ident":"trb_div_pow2_size","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f128cmp","ident":"trb_f128cmp","summary":"Compares two `f128`."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the slice."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the slice using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the slice using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the slice using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the slice using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the slice using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_size","ident":"trb_mul_pow2_size","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_size","ident":"trb_pow2_size","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"reverse","ident":"trb_reverse","summary":"Reverses the slice."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"chk_add","ident":"trb_chk_add","summary":"Adds up @a and @b and puts the result ..."},{"type":"function_macro","name":"chk_mul","ident":"trb_chk_mul","summary":"Multiplies @a by @b and puts the result to ..."},{"type":"function_macro","name":"chk_sub","ident":"trb_chk_sub","summary":"Subtracts @b from @a and puts the result to ..."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get","ident":"trb_deque_get","summary":"Gets the value of the entry in the deque ..."},{"type":"function_macro","name":"deque_ptr","ident":"trb_deque_ptr","summary":"Gets the pointer to the entry in the deque ..."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"Returns the distance between @m1 and @m2 in the @type."},{"type":"function_macro","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two. Returns ..."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"function_macro","name":"heap_ptr","ident":"trb_heap_ptr","summary":"Gets the pointer to the entry in the heap ..."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"memswap","ident":"trb_memswap","summary":"Swaps @size bytes in @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function_macro","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl","ident":"trb_rotl","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotr","ident":"trb_rotr","summary":"Rotates @x by @r bits to the right. Returns ..."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right. Returnsa ..."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right. Returns ..."},{"type":"function_macro","name":"slice_len","ident":"trb_slice_len","summary":"Gets the slice length."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"string_get","ident":"trb_string_get","summary":"Gets the character in the string at the given index."},{"type":"function_macro","name":"string_ptr","ident":"trb_string_ptr","summary":"Gets the pointer to the character in the string ..."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"Allocates @n_structs of the @struct_type using `malloc()`."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"Allocates @n_structs of the @struct_type using `calloc()`."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get","ident":"trb_vector_get","summary":"Gets the value of the entry in the vector ..."},{"type":"function_macro","name":"vector_ptr","ident":"trb_vector_ptr","summary":"Gets the pointer to the entry in the vector ..."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the vector."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"Frees the deque buckets."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the vector buffer."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"Frees the deque completely."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the vector completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"Creates a new double-ended queue."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on the heap, ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed. ..."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed. ..."},{"type":"method","name":"init","type_name":"Slice","ident":"trb_slice_init","summary":"Creates a new #TrbSlice from an array. If allocated ..."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed. ..."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed. ..."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"Deque","ident":"trb_deque_insert","summary":"Inserts the element into the deque at the given ..."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the vector at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Deque","ident":"trb_deque_insert_many","summary":"Inserts elements into the deque at the given index. ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the vector at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"Removes the last element from the deque."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the vector."},{"type":"method","name":"pop_back_many","type_name":"Deque","ident":"trb_deque_pop_back_many","summary":"Removes last @len elements from the deque."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the vector."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"Removes the first element from the deque."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the vector."},{"type":"method","name":"pop_front_many","type_name":"Deque","ident":"trb_deque_pop_front_many","summary":"Removes first @len elements from the deque."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the vector."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"Adds the element to the end of the deque. ..."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the vector. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Deque","ident":"trb_deque_push_back_many","summary":"Adds elements to the end of the deque. If ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the vector. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"Adds the element to the beginning of the deque. ..."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the vector. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Deque","ident":"trb_deque_push_front_many","summary":"Adds elements to the beginning of the deque. If ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the vector. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"Deque","ident":"trb_deque_remove","summary":"Removes the entry at the given index from the deque."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove","type_name":"Vector","ident":"trb_vector_remove","summary":"Removes the entry at the given index from the vector."},{"type":"method","name":"remove_all","type_name":"Deque","ident":"trb_deque_remove_all","summary":"Removes all elements from the deque."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the vector."},{"type":"method","name":"remove_range","type_name":"Deque","ident":"trb_deque_remove_range","summary":"Removes the range of elements from the deque."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the vector."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the vector buffer."},{"type":"method","name":"reslice","type_name":"Slice","ident":"trb_slice_reslice","summary":"Creates a new #TrbSlice of another #TrbSlice. If allocated ..."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"search","type_name":"Deque","ident":"trb_deque_search","summary":"Searches for the entry in the deque."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap using user data."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the vector."},{"type":"method","name":"search_data","type_name":"Deque","ident":"trb_deque_search_data","summary":"Searches for the entry in the deque using user data."},{"type":"method","name":"search_data","type_name":"Heap","ident":"trb_heap_search_data","summary":"No description available."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the vector using user data."},{"type":"method","name":"set","type_name":"Heap","ident":"trb_heap_set","summary":"Changes the value of the element at the given ..."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"Frees unused memory of the deque buckets."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the vector buffer."},{"type":"method","name":"slice","type_name":"Deque","ident":"trb_deque_slice","summary":"Slices the #TrbDeque. If allocated on the heap, use ..."},{"type":"method","name":"slice","type_name":"Vector","ident":"trb_vector_slice","summary":"Slices the #TrbVector. If allocated on the heap, use ..."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the vector buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the vector buffer. Array's buffer becomes %NULL."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"A double-ended queue."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A max-heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality pseudorandom number generator. ..."},{"type":"record","name":"Slice","ctype":"TrbSlice","summary":"It is a data structure that is used to ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"div32","ctype":"div32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"div64","ctype":"div64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"divsize","ctype":"divsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"udiv32","ctype":"udiv32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"udiv64","ctype":"udiv64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udivsize","ctype":"udivsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[27,28,197,198,248,277],"-":[273,356,360,363,367],"0-bit":[113,114,115],"1-3":[96,97],"128":[87],"16":[22],"16-bit":[3,8],"2":[88,89,90,139],"2^n":[188],"32":[23,59,82,86,88],"32-bit":[4,9,77,78,85,95,143,146,356],"32/64-bit":[142,145],"64":[24,60,83,87,89],"64-bit":[5,10,77,79,85,95,144,147,273,363],"8":[25],"8-bit":[6,11],"C":[127,128,129,130,158,159,160,161],"FALSE":[19],"FORMAT":[124],"I16":[127],"I16_C":[127],"I32":[128],"I32_C":[128],"I64":[129],"I64_C":[129],"I8":[130],"I8_C":[130],"TRB_FORMAT":[124],"TRUE":[20],"U16":[158],"U16_C":[158],"U32":[159],"U32_C":[159],"U64":[160],"U64_C":[160],"U8":[161],"U8_C":[161],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[78],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[79],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[91,92],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[86,87],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[96],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[97],"[reference]https://prng.di.unimi.it/":[273,356,360,363,367],"[reference]https://www.pcg-random.org/":[238,242],"`calloc`":[155],"`free":[184,200,239,243,249,250,274,353,357,361,364,368],"`malloc`":[154],"`snprintf`":[98,100],"`vsnprintf`":[99,106],"ab":[22,23,24,25,26,107],"absolut":[22,23,24,25,26,107],"accept":[193,208,320],"access":[248],"add":[29,30,31,32,33,34,35,36,37,38,110,174,175,176,177,189,231,232,266,267,303,304,305,306,307,308,309,310,311,312,342,343,344,345],"advanc":[201],"after":[222,223,257,258],"all":[179,197,218,253,317,318,347,356,360,363,367],"all-purpos":[360,367],"alloc":[98,99,100,106,154,155,184,200,239,243,249,250,274,353,357,361,364,368],"an":[8,9,10,11,12,194,197,198,204,248,249,277,356,363],"analog":[98,99,100,106],"and":[363],"and/or":[201],"ani":[248],"anoth":[237,250,272],"arrai":[108,109,204,248,249,331,335,354],"array'":[355],"as":[356,363],"assign":[278,279,280,281],"avail":[15,16,18,19,20,21,62,81,93,108,109,116,121,122,123,124,127,128,129,130,131,132,133,134,140,141,149,150,151,156,157,158,159,160,161,214],"avl":[315],"awar":[356],"back":[170,171,174,175,210,228,231,263,266,303,304,305,306,307,338,339,342,343],"becom":[314,355],"befor":[223,258],"begin":[176,177,232,267,308,309,310,311,312,344,345],"best":[356,363],"between":[119,135,137],"binari":[27,28],"bit":[87,113,114,115,142,143,144,145,146,147,356,363],"bucket":[165,183,190],"buffer":[205,283,313,314,333,349,352,354,355],"byte":[98,99,100,106,136,280,284,290,291,296,301,306,311],"c":[285,294,299,304,309],"can":[248,356,363],"capac":[291],"case":[356,363],"cell":[108],"chang":[215],"charact":[152,153,285,294,299,304,309],"check":[219,254],"chk":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,110,111,112],"choos":[135,137],"circular":[216,251],"clz":[113],"clz32":[114],"clz64":[115],"cmp":[13,14,282],"code":[123],"compar":[13,14,63,64,65,70,71,72,73,76,101,102,103,104,105,282],"comparison":[193,208,320],"complet":[166,191,206,220,255,286,334],"complex":[356,363],"consid":[356,363],"contain":[116,248],"content":[278,279,280,281],"copi":[15,217,252,316,332],"count":[113,114,115],"creat":[167,192,193,200,207,208,221,249,250,256,287,288,289,290,291,292,313,316,319,320,332,335,354],"critic":[62],"critical":[21],"current":[202,203],"data":[13,28,67,69,75,92,182,193,204,208,213,214,226,236,248,261,271,320,351],"debug":[21],"dequ":[117,118,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"descript":[15,16,18,19,20,21,62,81,93,108,109,116,121,122,123,124,127,128,129,130,131,132,133,134,140,141,149,150,151,156,157,158,159,160,161,214],"destroi":[165,190,205,218,253,283,317,333],"directli":[248],"discard":[87],"distanc":[119],"div":[59,60,61,120],"div32":[185],"div64":[186],"divid":[59,60,61,120],"divis":[185,186,187,328,329,330],"divsiz":[187],"divsize":[187],"do":[121],"doubl":[2],"double-end":[164,167],"doubly-link":[216,221],"dynam":[277,331,335],"element":[168,169,170,171,172,173,174,175,176,177,179,180,209,210,211,212,215,224,225,226,227,230,237,248,259,260,261,262,265,272,323,336,337,338,339,340,341,342,343,344,345,347,348],"empti":[219,254],"end":[174,175,231,266,303,304,305,306,307,342,343],"enough":[98,99,100,106],"entri":[27,28,117,118,125,126,131,149,156,162,163,178,181,182,189,194,195,196,197,202,213,231,232,266,267,346,350,351],"eras":[284,285],"error":[21],"exampl":[197,198,248,277],"excel":[367],"except":[98,99,100,106,356,363],"exist":[194],"exit":[62,122,123],"extrem":[360],"f128":[0,63],"f128cmp":[63],"f32":[1,64,244,358],"f32cmp":[64],"f64":[2,65,240,245,365],"f64cmp":[65],"fail":[62,93,121,122,123,140,141,363],"false":[19],"famili":[356,363],"familii":[273],"fast":[273,360],"fastest":[356,363],"first":[172,173,211,229,264,282,340,341],"flag":[21],"floating-point":[0,1,2,356,358,363,365],"fmt":[98,279,289,295,300,305,310],"follow":[197,198,277],"foreach":[132,133,150],"format":[279,281,289,292,295,297,300,302,305,307,310,312],"four":[356],"free":[16,165,166,183,190,191,205,206,218,220,253,255,283,286,317,318,333,334,352],"from":[49,50,51,52,53,54,55,56,57,58,112,170,171,172,173,178,179,180,196,197,210,211,212,228,229,233,237,249,263,264,268,272,273,284,287,289,292,326,338,339,340,341,346,347,348,356,363],"front":[172,173,176,177,211,229,232,264,267,308,309,310,311,312,340,341,344,345],"func":[13,14,15,16,17,18,81],"function":[13,14,17,27,28,193,197,208,320],"gener":[238,240,241,242,244,245,246,247,273,275,276,356,358,359,360,362,363,365,366,367,369],"get":[22,23,24,25,26,107,109,117,118,125,126,148,152,153,162,163,197,198,199,227,230,248,262,265,277],"given":[117,118,125,126,152,153,162,163,168,169,178,194,215,227,239,240,241,243,244,245,246,247,262,274,275,276,285,293,294,295,296,297,298,299,300,301,302,336,337,346,357,358,359,361,362,364,365,366,368,369],"ha":[367],"half":[96],"hash":[17,78,79,188,189,190,191,194,195,196,197,198],"have":[356],"heap":[68,69,125,126,184,200,204,205,206,209,210,211,212,213,239,243,249,250,274,353,357,361,364,368],"heapifi":[66,67],"heapsort":[68,69],"high-qual":[273],"hold":[98,99,100,106],"how":[197,198,248,277],"i16":[3,29,39,49,70],"i16cmp":[70],"i32":[4,30,40,50,71,185],"i32cmp":[71],"i64":[5,31,41,51,72,186],"i64cmp":[72],"i8":[6,32,42,52,73],"i8cmp":[73],"includ":[98,99,100,106],"index":[117,118,125,126,152,153,162,163,168,169,178,215,285,293,294,295,296,297,298,299,300,301,302,336,337,346],"info":[21],"init":[134,151,157,167,192,193,200,207,208,221,239,243,249,256,274,277,287,289,290,291,292,319,320,335,357,361,364,368],"init0":[288],"initi":[239,243,273,274,357,361,364,368],"inord":[321],"insert":[74,75,168,169,194,209,222,223,257,258,293,294,295,296,297,322,336,337],"inssort":[74,75],"integ":[3,4,5,6,7,8,9,10,11,12,142,143,144,145,146,147],"isiz":[7,33,43,53,76,187],"isize":[7],"isizecmp":[76],"issu":[356,363],"it":[194],"iter":[198,202,203],"itself":[318],"jenkin":[78,79],"jhash":[77],"jhash32":[78],"jhash64":[79],"just":[363],"kei":[17,199,201],"knuth":[91,92],"larg":[98,99,100,106],"largest":[135],"last":[170,171,210,228,263,338,339],"lead":[113,114,115],"left":[142,143,144],"len":[148,224,259,280,290,296,301,306,311],"length":[148],"linear":[356,363],"list":[131,132,133,134,216,217,218,219,220,221,224,225,226,228,229,230,231,232,233,234,235,236,237,251,252,253,254,255,256,259,260,261,263,264,265,266,267,268,269,270,271,272],"lookup":[195,225,226,260,261,323],"low":[356,363],"lowest":[137,356,363],"m":[245,247],"mani":[169,171,173,175,177,337,339,341,343,345],"max":[135],"max-heap":[204],"memori":[183,184,200,239,243,249,250,274,349,352,353,357,361,364,368],"memswap":[136],"messag":[21,80,81],"might":[363],"min":[137],"most":[113,114,115],"mul":[39,40,41,42,43,44,45,46,47,48,82,83,84,111,138],"multipli":[39,40,41,42,43,44,45,46,47,48,82,83,84,111,138],"murmurhash3":[85,86,87],"new":[167,189,192,193,200,207,208,221,231,232,249,250,256,266,267,287,288,289,290,291,292,313,319,320,335,354],"next":[88,89,90,139,201,240,241,244,245,246,247,275,276,358,359,362,365,366,369],"node":[134,151,156,157,218,222,223,228,229,233,253,257,258,263,264,268,317,318,322,326,327],"not":[219,254],"noth":[201],"now":[201],"nth":[227,262],"null":[98,99,100,106],"number":[0,1,2,59,60,61,82,83,84,113,114,115,120,138,224,240,241,244,245,246,247,259,273,275,276,356,358,359,362,363,365,366,369],"on":[194,222,223,237,257,258,272],"onto":[231,232,266,267],"oper":[110,111,112],"or":[201],"other":[222,223,257,258],"output":[98,99,100,106,197,198,248,277,356,363],"over":[198],"overflow":[110,111],"overwrit":[298,299,300,301,302],"pass":[356,360,363,367],"pcg128":[238,240,241],"pcg64":[242,244,245,246,247],"platform":[77,85,95],"point":[201,203],"pointer":[7,12,118,126,153,163,202],"pop":[170,171,172,173,210,211,228,229,263,264,338,339,340,341],"portion":[248],"posit":[113,114,115,227,230,262,265],"postord":[324],"pow2":[59,60,61,82,83,84,88,89,90,120,138,139],"power":[59,60,61,82,83,84,88,89,90,120,138,139],"precis":[0,1,2],"preoder":[325],"preorder":[325],"print":[21,80,277],"probe":[188],"pseudorandom":[273],"ptr":[118,126,153,163],"push":[174,175,176,177,231,232,266,267,303,304,305,306,307,308,309,310,311,312,342,343,344,345],"put":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,110,111,112],"quadrat":[188],"quadrupl":[0],"queue":[164,167],"quicksort":[91,92],"quotient":[120],"random":[240,241,244,245,246,247,275,276,358,359,362,365,366,369],"rang":[180,348],"recommend":[273],"releas":[184,200,239,243,249,250,274,353,357,361,364,368],"remaind":[120],"remov":[170,171,172,173,178,179,180,196,197,202,210,211,212,228,229,233,263,264,268,326,338,339,340,341,346,347,348],"replac":[194,203,278,279,280,281],"repres":[204,248],"requir":[349],"reserv":[349],"reslic":[250],"result":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,110,111,112,185,186,187,201,328,329,330],"retriev":[199,201],"return":[93,110,111,112,113,114,115,119,120,140,141,142,143,144,145,147,224,259],"returnsa":[146],"revers":[94,133,234,269],"right":[145,146,147],"rock-solid":[360,367],"rotat":[142,143,144,145,146,147],"rotl":[142],"rotl32":[143],"rotl64":[144],"rotr":[145],"rotr32":[146],"rotr64":[147],"round":[88,89,90,139],"rs":[240,241,244,246],"rx":[245,247],"s":[251],"search":[27,28,181,182,195,213,214,225,226,260,261,323,350,351],"second":[282],"seed":[239,243,273,274,357,361,364,368],"self-balanc":[315],"set":[215],"should":[27,28,197,198,248,277],"show":[197,198,248,277],"shrink":[183,352],"sign":[3,4,5,6,7],"signific":[113,114,115],"similar":[197,198,277],"singl":[1],"singly-link":[251,256],"siphash":[95,96,97],"siphash32":[96],"siphash64":[97],"size":[7,12,26,61,84,90,188,277,291,331,335],"slice":[27,28,66,67,68,69,74,75,91,92,94,148,184,248,353],"slist":[149,150,151],"sm64":[273],"so":[356,363],"sort":[27,28,68,69,74,75,91,92,235,236,248,270,271],"speed":[367],"splice":[237,272],"splitmix64":[273],"start":[113,114,115,284],"state":[238,239,240,241,242,243,244,245,246,247,274,275,276,357,358,359,361,362,364,365,366,368,369],"stdout":[277],"steal":[313,314,354,355],"steal0":[314,355],"store":[185,186,187,328,329,330],"strdup":[98,99],"strfmt":[100],"string":[98,99,100,106,152,153,277,279,281,282,283,284,285,286,289,292,294,295,297,300,302,304,305,307,309,310,312,313,314],"structur":[204,248],"sub":[49,50,51,52,53,54,55,56,57,58,112],"sub-n":[360,367],"subtract":[49,50,51,52,53,54,55,56,57,58,112],"swap":[136],"tabl":[188,189,190,191,194,195,196,197,198],"talloc":[154],"talloc0":[155],"termin":[98,99,100,106],"test":[356,360,363,367],"those":[363],"three":[363],"too":[356,363],"transfer":[237,272],"travers":[321,324,325],"trb_abs":[107],"trb_abs_16":[22],"trb_abs_32":[23],"trb_abs_64":[24],"trb_abs_8":[25],"trb_abs_size":[26],"trb_array_cell":[108],"trb_array_get":[109],"trb_binary_search":[27],"trb_binary_search_data":[28],"trb_chk_add":[110],"trb_chk_add_i16":[29],"trb_chk_add_i32":[30],"trb_chk_add_i64":[31],"trb_chk_add_i8":[32],"trb_chk_add_isize":[33],"trb_chk_add_u16":[34],"trb_chk_add_u32":[35],"trb_chk_add_u64":[36],"trb_chk_add_u8":[37],"trb_chk_add_usize":[38],"trb_chk_mul":[111],"trb_chk_mul_i16":[39],"trb_chk_mul_i32":[40],"trb_chk_mul_i64":[41],"trb_chk_mul_i8":[42],"trb_chk_mul_isize":[43],"trb_chk_mul_u16":[44],"trb_chk_mul_u32":[45],"trb_chk_mul_u64":[46],"trb_chk_mul_u8":[47],"trb_chk_mul_usize":[48],"trb_chk_sub":[112],"trb_chk_sub_i16":[49],"trb_chk_sub_i32":[50],"trb_chk_sub_i64":[51],"trb_chk_sub_i8":[52],"trb_chk_sub_isize":[53],"trb_chk_sub_u16":[54],"trb_chk_sub_u32":[55],"trb_chk_sub_u64":[56],"trb_chk_sub_u8":[57],"trb_chk_sub_usize":[58],"trb_clz":[113],"trb_clz32":[114],"trb_clz64":[115],"trb_container_of":[116],"trb_deque_destroy":[165],"trb_deque_free":[166],"trb_deque_get":[117],"trb_deque_init":[167],"trb_deque_insert":[168],"trb_deque_insert_many":[169],"trb_deque_pop_back":[170],"trb_deque_pop_back_many":[171],"trb_deque_pop_front":[172],"trb_deque_pop_front_many":[173],"trb_deque_ptr":[118],"trb_deque_push_back":[174],"trb_deque_push_back_many":[175],"trb_deque_push_front":[176],"trb_deque_push_front_many":[177],"trb_deque_remove":[178],"trb_deque_remove_all":[179],"trb_deque_remove_range":[180],"trb_deque_search":[181],"trb_deque_search_data":[182],"trb_deque_shrink":[183],"trb_deque_slice":[184],"trb_distance_of":[119],"trb_div_pow2":[120],"trb_div_pow2_32":[59],"trb_div_pow2_64":[60],"trb_div_pow2_size":[61],"trb_do_if_fail":[121],"trb_exit_if_fail":[122],"trb_exit_if_fail_critical":[62],"trb_exit_with_code_if_fail":[123],"trb_f128cmp":[63],"trb_f32cmp":[64],"trb_f64cmp":[65],"trb_hash_table_add":[189],"trb_hash_table_destroy":[190],"trb_hash_table_free":[191],"trb_hash_table_init":[192],"trb_hash_table_init_data":[193],"trb_hash_table_insert":[194],"trb_hash_table_iter_get":[199],"trb_hash_table_iter_init":[200],"trb_hash_table_iter_next":[201],"trb_hash_table_iter_remove":[202],"trb_hash_table_iter_replace":[203],"trb_hash_table_lookup":[195],"trb_hash_table_remove":[196],"trb_hash_table_remove_all":[197],"trb_heap_destroy":[205],"trb_heap_free":[206],"trb_heap_get":[125],"trb_heap_init":[207],"trb_heap_init_data":[208],"trb_heap_insert":[209],"trb_heap_pop_back":[210],"trb_heap_pop_front":[211],"trb_heap_ptr":[126],"trb_heap_remove":[212],"trb_heap_search":[213],"trb_heap_search_data":[214],"trb_heap_set":[215],"trb_heapify":[66],"trb_heapify_data":[67],"trb_heapsort":[68],"trb_heapsort_data":[69],"trb_i16cmp":[70],"trb_i32cmp":[71],"trb_i64cmp":[72],"trb_i8cmp":[73],"trb_inssort":[74],"trb_inssort_data":[75],"trb_isizecmp":[76],"trb_jhash":[77],"trb_jhash32":[78],"trb_jhash64":[79],"trb_list_copy":[217],"trb_list_destroy":[218],"trb_list_empty":[219],"trb_list_entry":[131],"trb_list_foreach":[132],"trb_list_foreach_reverse":[133],"trb_list_free":[220],"trb_list_init":[221],"trb_list_insert_after":[222],"trb_list_insert_before":[223],"trb_list_len":[224],"trb_list_lookup":[225],"trb_list_lookup_data":[226],"trb_list_node_init":[134],"trb_list_nth":[227],"trb_list_pop_back":[228],"trb_list_pop_front":[229],"trb_list_position":[230],"trb_list_push_back":[231],"trb_list_push_front":[232],"trb_list_remove":[233],"trb_list_reverse":[234],"trb_list_sort":[235],"trb_list_sort_data":[236],"trb_list_splice":[237],"trb_max":[135],"trb_memswap":[136],"trb_message":[80],"trb_message_func":[81],"trb_min":[137],"trb_mul_pow2":[138],"trb_mul_pow2_32":[82],"trb_mul_pow2_64":[83],"trb_mul_pow2_size":[84],"trb_murmurhash3":[85],"trb_murmurhash3_32":[86],"trb_murmurhash3_64":[87],"trb_pcg128_init":[239],"trb_pcg128_next_f64":[240],"trb_pcg128_next_u64":[241],"trb_pcg64_init":[243],"trb_pcg64_next_f32":[244],"trb_pcg64_next_f64":[245],"trb_pcg64_next_u32":[246],"trb_pcg64_next_u64":[247],"trb_pow2":[139],"trb_pow2_32":[88],"trb_pow2_64":[89],"trb_pow2_size":[90],"trb_quicksort":[91],"trb_quicksort_data":[92],"trb_return_if_fail":[140],"trb_return_if_fail_warning":[93],"trb_return_val_if_fail":[141],"trb_reverse":[94],"trb_rotl":[142],"trb_rotl32":[143],"trb_rotl64":[144],"trb_rotr":[145],"trb_rotr32":[146],"trb_rotr64":[147],"trb_siphash":[95],"trb_siphash32":[96],"trb_siphash64":[97],"trb_slice_init":[249],"trb_slice_len":[148],"trb_slice_reslice":[250],"trb_slist_copy":[252],"trb_slist_destroy":[253],"trb_slist_empty":[254],"trb_slist_entry":[149],"trb_slist_foreach":[150],"trb_slist_free":[255],"trb_slist_init":[256],"trb_slist_insert_after":[257],"trb_slist_insert_before":[258],"trb_slist_len":[259],"trb_slist_lookup":[260],"trb_slist_lookup_data":[261],"trb_slist_node_init":[151],"trb_slist_nth":[262],"trb_slist_pop_back":[263],"trb_slist_pop_front":[264],"trb_slist_position":[265],"trb_slist_push_back":[266],"trb_slist_push_front":[267],"trb_slist_remove":[268],"trb_slist_reverse":[269],"trb_slist_sort":[270],"trb_slist_sort_data":[271],"trb_slist_splice":[272],"trb_sm64_init":[274],"trb_sm64_next_u32":[275],"trb_sm64_next_u64":[276],"trb_strdup_fmt":[98],"trb_strdup_vfmt":[99],"trb_strfmt":[100],"trb_string_assign":[278],"trb_string_assign_fmt":[279],"trb_string_assign_len":[280],"trb_string_assign_vfmt":[281],"trb_string_cmp":[282],"trb_string_destroy":[283],"trb_string_erase":[284],"trb_string_erase_c":[285],"trb_string_free":[286],"trb_string_get":[152],"trb_string_init":[287],"trb_string_init0":[288],"trb_string_init_fmt":[289],"trb_string_init_len":[290],"trb_string_init_sized":[291],"trb_string_init_vfmt":[292],"trb_string_insert":[293],"trb_string_insert_c":[294],"trb_string_insert_fmt":[295],"trb_string_insert_len":[296],"trb_string_insert_vfmt":[297],"trb_string_overwrite":[298],"trb_string_overwrite_c":[299],"trb_string_overwrite_fmt":[300],"trb_string_overwrite_len":[301],"trb_string_overwrite_vfmt":[302],"trb_string_ptr":[153],"trb_string_push_back":[303],"trb_string_push_back_c":[304],"trb_string_push_back_fmt":[305],"trb_string_push_back_len":[306],"trb_string_push_back_vfmt":[307],"trb_string_push_front":[308],"trb_string_push_front_c":[309],"trb_string_push_front_fmt":[310],"trb_string_push_front_len":[311],"trb_string_push_front_vfmt":[312],"trb_string_steal":[313],"trb_string_steal0":[314],"trb_talloc":[154],"trb_talloc0":[155],"trb_tree_copy":[316],"trb_tree_destroy":[317],"trb_tree_free":[318],"trb_tree_init":[319],"trb_tree_init_data":[320],"trb_tree_inorder":[321],"trb_tree_insert":[322],"trb_tree_lookup":[323],"trb_tree_node_entry":[156],"trb_tree_node_init":[157],"trb_tree_postorder":[324],"trb_tree_preorder":[325],"trb_tree_remove":[326],"trb_u16cmp":[101],"trb_u32cmp":[102],"trb_u64cmp":[103],"trb_u8cmp":[104],"trb_usizecmp":[105],"trb_vector_copy":[332],"trb_vector_destroy":[333],"trb_vector_free":[334],"trb_vector_get":[162],"trb_vector_init":[335],"trb_vector_insert":[336],"trb_vector_insert_many":[337],"trb_vector_pop_back":[338],"trb_vector_pop_back_many":[339],"trb_vector_pop_front":[340],"trb_vector_pop_front_many":[341],"trb_vector_ptr":[163],"trb_vector_push_back":[342],"trb_vector_push_back_many":[343],"trb_vector_push_front":[344],"trb_vector_push_front_many":[345],"trb_vector_remove":[346],"trb_vector_remove_all":[347],"trb_vector_remove_range":[348],"trb_vector_require":[349],"trb_vector_search":[350],"trb_vector_search_data":[351],"trb_vector_shrink":[352],"trb_vector_slice":[353],"trb_vector_steal":[354],"trb_vector_steal0":[355],"trb_vstrfmt":[106],"trb_xs128p_init":[357],"trb_xs128p_next_f32":[358],"trb_xs128p_next_u32":[359],"trb_xs128ss_init":[361],"trb_xs128ss_next":[362],"trb_xs256p_init":[364],"trb_xs256p_next_f64":[365],"trb_xs256p_next_u64":[366],"trb_xs256ss_init":[368],"trb_xs256ss_next":[369],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[164],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[188],"trbhashtableiter":[198],"trbheap":[204],"trblist":[216],"trbmessageflags":[21],"trbpcg128":[238],"trbpcg64":[242],"trbslice":[248],"trbslist":[251],"trbsm64":[273],"trbstring":[277,313],"trbstring'":[314],"trbtree":[315],"trbtreenode":[327],"trbuserfunc":[18],"trbvector":[331],"trbxs128p":[356],"trbxs128ss":[360],"trbxs256p":[363],"trbxs256ss":[367],"tree":[156,157,315,316,317,318,321,322,323,324,325,326,327],"true":[20],"two":[13,14,59,60,61,63,64,65,70,71,72,73,76,82,83,84,101,102,103,104,105,120,138,185,186,187,328,329,330],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12],"u16":[8,34,44,54,101],"u16cmp":[101],"u32":[9,35,45,55,102,246,275,328,359],"u32cmp":[102],"u64":[10,36,46,56,103,241,247,276,329,366],"u64cmp":[103],"u8":[11,37,47,57,104],"u8cmp":[104],"udiv32":[328],"udiv64":[329],"udivs":[330],"udivsize":[330],"underflow":[112],"unsign":[8,9,10,11,12],"unus":[183,352],"up":[29,30,31,32,33,34,35,36,37,38,88,89,90,110,139],"upper":[87],"us":[13,27,28,67,68,69,74,75,77,85,91,92,95,154,155,182,184,197,200,213,226,236,239,240,241,243,244,245,246,247,248,249,250,261,271,274,351,353,356,357,361,363,364,368],"user":[13,18,28,67,69,75,182,193,208,213,226,236,261,271,320,351],"usiz":[12,38,48,58,105,330],"usize":[12],"usizecmp":[105],"usual":[356,363],"val":[141],"valu":[13,14,22,23,24,25,26,107,117,125,135,137,162,194,199,201,203,215],"vector":[162,163,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355],"vfmt":[99,281,292,297,302,307,312],"vstrfmt":[106],"want":[27,28],"warn":[93],"warning":[21],"we":[87,356],"whether":[219,254],"which":[363],"whose":[248],"x64":[87],"x86":[86],"xorshift":[356,363],"xoshiro":[273],"xoshiro128**":[360],"xoshiro128+":[356],"xoshiro256**":[367],"xoshiro256+":[363],"xs":[245,247],"xs128p":[356],"xs128ss":[360],"xs256p":[363],"xs256ss":[367],"xsh":[240,241,244,246],"you":[27,28,197,198,248,277],"zero":[168,169,174,175,176,177,296,301,306,311,336,337,342,343,344,345]}}