{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"real","ctype":"real","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I128_MAX","ident":"I128_MAX","summary":"No description available."},{"type":"constant","name":"I128_MIN","ident":"I128_MIN","summary":"No description available."},{"type":"constant","name":"I128_WIDTH","ident":"I128_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U128_MAX","ident":"U128_MAX","summary":"No description available."},{"type":"constant","name":"U128_WIDTH","ident":"U128_WIDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs_16","ident":"trb_abs_16","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_32","ident":"trb_abs_32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_64","ident":"trb_abs_64","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_8","ident":"trb_abs_8","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_size","ident":"trb_abs_size","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"chk_add_i16","ident":"trb_chk_add_i16","summary":"No description available."},{"type":"function","name":"chk_add_i32","ident":"trb_chk_add_i32","summary":"No description available."},{"type":"function","name":"chk_add_i64","ident":"trb_chk_add_i64","summary":"No description available."},{"type":"function","name":"chk_add_i8","ident":"trb_chk_add_i8","summary":"No description available."},{"type":"function","name":"chk_add_isize","ident":"trb_chk_add_isize","summary":"No description available."},{"type":"function","name":"chk_add_u16","ident":"trb_chk_add_u16","summary":"No description available."},{"type":"function","name":"chk_add_u32","ident":"trb_chk_add_u32","summary":"No description available."},{"type":"function","name":"chk_add_u64","ident":"trb_chk_add_u64","summary":"No description available."},{"type":"function","name":"chk_add_u8","ident":"trb_chk_add_u8","summary":"No description available."},{"type":"function","name":"chk_add_usize","ident":"trb_chk_add_usize","summary":"No description available."},{"type":"function","name":"chk_mul_i16","ident":"trb_chk_mul_i16","summary":"No description available."},{"type":"function","name":"chk_mul_i32","ident":"trb_chk_mul_i32","summary":"No description available."},{"type":"function","name":"chk_mul_i64","ident":"trb_chk_mul_i64","summary":"No description available."},{"type":"function","name":"chk_mul_i8","ident":"trb_chk_mul_i8","summary":"No description available."},{"type":"function","name":"chk_mul_isize","ident":"trb_chk_mul_isize","summary":"No description available."},{"type":"function","name":"chk_mul_u16","ident":"trb_chk_mul_u16","summary":"No description available."},{"type":"function","name":"chk_mul_u32","ident":"trb_chk_mul_u32","summary":"No description available."},{"type":"function","name":"chk_mul_u64","ident":"trb_chk_mul_u64","summary":"No description available."},{"type":"function","name":"chk_mul_u8","ident":"trb_chk_mul_u8","summary":"No description available."},{"type":"function","name":"chk_mul_usize","ident":"trb_chk_mul_usize","summary":"No description available."},{"type":"function","name":"chk_sub_i16","ident":"trb_chk_sub_i16","summary":"No description available."},{"type":"function","name":"chk_sub_i32","ident":"trb_chk_sub_i32","summary":"No description available."},{"type":"function","name":"chk_sub_i64","ident":"trb_chk_sub_i64","summary":"No description available."},{"type":"function","name":"chk_sub_i8","ident":"trb_chk_sub_i8","summary":"No description available."},{"type":"function","name":"chk_sub_isize","ident":"trb_chk_sub_isize","summary":"No description available."},{"type":"function","name":"chk_sub_u16","ident":"trb_chk_sub_u16","summary":"No description available."},{"type":"function","name":"chk_sub_u32","ident":"trb_chk_sub_u32","summary":"No description available."},{"type":"function","name":"chk_sub_u64","ident":"trb_chk_sub_u64","summary":"No description available."},{"type":"function","name":"chk_sub_u8","ident":"trb_chk_sub_u8","summary":"No description available."},{"type":"function","name":"chk_sub_usize","ident":"trb_chk_sub_usize","summary":"No description available."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_size","ident":"trb_div_pow2_size","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the slice."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the slice using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the slice using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the slice using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the slice using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the slice using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_size","ident":"trb_mul_pow2_size","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_size","ident":"trb_pow2_size","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"reverse","ident":"trb_reverse","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I128_C","ident":"I128_C","summary":"No description available."},{"type":"function_macro","name":"I128_HI","ident":"I128_HI","summary":"No description available."},{"type":"function_macro","name":"I128_LO","ident":"I128_LO","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U128_C","ident":"U128_C","summary":"No description available."},{"type":"function_macro","name":"U128_HI","ident":"U128_HI","summary":"No description available."},{"type":"function_macro","name":"U128_LO","ident":"U128_LO","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"abs","ident":"trb_abs","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"chk_add","ident":"trb_chk_add","summary":"No description available."},{"type":"function_macro","name":"chk_mul","ident":"trb_chk_mul","summary":"No description available."},{"type":"function_macro","name":"chk_sub","ident":"trb_chk_sub","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get","ident":"trb_deque_get","summary":"Gets the value of the entry in the deque ..."},{"type":"function_macro","name":"deque_ptr","ident":"trb_deque_ptr","summary":"Gets the pointer to the entry in the deque ..."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"div_pow2","ident":"trb_div_pow2","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"function_macro","name":"heap_ptr","ident":"trb_heap_ptr","summary":"Gets the pointer to the entry in the heap ..."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"mul_pow2","ident":"trb_mul_pow2","summary":"No description available."},{"type":"function_macro","name":"pow2","ident":"trb_pow2","summary":"No description available."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl","ident":"trb_rotl","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotr","ident":"trb_rotr","summary":"No description available."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"slice_len","ident":"trb_slice_len","summary":"No description available."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"string_get","ident":"trb_string_get","summary":"Gets the character in the string at the given index."},{"type":"function_macro","name":"string_ptr","ident":"trb_string_ptr","summary":"Gets the pointer to the character in the string ..."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"function_macro","name":"vector_ptr","ident":"trb_vector_ptr","summary":"Gets the pointer to the entry in the array ..."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"add","type_name":"i128","ident":"i128_add","summary":"Adds up @a and @b."},{"type":"method","name":"add","type_name":"u128","ident":"u128_add","summary":"Adds up @a and @b."},{"type":"method","name":"and","type_name":"i128","ident":"i128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"and","type_name":"u128","ident":"u128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"clz","type_name":"u128","ident":"u128_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"method","name":"cmp","type_name":"i128","ident":"i128_cmp","summary":"Compares two `i128`."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"cmp","type_name":"u128","ident":"u128_cmp","summary":"Compares two `u128`."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"No description available."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"div","type_name":"i128","ident":"i128_div","summary":"Divides @num by @denom."},{"type":"method","name":"div","type_name":"u128","ident":"u128_div","summary":"Divides @num by @denom."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"No description available."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"No description available."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on heap, use ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"Slice","ident":"trb_slice_init","summary":"No description available."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"Deque","ident":"trb_deque_insert","summary":"No description available."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Deque","ident":"trb_deque_insert_many","summary":"No description available."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"minus","type_name":"i128","ident":"i128_minus","summary":"No description available."},{"type":"method","name":"mul","type_name":"i128","ident":"i128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"mul","type_name":"u128","ident":"u128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"not","type_name":"i128","ident":"i128_not","summary":"Performs one's complement negation for @num."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"or","type_name":"i128","ident":"i128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"or","type_name":"u128","ident":"u128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"No description available."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_back_many","type_name":"Deque","ident":"trb_deque_pop_back_many","summary":"No description available."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the array."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"No description available."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"pop_front_many","type_name":"Deque","ident":"trb_deque_pop_front_many","summary":"No description available."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"No description available."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Deque","ident":"trb_deque_push_back_many","summary":"No description available."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"No description available."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Deque","ident":"trb_deque_push_front_many","summary":"No description available."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"Deque","ident":"trb_deque_remove","summary":"No description available."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove","type_name":"Vector","ident":"trb_vector_remove","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_all","type_name":"Deque","ident":"trb_deque_remove_all","summary":"No description available."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_range","type_name":"Deque","ident":"trb_deque_remove_range","summary":"No description available."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reslice","type_name":"Slice","ident":"trb_slice_reslice","summary":"No description available."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"search","type_name":"Deque","ident":"trb_deque_search","summary":"No description available."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Deque","ident":"trb_deque_search_data","summary":"No description available."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"shl","type_name":"i128","ident":"i128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shl","type_name":"u128","ident":"u128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shr","type_name":"i128","ident":"i128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shr","type_name":"u128","ident":"u128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"No description available."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"slice","type_name":"Deque","ident":"trb_deque_slice","summary":"No description available."},{"type":"method","name":"slice","type_name":"Vector","ident":"trb_vector_slice","summary":"No description available."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"method","name":"sub","type_name":"i128","ident":"i128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"sub","type_name":"u128","ident":"u128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"xor","type_name":"i128","ident":"i128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"method","name":"xor","type_name":"u128","ident":"u128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"No description available."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"Slice","ctype":"TrbSlice","summary":"No description available."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"d128","ctype":"d128","summary":"Stores the result of division of two `i128`."},{"type":"record","name":"d32","ctype":"d32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"d64","ctype":"d64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"dsize","ctype":"dsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"i128","ctype":"i128","summary":"A signed 128-bit integer type."},{"type":"record","name":"u128","ctype":"u128","summary":"An unsigned 128-bit integer type."},{"type":"record","name":"ud128","ctype":"ud128","summary":"Stores the result of division of two `u128`."},{"type":"record","name":"ud32","ctype":"ud32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"ud64","ctype":"ud64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udsize","ctype":"udsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[32,33,209,210,297,301,393,397,400,404],"-":[297,393,397,400,404],"0-bit":[120,121,355],"1-3":[101,102],"128":[91],"128-bit":[226,352],"16":[27],"16-bit":[2,8],"2":[92,93,94],"2^n":[200],"32":[28,64,86,90,92],"32-bit":[3,9,81,82,89,100,393],"64":[29,65,87,91,93],"64-bit":[4,10,81,83,89,100,297,400],"8":[30],"8-bit":[5,11],"C":[133,136,137,138,139,166,169,170,171,172],"FALSE":[19],"FORMAT":[130],"HI":[134,167],"I128":[20,21,22,133,134,135],"I128_C":[133],"I128_HI":[134],"I128_LO":[135],"I16":[136],"I16_C":[136],"I32":[137],"I32_C":[137],"I64":[138],"I64_C":[138],"I8":[139],"I8_C":[139],"LO":[135,168],"MAX":[20,24],"MIN":[21],"TRB_FORMAT":[130],"TRUE":[23],"U128":[24,25,166,167,168],"U128_C":[166],"U128_HI":[167],"U128_LO":[168],"U16":[169],"U16_C":[169],"U32":[170],"U32_C":[170],"U64":[171],"U64_C":[171],"U8":[172],"U8_C":[172],"WIDTH":[22,25],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[82],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[83],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[95,96],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[90,91],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[101],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[102],"[reference]https://prng.di.unimi.it/":[297,393,397,400,404],"[reference]https://www.pcg-random.org/":[261,266],"`free":[212],"`snprintf`":[103,105],"`vsnprintf`":[104,111],"ab":[27,28,29,30,31,112],"absolut":[27,28,29,30,31],"accept":[205,220,344],"add":[34,35,36,37,38,39,40,41,42,43,116,201,227,254,255,290,291,327,328,329,330,331,332,333,334,335,336,353,379,380,381,382],"advanc":[213],"after":[245,246,281,282],"all":[193,209,241,277,341,342,384,393,397,400,404],"all-purpos":[397,404],"alloc":[103,104,105,111,212],"an":[8,9,10,11,12,206,209,210,216,301,352,393,400],"analog":[103,104,105,111],"and":[400],"and/or":[213],"anoth":[260,296],"arrai":[32,33,113,114,115,173,174,216,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392],"array'":[392],"as":[393,400],"assign":[302,303,304,305],"avail":[15,16,18,19,20,21,22,23,24,25,26,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,85,98,99,112,113,114,115,116,117,118,119,122,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,153,156,157,158,159,162,163,164,165,166,167,168,169,170,171,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,231,272,273,274,390],"avl":[339],"awar":[393],"back":[184,185,188,189,222,251,254,287,290,327,328,329,330,331,375,376,379,380],"becom":[338,392],"befor":[246,282],"begin":[255,291,332,333,334,335,336,381,382],"best":[393,400],"between":[144,145],"binari":[32,33],"bit":[91,120,121,151,152,154,155,235,236,355,360,361,393,400],"bucket":[202],"buffer":[217,307,337,338,370,386,389,391,392],"byte":[103,104,105,111,304,308,314,315,320,325,330,335],"c":[309,318,323,328,333],"can":[393,400],"capac":[315],"case":[393,400],"cell":[113],"charact":[160,161,309,318,323,328,333],"check":[242,278],"chk":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,116,117,118],"choos":[144,145],"circular":[239,275],"clz":[119,355],"clz32":[120],"clz64":[121],"cmp":[13,14,229,306,356],"code":[129],"compar":[13,14,68,69,74,75,76,77,80,97,106,107,108,109,110,229,306,356],"comparison":[205,220,344],"complement":[233],"complet":[203,218,243,279,310,371],"complex":[393,400],"consid":[393,400],"contain":[122],"content":[302,303,304,305],"copi":[15,240,276,340,369],"count":[120,121,355],"creat":[204,205,212,219,220,244,280,311,312,313,314,315,316,337,340,343,344,369,372,391],"critic":[67],"critical":[26],"current":[214,215],"d128":[175],"d32":[176],"d64":[177],"data":[13,33,71,73,79,96,196,205,216,220,249,259,285,295,344,388],"debug":[26],"dequ":[123,124,178],"descript":[15,16,18,19,20,21,22,23,24,25,26,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,85,98,99,112,113,114,115,116,117,118,119,122,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,153,156,157,158,159,162,163,164,165,166,167,168,169,170,171,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,231,272,273,274,390],"destroi":[179,202,217,241,277,307,341,370],"discard":[91],"distanc":[125],"div":[64,65,66,126,230,357],"divid":[64,65,66,230,357],"divis":[175,176,177,199,364,365,366,367],"do":[127],"doubl":[1],"doubly-link":[239,244],"dsize":[199],"dynam":[301,368,372],"element":[221,222,223,224,247,248,249,250,253,260,283,284,285,286,289,296,347,373,374,375,376,377,378,379,380,381,382,384,385],"empti":[242,278],"end":[254,290,327,328,329,330,331,379,380],"enough":[103,104,105,111],"entri":[32,33,123,124,131,132,140,157,164,173,174,201,206,207,208,209,214,225,254,255,290,291,383,387,388],"eras":[308,309],"error":[26],"exampl":[209,210,301],"excel":[404],"except":[103,104,105,111,393,400],"exist":[206],"exit":[67,128,129],"extrem":[397],"f32":[0,68,268,395],"f32cmp":[68],"f64":[1,69,263,269,402],"f64cmp":[69],"fail":[67,98,127,128,129,148,149,400],"false":[19],"famili":[393,400],"familii":[297],"fast":[297,397],"fastest":[393,400],"first":[223,252,288,306,377,378],"flag":[26],"floating-point":[0,1,7,393,395,400,402],"fmt":[103,303,313,319,324,329,334],"follow":[209,210,301],"foreach":[141,142,158],"format":[303,305,313,316,319,321,324,326,329,331,334,336],"four":[393],"free":[16,180,202,203,217,218,241,243,277,279,307,310,341,342,370,371,389],"from":[208,209,222,223,224,237,251,252,256,260,287,288,292,296,297,308,311,313,316,350,362,375,376,377,378,383,384,385,393,400],"front":[186,187,190,191,223,252,255,288,291,332,333,334,335,336,377,378,381,382],"func":[13,14,15,16,17,18,85],"function":[13,14,17,32,33,205,209,220,344],"gener":[261,263,264,265,266,268,269,270,271,297,299,300,393,395,396,397,399,400,402,403,404,406],"get":[27,28,29,30,31,114,123,124,131,132,160,161,173,174,209,210,211,250,253,286,289,301],"given":[123,124,131,132,160,161,173,174,206,250,262,263,264,265,267,268,269,270,271,286,298,299,300,309,317,318,319,320,321,322,323,324,325,326,373,374,383,394,395,396,398,399,401,402,403,405,406],"ha":[404],"half":[101],"hash":[17,82,83,200,201,202,203,206,207,208,209,210],"have":[393],"heap":[72,73,131,132,212,216,217,218,221,222,223,224,225],"heapifi":[70,71],"heapsort":[72,73],"high-qual":[297],"hold":[103,104,105,111],"how":[209,210,301],"i128":[175,226,229],"i128_add":[227],"i128_and":[228],"i128_cmp":[229],"i128_div":[230],"i128_max":[20],"i128_min":[21],"i128_minus":[231],"i128_mul":[232],"i128_not":[233],"i128_or":[234],"i128_shl":[235],"i128_shr":[236],"i128_sub":[237],"i128_width":[22],"i128_xor":[238],"i16":[2,34,44,54,74],"i16cmp":[74],"i32":[3,35,45,55,75,176],"i32cmp":[75],"i64":[4,36,46,56,76,177],"i64cmp":[76],"i8":[5,37,47,57,77],"i8cmp":[77],"includ":[103,104,105,111],"index":[123,124,131,132,160,161,173,174,309,317,318,319,320,321,322,323,324,325,326,373,374,383],"info":[26],"init":[143,159,165,181,204,205,212,219,220,244,262,267,273,280,298,301,311,313,314,315,316,343,344,372,394,398,401,405],"init0":[312],"initi":[262,267,297,298,394,398,401,405],"inord":[345],"insert":[78,79,182,183,206,221,245,246,281,282,317,318,319,320,321,346,373,374],"inssort":[78,79],"integ":[2,3,4,5,6,8,9,10,11,12,226,352],"isiz":[6,38,48,58,80,199],"isize":[6],"isizecmp":[80],"issu":[393,400],"it":[206],"iter":[210,214,215],"itself":[342],"jenkin":[82,83],"jhash":[81],"jhash32":[82],"jhash64":[83],"just":[400],"kei":[17,211,213],"knuth":[95,96],"larg":[103,104,105,111],"largest":[144],"last":[222,251,287,375,376],"lead":[120,121,355],"left":[151,152,235,360],"len":[156,247,283,304,314,320,325,330,335],"linear":[393,400],"list":[140,141,142,143,239,240,241,242,243,244,247,248,249,251,252,253,254,255,256,257,258,259,260,275,276,277,278,279,280,283,284,285,287,288,289,290,291,292,293,294,295,296],"logic":[228,234,238,354,359,363],"lookup":[207,248,249,284,285,347],"low":[393,400],"lowest":[145,393,400],"m":[264,269,271],"mani":[183,185,187,189,191,374,376,378,380,382],"max":[144],"memori":[212,386,389],"messag":[26,84,85],"might":[400],"min":[145],"minu":[231],"most":[120,121,355],"mul":[44,45,46,47,48,49,50,51,52,53,86,87,88,117,146,232,358],"multipli":[86,87,88,232,358],"murmurhash3":[89,90,91],"negat":[233],"new":[201,204,205,212,219,220,244,254,255,280,290,291,311,312,313,314,315,316,337,343,344,372,391],"next":[92,93,94,213,263,264,265,268,269,270,271,299,300,395,396,399,402,403,406],"node":[143,159,164,165,241,245,246,251,252,256,277,281,282,287,288,292,341,342,346,350,351],"not":[242,278],"noth":[213],"now":[213],"nth":[250,286],"null":[103,104,105,111],"number":[0,1,7,64,65,66,86,87,88,120,121,247,263,264,265,268,269,270,271,283,297,299,300,355,393,395,396,399,400,402,403,406],"on":[206,245,246,260,281,282,296],"one'":[233],"onto":[254,255,290,291],"oper":[228,234,238,354,359,363],"or":[213],"other":[245,246,281,282],"output":[103,104,105,111,209,210,301,393,400],"over":[210],"overwrit":[322,323,324,325,326],"pass":[393,397,400,404],"pcg128":[261,263,264,265],"pcg64":[266,268,269,270,271],"perform":[228,233,234,238,354,359,363],"platform":[81,89,100],"point":[213,215],"pointer":[6,12,124,132,161,174,214],"pop":[184,185,186,187,222,223,251,252,287,288,375,376,377,378],"posit":[120,121,250,253,286,289,355],"postord":[348],"pow2":[64,65,66,86,87,88,92,93,94,126,146,147],"power":[64,65,66,86,87,88,92,93,94],"precis":[0,1,7],"preoder":[349],"preorder":[349],"print":[26,84,301],"probe":[200],"ptr":[124,132,161,174],"push":[188,189,190,191,254,255,290,291,327,328,329,330,331,332,333,334,335,336,379,380,381,382],"quadrat":[200],"quadrupl":[7],"quicksort":[95,96],"random":[263,264,265,268,269,270,271,299,300,395,396,399,402,403,406],"rang":[194,385],"real":[7,97],"realcmp":[97],"recommend":[297],"releas":[212],"remov":[192,193,194,208,209,214,222,223,224,251,252,256,287,288,292,350,375,376,377,378,383,384,385],"replac":[206,215,302,303,304,305],"repres":[216],"requir":[386],"reserv":[386],"reslic":[274],"result":[175,176,177,199,213,364,365,366,367],"retriev":[211,213],"return":[98,148,149,247,283],"revers":[99,142,257,293],"right":[154,155,236,361],"rock-solid":[397,404],"rotat":[151,152,154,155],"rotl":[150],"rotl32":[151],"rotl64":[152],"rotr":[153],"rotr32":[154],"rotr64":[155],"round":[92,93,94],"rs":[263,265,268,270],"rx":[264,269,271],"s":[275],"search":[32,33,195,196,207,225,248,249,284,285,347,387,388],"second":[306],"seed":[262,267,297,298,394,398,401,405],"self-balanc":[339],"seudorandom":[297],"shift":[235,236,360,361],"shl":[235,360],"should":[32,33,209,210,301],"show":[209,210,301],"shr":[236,361],"shrink":[197,389],"sign":[2,3,4,5,6,226],"signific":[120,121,355],"similar":[209,210,301],"singl":[0],"singly-link":[275,280],"siphash":[100,101,102],"siphash32":[101],"siphash64":[102],"size":[6,12,31,66,88,94,200,301,315,368,372],"slice":[70,71,72,73,78,79,95,96,156,198,272,390],"slist":[157,158,159],"sm64":[297],"so":[393,400],"sort":[32,33,72,73,78,79,95,96,258,259,294,295],"speed":[404],"splice":[260,296],"splitmix64":[297],"start":[120,121,308,355],"state":[261,262,263,264,265,266,267,268,269,270,271,298,299,300,394,395,396,398,399,401,402,403,405,406],"stdout":[301],"steal":[337,338,391,392],"steal0":[338,392],"store":[175,176,177,199,364,365,366,367],"strdup":[103,104],"strfmt":[105],"string":[103,104,105,111,160,161,301,303,305,306,307,308,309,310,313,316,318,319,321,324,326,328,329,331,333,334,336,337,338],"structur":[216],"sub":[54,55,56,57,58,59,60,61,62,63,118,237,362],"sub-n":[397,404],"subtract":[237,362],"swap":[115],"tabl":[200,201,202,203,206,207,208,209,210],"talloc":[162],"talloc0":[163],"termin":[103,104,105,111],"test":[393,397,400,404],"those":[400],"three":[400],"too":[393,400],"transfer":[260,296],"travers":[345,348,349],"trb_abs":[112],"trb_abs_16":[27],"trb_abs_32":[28],"trb_abs_64":[29],"trb_abs_8":[30],"trb_abs_size":[31],"trb_array_cell":[113],"trb_array_get":[114],"trb_array_swap":[115],"trb_binary_search":[32],"trb_binary_search_data":[33],"trb_chk_add":[116],"trb_chk_add_i16":[34],"trb_chk_add_i32":[35],"trb_chk_add_i64":[36],"trb_chk_add_i8":[37],"trb_chk_add_isize":[38],"trb_chk_add_u16":[39],"trb_chk_add_u32":[40],"trb_chk_add_u64":[41],"trb_chk_add_u8":[42],"trb_chk_add_usize":[43],"trb_chk_mul":[117],"trb_chk_mul_i16":[44],"trb_chk_mul_i32":[45],"trb_chk_mul_i64":[46],"trb_chk_mul_i8":[47],"trb_chk_mul_isize":[48],"trb_chk_mul_u16":[49],"trb_chk_mul_u32":[50],"trb_chk_mul_u64":[51],"trb_chk_mul_u8":[52],"trb_chk_mul_usize":[53],"trb_chk_sub":[118],"trb_chk_sub_i16":[54],"trb_chk_sub_i32":[55],"trb_chk_sub_i64":[56],"trb_chk_sub_i8":[57],"trb_chk_sub_isize":[58],"trb_chk_sub_u16":[59],"trb_chk_sub_u32":[60],"trb_chk_sub_u64":[61],"trb_chk_sub_u8":[62],"trb_chk_sub_usize":[63],"trb_clz":[119],"trb_clz32":[120],"trb_clz64":[121],"trb_container_of":[122],"trb_deque_destroy":[179],"trb_deque_free":[180],"trb_deque_get":[123],"trb_deque_init":[181],"trb_deque_insert":[182],"trb_deque_insert_many":[183],"trb_deque_pop_back":[184],"trb_deque_pop_back_many":[185],"trb_deque_pop_front":[186],"trb_deque_pop_front_many":[187],"trb_deque_ptr":[124],"trb_deque_push_back":[188],"trb_deque_push_back_many":[189],"trb_deque_push_front":[190],"trb_deque_push_front_many":[191],"trb_deque_remove":[192],"trb_deque_remove_all":[193],"trb_deque_remove_range":[194],"trb_deque_search":[195],"trb_deque_search_data":[196],"trb_deque_shrink":[197],"trb_deque_slice":[198],"trb_distance_of":[125],"trb_div_pow2":[126],"trb_div_pow2_32":[64],"trb_div_pow2_64":[65],"trb_div_pow2_size":[66],"trb_do_if_fail":[127],"trb_exit_if_fail":[128],"trb_exit_if_fail_critical":[67],"trb_exit_with_code_if_fail":[129],"trb_f32cmp":[68],"trb_f64cmp":[69],"trb_hash_table_add":[201],"trb_hash_table_destroy":[202],"trb_hash_table_free":[203],"trb_hash_table_init":[204],"trb_hash_table_init_data":[205],"trb_hash_table_insert":[206],"trb_hash_table_iter_get":[211],"trb_hash_table_iter_init":[212],"trb_hash_table_iter_next":[213],"trb_hash_table_iter_remove":[214],"trb_hash_table_iter_replace":[215],"trb_hash_table_lookup":[207],"trb_hash_table_remove":[208],"trb_hash_table_remove_all":[209],"trb_heap_destroy":[217],"trb_heap_free":[218],"trb_heap_get":[131],"trb_heap_init":[219],"trb_heap_init_data":[220],"trb_heap_insert":[221],"trb_heap_pop_back":[222],"trb_heap_pop_front":[223],"trb_heap_ptr":[132],"trb_heap_remove":[224],"trb_heap_search":[225],"trb_heapify":[70],"trb_heapify_data":[71],"trb_heapsort":[72],"trb_heapsort_data":[73],"trb_i16cmp":[74],"trb_i32cmp":[75],"trb_i64cmp":[76],"trb_i8cmp":[77],"trb_inssort":[78],"trb_inssort_data":[79],"trb_isizecmp":[80],"trb_jhash":[81],"trb_jhash32":[82],"trb_jhash64":[83],"trb_list_copy":[240],"trb_list_destroy":[241],"trb_list_empty":[242],"trb_list_entry":[140],"trb_list_foreach":[141],"trb_list_foreach_reverse":[142],"trb_list_free":[243],"trb_list_init":[244],"trb_list_insert_after":[245],"trb_list_insert_before":[246],"trb_list_len":[247],"trb_list_lookup":[248],"trb_list_lookup_data":[249],"trb_list_node_init":[143],"trb_list_nth":[250],"trb_list_pop_back":[251],"trb_list_pop_front":[252],"trb_list_position":[253],"trb_list_push_back":[254],"trb_list_push_front":[255],"trb_list_remove":[256],"trb_list_reverse":[257],"trb_list_sort":[258],"trb_list_sort_data":[259],"trb_list_splice":[260],"trb_max":[144],"trb_message":[84],"trb_message_func":[85],"trb_min":[145],"trb_mul_pow2":[146],"trb_mul_pow2_32":[86],"trb_mul_pow2_64":[87],"trb_mul_pow2_size":[88],"trb_murmurhash3":[89],"trb_murmurhash3_32":[90],"trb_murmurhash3_64":[91],"trb_pcg128_init":[262],"trb_pcg128_next_f64":[263],"trb_pcg128_next_u128":[264],"trb_pcg128_next_u64":[265],"trb_pcg64_init":[267],"trb_pcg64_next_f32":[268],"trb_pcg64_next_f64":[269],"trb_pcg64_next_u32":[270],"trb_pcg64_next_u64":[271],"trb_pow2":[147],"trb_pow2_32":[92],"trb_pow2_64":[93],"trb_pow2_size":[94],"trb_quicksort":[95],"trb_quicksort_data":[96],"trb_realcmp":[97],"trb_return_if_fail":[148],"trb_return_if_fail_warning":[98],"trb_return_val_if_fail":[149],"trb_reverse":[99],"trb_rotl":[150],"trb_rotl32":[151],"trb_rotl64":[152],"trb_rotr":[153],"trb_rotr32":[154],"trb_rotr64":[155],"trb_siphash":[100],"trb_siphash32":[101],"trb_siphash64":[102],"trb_slice_init":[273],"trb_slice_len":[156],"trb_slice_reslice":[274],"trb_slist_copy":[276],"trb_slist_destroy":[277],"trb_slist_empty":[278],"trb_slist_entry":[157],"trb_slist_foreach":[158],"trb_slist_free":[279],"trb_slist_init":[280],"trb_slist_insert_after":[281],"trb_slist_insert_before":[282],"trb_slist_len":[283],"trb_slist_lookup":[284],"trb_slist_lookup_data":[285],"trb_slist_node_init":[159],"trb_slist_nth":[286],"trb_slist_pop_back":[287],"trb_slist_pop_front":[288],"trb_slist_position":[289],"trb_slist_push_back":[290],"trb_slist_push_front":[291],"trb_slist_remove":[292],"trb_slist_reverse":[293],"trb_slist_sort":[294],"trb_slist_sort_data":[295],"trb_slist_splice":[296],"trb_sm64_init":[298],"trb_sm64_next_u32":[299],"trb_sm64_next_u64":[300],"trb_strdup_fmt":[103],"trb_strdup_vfmt":[104],"trb_strfmt":[105],"trb_string_assign":[302],"trb_string_assign_fmt":[303],"trb_string_assign_len":[304],"trb_string_assign_vfmt":[305],"trb_string_cmp":[306],"trb_string_destroy":[307],"trb_string_erase":[308],"trb_string_erase_c":[309],"trb_string_free":[310],"trb_string_get":[160],"trb_string_init":[311],"trb_string_init0":[312],"trb_string_init_fmt":[313],"trb_string_init_len":[314],"trb_string_init_sized":[315],"trb_string_init_vfmt":[316],"trb_string_insert":[317],"trb_string_insert_c":[318],"trb_string_insert_fmt":[319],"trb_string_insert_len":[320],"trb_string_insert_vfmt":[321],"trb_string_overwrite":[322],"trb_string_overwrite_c":[323],"trb_string_overwrite_fmt":[324],"trb_string_overwrite_len":[325],"trb_string_overwrite_vfmt":[326],"trb_string_ptr":[161],"trb_string_push_back":[327],"trb_string_push_back_c":[328],"trb_string_push_back_fmt":[329],"trb_string_push_back_len":[330],"trb_string_push_back_vfmt":[331],"trb_string_push_front":[332],"trb_string_push_front_c":[333],"trb_string_push_front_fmt":[334],"trb_string_push_front_len":[335],"trb_string_push_front_vfmt":[336],"trb_string_steal":[337],"trb_string_steal0":[338],"trb_talloc":[162],"trb_talloc0":[163],"trb_tree_copy":[340],"trb_tree_destroy":[341],"trb_tree_free":[342],"trb_tree_init":[343],"trb_tree_init_data":[344],"trb_tree_inorder":[345],"trb_tree_insert":[346],"trb_tree_lookup":[347],"trb_tree_node_entry":[164],"trb_tree_node_init":[165],"trb_tree_postorder":[348],"trb_tree_preorder":[349],"trb_tree_remove":[350],"trb_u16cmp":[106],"trb_u32cmp":[107],"trb_u64cmp":[108],"trb_u8cmp":[109],"trb_usizecmp":[110],"trb_vector_copy":[369],"trb_vector_destroy":[370],"trb_vector_free":[371],"trb_vector_get":[173],"trb_vector_init":[372],"trb_vector_insert":[373],"trb_vector_insert_many":[374],"trb_vector_pop_back":[375],"trb_vector_pop_back_many":[376],"trb_vector_pop_front":[377],"trb_vector_pop_front_many":[378],"trb_vector_ptr":[174],"trb_vector_push_back":[379],"trb_vector_push_back_many":[380],"trb_vector_push_front":[381],"trb_vector_push_front_many":[382],"trb_vector_remove":[383],"trb_vector_remove_all":[384],"trb_vector_remove_range":[385],"trb_vector_require":[386],"trb_vector_search":[387],"trb_vector_search_data":[388],"trb_vector_shrink":[389],"trb_vector_slice":[390],"trb_vector_steal":[391],"trb_vector_steal0":[392],"trb_vstrfmt":[111],"trb_xs128p_init":[394],"trb_xs128p_next_f32":[395],"trb_xs128p_next_u32":[396],"trb_xs128ss_init":[398],"trb_xs128ss_next":[399],"trb_xs256p_init":[401],"trb_xs256p_next_f64":[402],"trb_xs256p_next_u64":[403],"trb_xs256ss_init":[405],"trb_xs256ss_next":[406],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[178],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[200],"trbhashtableiter":[210],"trbheap":[216],"trblist":[239],"trbmessageflags":[26],"trbpcg128":[261],"trbpcg64":[266],"trbslice":[272],"trbslist":[275],"trbsm64":[297],"trbstring":[301,337],"trbstring'":[338],"trbtree":[339],"trbtreenode":[351],"trbuserfunc":[18],"trbvector":[368],"trbxs128p":[393],"trbxs128ss":[397],"trbxs256p":[400],"trbxs256ss":[404],"tree":[164,165,339,340,341,342,345,346,347,348,349,350,351],"true":[23],"two":[13,14,64,65,66,68,69,74,75,76,77,80,86,87,88,97,106,107,108,109,110,175,176,177,199,229,356,364,365,366,367],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12,226,352],"u128":[264,352,356,364],"u128_add":[353],"u128_and":[354],"u128_clz":[355],"u128_cmp":[356],"u128_div":[357],"u128_max":[24],"u128_mul":[358],"u128_or":[359],"u128_shl":[360],"u128_shr":[361],"u128_sub":[362],"u128_width":[25],"u128_xor":[363],"u16":[8,39,49,59,106],"u16cmp":[106],"u32":[9,40,50,60,107,270,299,365,396],"u32cmp":[107],"u64":[10,41,51,61,108,265,271,300,366,403],"u64cmp":[108],"u8":[11,42,52,62,109],"u8cmp":[109],"ud128":[364],"ud32":[365],"ud64":[366],"udsiz":[367],"udsize":[367],"unsign":[8,9,10,11,12,352],"unus":[389],"up":[92,93,94,227,353],"upper":[91],"us":[13,32,33,71,72,73,78,79,81,89,95,96,100,209,212,249,259,263,264,265,268,269,270,271,285,295,388,393,400],"user":[13,18,33,71,73,79,205,220,249,259,285,295,344,388],"usiz":[12,43,53,63,110,367],"usize":[12],"usizecmp":[110],"usual":[393,400],"val":[149],"valu":[13,14,27,28,29,30,31,123,131,144,145,173,206,211,213,215],"vector":[173,174,368],"vfmt":[104,305,316,321,326,331,336],"vstrfmt":[111],"want":[32,33],"warn":[98],"warning":[26],"we":[91,393],"whether":[242,278],"which":[400],"x64":[91],"x86":[90],"xor":[238,363],"xorshift":[393,400],"xoshiro":[297],"xoshiro128**":[397],"xoshiro128+":[393],"xoshiro256**":[404],"xoshiro256+":[400],"xs":[264,269,271],"xs128p":[393],"xs128ss":[397],"xs256p":[400],"xs256ss":[404],"xsh":[263,265,268,270],"you":[32,33,209,210,301],"zero":[320,325,330,335,373,374,379,380,381,382]}}