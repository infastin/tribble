{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"real","ctype":"real","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I128_MAX","ident":"I128_MAX","summary":"No description available."},{"type":"constant","name":"I128_MIN","ident":"I128_MIN","summary":"No description available."},{"type":"constant","name":"I128_WIDTH","ident":"I128_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U128_MAX","ident":"U128_MAX","summary":"No description available."},{"type":"constant","name":"U128_WIDTH","ident":"U128_WIDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"2alloc","ident":"trb_2alloc","summary":"Allocates a two-dimensional array. The array should be freed ..."},{"type":"function","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs32","ident":"trb_abs32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs64","ident":"trb_abs64","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I128_C","ident":"I128_C","summary":"No description available."},{"type":"function_macro","name":"I128_HI","ident":"I128_HI","summary":"No description available."},{"type":"function_macro","name":"I128_LO","ident":"I128_LO","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U128_C","ident":"U128_C","summary":"No description available."},{"type":"function_macro","name":"U128_HI","ident":"U128_HI","summary":"No description available."},{"type":"function_macro","name":"U128_LO","ident":"U128_LO","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get","ident":"trb_deque_get","summary":"Gets the value of the entry in the deque ..."},{"type":"function_macro","name":"deque_ptr","ident":"trb_deque_ptr","summary":"Gets the pointer to the entry in the deque ..."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"function_macro","name":"heap_ptr","ident":"trb_heap_ptr","summary":"Gets the pointer to the entry in the heap ..."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"function_macro","name":"vector_ptr","ident":"trb_vector_ptr","summary":"Gets the pointer to the entry in the array ..."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"add","type_name":"i128","ident":"i128_add","summary":"Adds up @a and @b."},{"type":"method","name":"add","type_name":"u128","ident":"u128_add","summary":"Adds up @a and @b."},{"type":"method","name":"and","type_name":"i128","ident":"i128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"and","type_name":"u128","ident":"u128_and","summary":"Performs the logical AND operation for @a and @b."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"clz","type_name":"u128","ident":"u128_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"method","name":"cmp","type_name":"i128","ident":"i128_cmp","summary":"Compares two `i128`."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"cmp","type_name":"u128","ident":"u128_cmp","summary":"Compares two `u128`."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"No description available."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"div","type_name":"i128","ident":"i128_div","summary":"Divides @num by @denom."},{"type":"method","name":"div","type_name":"u128","ident":"u128_div","summary":"Divides @num by @denom."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"No description available."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"get","type_name":"String","ident":"trb_string_get","summary":"Gets @len bytes in the string starting from @index."},{"type":"method","name":"get_c","type_name":"String","ident":"trb_string_get_c","summary":"Gets the character from the string."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"No description available."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on heap, use ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"Deque","ident":"trb_deque_insert","summary":"No description available."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Deque","ident":"trb_deque_insert_many","summary":"No description available."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"minus","type_name":"i128","ident":"i128_minus","summary":"No description available."},{"type":"method","name":"mul","type_name":"i128","ident":"i128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"mul","type_name":"u128","ident":"u128_mul","summary":"Multiplies @a by @b."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"not","type_name":"i128","ident":"i128_not","summary":"Performs one's complement negation for @num."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"or","type_name":"i128","ident":"i128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"or","type_name":"u128","ident":"u128_or","summary":"Performs the logical OR operation for @a and @b."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"No description available."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the array."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"No description available."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"No description available."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Deque","ident":"trb_deque_push_back_many","summary":"No description available."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"No description available."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Deque","ident":"trb_deque_push_front_many","summary":"No description available."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove","type_name":"Vector","ident":"trb_vector_remove","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"shl","type_name":"i128","ident":"i128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shl","type_name":"u128","ident":"u128_shl","summary":"Shifts @num by @shift bits to the left."},{"type":"method","name":"shr","type_name":"i128","ident":"i128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shr","type_name":"u128","ident":"u128_shr","summary":"Shifts @num by @shift bits to the right."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"No description available."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"method","name":"sub","type_name":"i128","ident":"i128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"sub","type_name":"u128","ident":"u128_sub","summary":"Subtracts @b from @a."},{"type":"method","name":"xor","type_name":"i128","ident":"i128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"method","name":"xor","type_name":"u128","ident":"u128_xor","summary":"Performs the logical XOR operation for @a and @b."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"No description available."},{"type":"record","name":"DequeBucket","ctype":"TrbDequeBucket","summary":"No description available."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"d128","ctype":"d128","summary":"Stores the result of division of two `i128`."},{"type":"record","name":"d32","ctype":"d32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"d64","ctype":"d64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"dsize","ctype":"dsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"i128","ctype":"i128","summary":"A signed 128-bit integer type."},{"type":"record","name":"u128","ctype":"u128","summary":"An unsigned 128-bit integer type."},{"type":"record","name":"ud128","ctype":"ud128","summary":"Stores the result of division of two `u128`."},{"type":"record","name":"ud32","ctype":"ud32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"ud64","ctype":"ud64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udsize","ctype":"udsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[31,32,158,159,243,247,343,347,350,354],"-":[243,343,347,350,354],"0-bit":[84,85,303],"1-3":[69,70],"128":[60],"128-bit":[175,300],"16-bit":[2,8],"2":[61,62,63],"2^n":[149],"2alloc":[27],"32":[34,56,59,62],"32-bit":[3,9,50,51,58,68,343],"64":[35,57,60,63],"64-bit":[4,10,50,52,58,68,243,350],"8-bit":[5,11],"C":[96,99,100,101,102,122,125,126,127,128],"FALSE":[19],"FORMAT":[93],"HI":[97,123],"I128":[20,21,22,96,97,98],"I128_C":[96],"I128_HI":[97],"I128_LO":[98],"I16":[99],"I16_C":[99],"I32":[100],"I32_C":[100],"I64":[101],"I64_C":[101],"I8":[102],"I8_C":[102],"LO":[98,124],"MAX":[20,24],"MIN":[21],"TRB_FORMAT":[93],"TRUE":[23],"U128":[24,25,122,123,124],"U128_C":[122],"U128_HI":[123],"U128_LO":[124],"U16":[125],"U16_C":[125],"U32":[126],"U32_C":[126],"U64":[127],"U64_C":[127],"U8":[128],"U8_C":[128],"WIDTH":[22,25],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[51],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[52],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[64,65],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[59,60],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[69],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[70],"[reference]https://prng.di.unimi.it/":[243,343,347,350,354],"[reference]https://www.pcg-random.org/":[210,215],"`free":[161],"`free`":[27],"`snprintf`":[71,73],"`vsnprintf`":[72,79],"ab":[28],"abs32":[29],"abs64":[30],"absolut":[28,29,30],"accept":[154,169,292],"add":[150,176,203,204,236,237,275,276,277,278,279,280,281,282,283,284,301,327,328,329,330],"advanc":[162],"after":[194,195,227,228],"all":[158,190,223,289,290,332,343,347,350,354],"all-purpos":[347,354],"alloc":[27,71,72,73,79,161],"an":[8,9,10,11,12,155,158,159,165,247,300,343,350],"analog":[71,72,73,79],"and":[350],"and/or":[162],"anoth":[209,242],"arrai":[27,31,32,39,40,41,42,47,48,64,65,80,81,82,129,130,165,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"array'":[342],"as":[343,350],"assign":[248,249,250,251],"avail":[15,16,18,19,20,21,22,23,24,25,26,36,54,67,80,81,82,83,86,89,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,180],"avl":[287],"awar":[343],"back":[140,142,143,171,200,203,233,236,275,276,277,278,279,323,324,327,328],"becom":[286,342],"befor":[195,228],"begin":[204,237,280,281,282,283,284,329,330],"best":[343,350],"between":[107,108],"binari":[31,32],"bit":[60,84,85,111,112,113,114,184,185,303,308,309,343,350],"bucket":[147,151],"buffer":[166,253,285,286,318,334,338,341,342],"byte":[71,72,73,79,250,254,257,262,263,268,273,278,283],"c":[255,258,266,271,276,281],"can":[343,350],"capac":[263],"case":[343,350],"cell":[80],"charact":[255,258,266,271,276,281],"check":[191,224],"choos":[107,108],"circular":[188,221],"clz":[83,303],"clz32":[84],"clz64":[85],"cmp":[13,14,178,252,304],"code":[92],"compar":[13,14,37,38,43,44,45,46,49,66,74,75,76,77,78,178,252,304],"comparison":[154,169,292],"complement":[182],"complet":[152,167,192,225,256,319],"complex":[343,350],"consid":[343,350],"contain":[86],"content":[248,249,250,251],"copi":[15,189,222,288,317],"count":[84,85,303],"creat":[153,154,161,168,169,193,226,259,260,261,262,263,264,285,288,291,292,317,320,341],"critic":[36],"critical":[26],"current":[163,164],"d128":[131],"d32":[132],"d64":[133],"data":[13,32,40,42,48,65,154,165,169,198,208,231,241,292,337,340],"debug":[26],"dequ":[87,88,134,147],"descript":[15,16,18,19,20,21,22,23,24,25,26,36,54,67,80,81,82,83,86,89,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,180],"destroi":[135,151,166,190,223,253,289,318],"discard":[60],"distanc":[89],"div":[33,34,35,179,305],"divid":[33,34,35,179,305],"divis":[131,132,133,148,312,313,314,315],"do":[90],"doubl":[1],"doubly-link":[188,193],"dsize":[148],"dynam":[247,316,320],"element":[170,171,172,173,196,197,198,199,202,209,229,230,231,232,235,242,295,321,322,323,324,325,326,327,328,329,330,332,333],"empti":[191,224],"end":[203,236,275,276,277,278,279,327,328],"enough":[71,72,73,79],"entri":[31,32,87,88,94,95,103,115,120,129,130,150,155,156,157,158,163,174,203,204,236,237,331,336,337],"eras":[254,255],"error":[26],"exampl":[158,159,247],"excel":[354],"except":[71,72,73,79,343,350],"exist":[155],"exit":[36,91,92],"extrem":[347],"f32":[0,37,217,345],"f32cmp":[37],"f64":[1,38,212,218,352],"f64cmp":[38],"fail":[36,67,90,91,92,109,110,350],"false":[19],"famili":[343,350],"familii":[243],"fast":[243,347],"fastest":[343,350],"first":[172,201,234,252,325,326],"flag":[26],"floating-point":[0,1,7,343,345,350,352],"fmt":[71,249,261,267,272,277,282],"follow":[158,159,247],"foreach":[104,105,116],"format":[249,251,261,264,267,269,272,274,277,279,282,284],"four":[343],"free":[16,136,151,152,166,167,190,192,223,225,253,256,289,290,318,319,338],"freed":[27],"from":[157,158,171,172,173,186,200,201,205,209,233,234,238,242,243,254,257,258,259,261,264,298,310,323,324,325,326,331,332,333,343,350],"front":[141,144,145,172,201,204,234,237,280,281,282,283,284,325,326,329,330],"func":[13,14,15,16,17,18,54],"function":[13,14,17,31,32,154,158,169,292],"gener":[210,212,213,214,215,217,218,219,220,243,245,246,343,345,346,347,349,350,352,353,354,356],"get":[28,29,30,81,87,88,94,95,129,130,158,159,160,199,202,232,235,247,257,258],"given":[87,88,94,95,129,130,155,199,211,212,213,214,216,217,218,219,220,232,244,245,246,255,265,266,267,268,269,270,271,272,273,274,321,322,331,344,345,346,348,349,351,352,353,355,356],"ha":[354],"half":[69],"hash":[17,51,52,149,150,151,152,155,156,157,158,159],"have":[343],"heap":[41,42,94,95,161,165,166,167,170,171,172,173,174],"heapifi":[39,40],"heapsort":[41,42],"high-qual":[243],"hold":[71,72,73,79],"how":[158,159,247],"i128":[131,175,178],"i128_add":[176],"i128_and":[177],"i128_cmp":[178],"i128_div":[179],"i128_max":[20],"i128_min":[21],"i128_minus":[180],"i128_mul":[181],"i128_not":[182],"i128_or":[183],"i128_shl":[184],"i128_shr":[185],"i128_sub":[186],"i128_width":[22],"i128_xor":[187],"i16":[2,43],"i16cmp":[43],"i32":[3,44,132],"i32cmp":[44],"i64":[4,45,133],"i64cmp":[45],"i8":[5,46],"i8cmp":[46],"includ":[71,72,73,79],"index":[87,88,94,95,129,130,255,265,266,267,268,269,270,271,272,273,274,321,322,331],"info":[26],"init":[106,117,121,137,153,154,161,168,169,193,211,216,226,244,247,259,261,262,263,264,291,292,320,344,348,351,355],"init0":[260],"initi":[211,216,243,244,344,348,351,355],"inord":[293],"insert":[47,48,138,139,155,170,194,195,227,228,265,266,267,268,269,294,321,322],"inssort":[47,48],"integ":[2,3,4,5,6,8,9,10,11,12,175,300],"isiz":[6,49,148],"isize":[6],"isizecmp":[49],"issu":[343,350],"it":[155],"iter":[159,163,164],"itself":[290],"jenkin":[51,52],"jhash":[50],"jhash32":[51],"jhash64":[52],"just":[350],"kei":[17,160,162],"knuth":[64,65],"larg":[71,72,73,79],"largest":[107],"last":[171,200,233,323,324],"lead":[84,85,303],"left":[111,112,184,308],"len":[196,229,250,262,268,273,278,283],"linear":[343,350],"list":[103,104,105,106,188,189,190,191,192,193,196,197,198,200,201,202,203,204,205,206,207,208,209,221,222,223,224,225,226,229,230,231,233,234,235,236,237,238,239,240,241,242],"logic":[177,183,187,302,307,311],"lookup":[156,197,198,230,231,295],"low":[343,350],"lowest":[108,343,350],"m":[213,218,220],"mani":[139,143,145,322,324,326,328,330],"max":[107],"memori":[161,334,338],"messag":[26,53,54],"might":[350],"min":[108],"minu":[180],"most":[84,85,303],"mul":[55,56,57,181,306],"multipli":[55,56,57,181,306],"murmurhash3":[58,59,60],"negat":[182],"new":[150,153,154,161,168,169,193,203,204,226,236,237,259,260,261,262,263,264,285,291,292,320,341],"next":[61,62,63,162,212,213,214,217,218,219,220,245,246,345,346,349,352,353,356],"node":[106,117,120,121,190,194,195,200,201,205,223,227,228,233,234,238,289,290,294,298,299],"not":[191,224],"noth":[162],"now":[162],"nth":[199,232],"null":[71,72,73,79],"number":[0,1,7,33,34,35,55,56,57,84,85,196,212,213,214,217,218,219,220,229,243,245,246,303,343,345,346,349,350,352,353,356],"on":[155,194,195,209,227,228,242],"one'":[182],"onto":[203,204,236,237],"oper":[177,183,187,302,307,311],"or":[162],"other":[194,195,227,228],"output":[71,72,73,79,158,159,247,343,350],"over":[159],"overwrit":[270,271,272,273,274],"pass":[343,347,350,354],"pcg128":[210,212,213,214],"pcg64":[215,217,218,219,220],"perform":[177,182,183,187,302,307,311],"platform":[50,58,68],"point":[162,164],"pointer":[6,12,88,95,130,163],"pop":[140,141,171,172,200,201,233,234,323,324,325,326],"posit":[84,85,199,202,232,235,303],"postord":[296],"pow2":[33,34,35,55,56,57,61,62,63],"power":[33,34,35,55,56,57,61,62,63],"precis":[0,1,7],"preoder":[297],"preorder":[297],"print":[26,53,247],"probe":[149],"ptr":[88,95,130],"push":[142,143,144,145,203,204,236,237,275,276,277,278,279,280,281,282,283,284,327,328,329,330],"quadrat":[149],"quadrupl":[7],"quicksort":[64,65],"random":[212,213,214,217,218,219,220,245,246,345,346,349,352,353,356],"rang":[333],"real":[7,66],"realcmp":[66],"recommend":[243],"releas":[161],"remov":[157,158,163,171,172,173,200,201,205,233,234,238,298,323,324,325,326,331,332,333],"replac":[155,164,248,249,250,251],"repres":[165],"requir":[334],"reserv":[334],"result":[131,132,133,148,162,312,313,314,315],"retriev":[160,162],"return":[67,109,110,196,229],"revers":[105,206,239,335],"right":[113,114,185,309],"rock-solid":[347,354],"rotat":[111,112,113,114],"rotl32":[111],"rotl64":[112],"rotr32":[113],"rotr64":[114],"round":[61,62,63],"rs":[212,214,217,219],"rx":[213,218,220],"s":[221],"search":[31,32,156,174,197,198,230,231,295,336,337],"second":[252],"seed":[211,216,243,244,344,348,351,355],"self-balanc":[287],"seudorandom":[243],"shift":[184,185,308,309],"shl":[184,308],"should":[27,31,32,158,159,247],"show":[158,159,247],"shr":[185,309],"shrink":[146,338],"sign":[2,3,4,5,6,175],"signific":[84,85,303],"similar":[158,159,247],"singl":[0],"singly-link":[221,226],"siphash":[68,69,70],"siphash32":[69],"siphash64":[70],"size":[6,12,149,247,263,316,320],"slist":[115,116,117],"sm64":[243],"so":[343,350],"sort":[31,32,41,42,47,48,64,65,207,208,240,241,339,340],"speed":[354],"splice":[209,242],"splitmix64":[243],"start":[84,85,254,257,303],"state":[210,211,212,213,214,215,216,217,218,219,220,244,245,246,344,345,346,348,349,351,352,353,355,356],"stdout":[247],"steal":[285,286,341,342],"steal0":[286,342],"store":[131,132,133,148,312,313,314,315],"strdup":[71,72],"strfmt":[73],"string":[71,72,73,79,247,249,251,252,253,254,255,256,257,258,261,264,266,267,269,272,274,276,277,279,281,282,284,285,286],"structur":[165],"sub":[186,310],"sub-n":[347,354],"subtract":[186,310],"swap":[82],"tabl":[149,150,151,152,155,156,157,158,159],"talloc":[118],"talloc0":[119],"termin":[71,72,73,79],"test":[343,347,350,354],"those":[350],"three":[350],"too":[343,350],"transfer":[209,242],"travers":[293,296,297],"trb_2alloc":[27],"trb_abs":[28],"trb_abs32":[29],"trb_abs64":[30],"trb_array_cell":[80],"trb_array_get":[81],"trb_array_swap":[82],"trb_binary_search":[31],"trb_binary_search_data":[32],"trb_clz":[83],"trb_clz32":[84],"trb_clz64":[85],"trb_container_of":[86],"trb_deque_destroy":[135],"trb_deque_free":[136],"trb_deque_get":[87],"trb_deque_init":[137],"trb_deque_insert":[138],"trb_deque_insert_many":[139],"trb_deque_pop_back":[140],"trb_deque_pop_front":[141],"trb_deque_ptr":[88],"trb_deque_push_back":[142],"trb_deque_push_back_many":[143],"trb_deque_push_front":[144],"trb_deque_push_front_many":[145],"trb_deque_shrink":[146],"trb_distance_of":[89],"trb_div_pow2":[33],"trb_div_pow2_32":[34],"trb_div_pow2_64":[35],"trb_do_if_fail":[90],"trb_exit_if_fail":[91],"trb_exit_if_fail_critical":[36],"trb_exit_with_code_if_fail":[92],"trb_f32cmp":[37],"trb_f64cmp":[38],"trb_hash_table_add":[150],"trb_hash_table_destroy":[151],"trb_hash_table_free":[152],"trb_hash_table_init":[153],"trb_hash_table_init_data":[154],"trb_hash_table_insert":[155],"trb_hash_table_iter_get":[160],"trb_hash_table_iter_init":[161],"trb_hash_table_iter_next":[162],"trb_hash_table_iter_remove":[163],"trb_hash_table_iter_replace":[164],"trb_hash_table_lookup":[156],"trb_hash_table_remove":[157],"trb_hash_table_remove_all":[158],"trb_heap_destroy":[166],"trb_heap_free":[167],"trb_heap_get":[94],"trb_heap_init":[168],"trb_heap_init_data":[169],"trb_heap_insert":[170],"trb_heap_pop_back":[171],"trb_heap_pop_front":[172],"trb_heap_ptr":[95],"trb_heap_remove":[173],"trb_heap_search":[174],"trb_heapify":[39],"trb_heapify_data":[40],"trb_heapsort":[41],"trb_heapsort_data":[42],"trb_i16cmp":[43],"trb_i32cmp":[44],"trb_i64cmp":[45],"trb_i8cmp":[46],"trb_inssort":[47],"trb_inssort_data":[48],"trb_isizecmp":[49],"trb_jhash":[50],"trb_jhash32":[51],"trb_jhash64":[52],"trb_list_copy":[189],"trb_list_destroy":[190],"trb_list_empty":[191],"trb_list_entry":[103],"trb_list_foreach":[104],"trb_list_foreach_reverse":[105],"trb_list_free":[192],"trb_list_init":[193],"trb_list_insert_after":[194],"trb_list_insert_before":[195],"trb_list_len":[196],"trb_list_lookup":[197],"trb_list_lookup_data":[198],"trb_list_node_init":[106],"trb_list_nth":[199],"trb_list_pop_back":[200],"trb_list_pop_front":[201],"trb_list_position":[202],"trb_list_push_back":[203],"trb_list_push_front":[204],"trb_list_remove":[205],"trb_list_reverse":[206],"trb_list_sort":[207],"trb_list_sort_data":[208],"trb_list_splice":[209],"trb_max":[107],"trb_message":[53],"trb_message_func":[54],"trb_min":[108],"trb_mul_pow2":[55],"trb_mul_pow2_32":[56],"trb_mul_pow2_64":[57],"trb_murmurhash3":[58],"trb_murmurhash3_32":[59],"trb_murmurhash3_64":[60],"trb_pcg128_init":[211],"trb_pcg128_next_f64":[212],"trb_pcg128_next_u128":[213],"trb_pcg128_next_u64":[214],"trb_pcg64_init":[216],"trb_pcg64_next_f32":[217],"trb_pcg64_next_f64":[218],"trb_pcg64_next_u32":[219],"trb_pcg64_next_u64":[220],"trb_pow2":[61],"trb_pow2_32":[62],"trb_pow2_64":[63],"trb_quicksort":[64],"trb_quicksort_data":[65],"trb_realcmp":[66],"trb_return_if_fail":[109],"trb_return_if_fail_warning":[67],"trb_return_val_if_fail":[110],"trb_rotl32":[111],"trb_rotl64":[112],"trb_rotr32":[113],"trb_rotr64":[114],"trb_siphash":[68],"trb_siphash32":[69],"trb_siphash64":[70],"trb_slist_copy":[222],"trb_slist_destroy":[223],"trb_slist_empty":[224],"trb_slist_entry":[115],"trb_slist_foreach":[116],"trb_slist_free":[225],"trb_slist_init":[226],"trb_slist_insert_after":[227],"trb_slist_insert_before":[228],"trb_slist_len":[229],"trb_slist_lookup":[230],"trb_slist_lookup_data":[231],"trb_slist_node_init":[117],"trb_slist_nth":[232],"trb_slist_pop_back":[233],"trb_slist_pop_front":[234],"trb_slist_position":[235],"trb_slist_push_back":[236],"trb_slist_push_front":[237],"trb_slist_remove":[238],"trb_slist_reverse":[239],"trb_slist_sort":[240],"trb_slist_sort_data":[241],"trb_slist_splice":[242],"trb_sm64_init":[244],"trb_sm64_next_u32":[245],"trb_sm64_next_u64":[246],"trb_strdup_fmt":[71],"trb_strdup_vfmt":[72],"trb_strfmt":[73],"trb_string_assign":[248],"trb_string_assign_fmt":[249],"trb_string_assign_len":[250],"trb_string_assign_vfmt":[251],"trb_string_cmp":[252],"trb_string_destroy":[253],"trb_string_erase":[254],"trb_string_erase_c":[255],"trb_string_free":[256],"trb_string_get":[257],"trb_string_get_c":[258],"trb_string_init":[259],"trb_string_init0":[260],"trb_string_init_fmt":[261],"trb_string_init_len":[262],"trb_string_init_sized":[263],"trb_string_init_vfmt":[264],"trb_string_insert":[265],"trb_string_insert_c":[266],"trb_string_insert_fmt":[267],"trb_string_insert_len":[268],"trb_string_insert_vfmt":[269],"trb_string_overwrite":[270],"trb_string_overwrite_c":[271],"trb_string_overwrite_fmt":[272],"trb_string_overwrite_len":[273],"trb_string_overwrite_vfmt":[274],"trb_string_push_back":[275],"trb_string_push_back_c":[276],"trb_string_push_back_fmt":[277],"trb_string_push_back_len":[278],"trb_string_push_back_vfmt":[279],"trb_string_push_front":[280],"trb_string_push_front_c":[281],"trb_string_push_front_fmt":[282],"trb_string_push_front_len":[283],"trb_string_push_front_vfmt":[284],"trb_string_steal":[285],"trb_string_steal0":[286],"trb_talloc":[118],"trb_talloc0":[119],"trb_tree_copy":[288],"trb_tree_destroy":[289],"trb_tree_free":[290],"trb_tree_init":[291],"trb_tree_init_data":[292],"trb_tree_inorder":[293],"trb_tree_insert":[294],"trb_tree_lookup":[295],"trb_tree_node_entry":[120],"trb_tree_node_init":[121],"trb_tree_postorder":[296],"trb_tree_preorder":[297],"trb_tree_remove":[298],"trb_u16cmp":[74],"trb_u32cmp":[75],"trb_u64cmp":[76],"trb_u8cmp":[77],"trb_usizecmp":[78],"trb_vector_copy":[317],"trb_vector_destroy":[318],"trb_vector_free":[319],"trb_vector_get":[129],"trb_vector_init":[320],"trb_vector_insert":[321],"trb_vector_insert_many":[322],"trb_vector_pop_back":[323],"trb_vector_pop_back_many":[324],"trb_vector_pop_front":[325],"trb_vector_pop_front_many":[326],"trb_vector_ptr":[130],"trb_vector_push_back":[327],"trb_vector_push_back_many":[328],"trb_vector_push_front":[329],"trb_vector_push_front_many":[330],"trb_vector_remove":[331],"trb_vector_remove_all":[332],"trb_vector_remove_range":[333],"trb_vector_require":[334],"trb_vector_reverse":[335],"trb_vector_search":[336],"trb_vector_search_data":[337],"trb_vector_shrink":[338],"trb_vector_sort":[339],"trb_vector_sort_data":[340],"trb_vector_steal":[341],"trb_vector_steal0":[342],"trb_vstrfmt":[79],"trb_xs128p_init":[344],"trb_xs128p_next_f32":[345],"trb_xs128p_next_u32":[346],"trb_xs128ss_init":[348],"trb_xs128ss_next":[349],"trb_xs256p_init":[351],"trb_xs256p_next_f64":[352],"trb_xs256p_next_u64":[353],"trb_xs256ss_init":[355],"trb_xs256ss_next":[356],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[134],"trbdequebucket":[147],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[149],"trbhashtableiter":[159],"trbheap":[165],"trblist":[188],"trbmessageflags":[26],"trbpcg128":[210],"trbpcg64":[215],"trbslist":[221],"trbsm64":[243],"trbstring":[247,285],"trbstring'":[286],"trbtree":[287],"trbtreenode":[299],"trbuserfunc":[18],"trbvector":[316],"trbxs128p":[343],"trbxs128ss":[347],"trbxs256p":[350],"trbxs256ss":[354],"tree":[120,121,287,288,289,290,293,294,295,296,297,298,299],"true":[23],"two":[13,14,33,34,35,37,38,43,44,45,46,49,55,56,57,66,74,75,76,77,78,131,132,133,148,178,304,312,313,314,315],"two-dimension":[27],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12,175,300],"u128":[213,300,304,312],"u128_add":[301],"u128_and":[302],"u128_clz":[303],"u128_cmp":[304],"u128_div":[305],"u128_max":[24],"u128_mul":[306],"u128_or":[307],"u128_shl":[308],"u128_shr":[309],"u128_sub":[310],"u128_width":[25],"u128_xor":[311],"u16":[8,74],"u16cmp":[74],"u32":[9,75,219,245,313,346],"u32cmp":[75],"u64":[10,76,214,220,246,314,353],"u64cmp":[76],"u8":[11,77],"u8cmp":[77],"ud128":[312],"ud32":[313],"ud64":[314],"udsiz":[315],"udsize":[315],"unsign":[8,9,10,11,12,300],"unus":[338],"up":[61,62,63,176,301],"upper":[60],"us":[13,31,32,40,41,42,47,48,50,58,64,65,68,158,161,198,208,212,213,214,217,218,219,220,231,241,337,340,343,350],"user":[13,18,32,40,42,48,154,169,198,208,231,241,292,337,340],"usiz":[12,78,315],"usize":[12],"usizecmp":[78],"usual":[343,350],"val":[110],"valu":[13,14,28,29,30,87,94,107,108,129,155,160,162,164],"vector":[129,130,316],"vfmt":[72,251,264,269,274,279,284],"vstrfmt":[79],"want":[31,32],"warn":[67],"warning":[26],"we":[60,343],"whether":[191,224],"which":[350],"x64":[60],"x86":[59],"xor":[187,311],"xorshift":[343,350],"xoshiro":[243],"xoshiro128**":[347],"xoshiro128+":[343],"xoshiro256**":[354],"xoshiro256+":[350],"xs":[213,218,220],"xs128p":[343],"xs128ss":[347],"xs256p":[350],"xs256ss":[354],"xsh":[212,214,217,219],"you":[31,32,158,159,247],"zero":[268,273,278,283,321,322,327,328,329,330]}}