{"meta":{"ns":"Tribble","version":"1","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"No description available."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs","ident":"trb_abs","summary":"No description available."},{"type":"function","name":"abs32","ident":"trb_abs32","summary":"No description available."},{"type":"function","name":"abs64","ident":"trb_abs64","summary":"No description available."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the array using binary ..."},{"type":"function","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the array."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the array using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the array using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the array using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the array using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the array using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the array using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"realcmp","ident":"trb_realcmp","summary":"Compares two `real`."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"array_swap","ident":"trb_array_swap","summary":"No description available."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"No description available."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"No description available."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"No description available."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"No description available."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get_unsafe","ident":"trb_heap_get_unsafe","summary":"Unsafe version of `trb_heap_get()`."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"No description available."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"No description available."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"No description available."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"No description available."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"No description available."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"No description available."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"No description available."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"No description available."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get_unsafe","ident":"trb_vector_get_unsafe","summary":"Unsafe version of `trb_vector_get()`."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"String","ident":"trb_string_copy","summary":"Creates a copy of the string."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the array."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the array buffer."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the array completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"get","type_name":"Heap","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"method","name":"get","type_name":"String","ident":"trb_string_get","summary":"Gets @len bytes in the string starting from @index."},{"type":"method","name":"get","type_name":"Vector","ident":"trb_vector_get","summary":"Gets the value of the entry in the array ..."},{"type":"method","name":"get_c","type_name":"String","ident":"trb_string_get_c","summary":"Gets the character from the string."},{"type":"method","name":"get_range","type_name":"Vector","ident":"trb_vector_get_range","summary":"Gets the range of elements in the array."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the array at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the array at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u128","type_name":"Pcg128","ident":"trb_pcg128_next_u128","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the array."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the array."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the array. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the array. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the array. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the array. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the array."},{"type":"method","name":"remove_index","type_name":"Vector","ident":"trb_vector_remove_index","summary":"Removes the entry at the given index from the array."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the array."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the array buffer."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"Vector","ident":"trb_vector_reverse","summary":"Reverses the array."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the array."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the array using user data."},{"type":"method","name":"set","type_name":"Vector","ident":"trb_vector_set","summary":"Changes the value of the entry at the given ..."},{"type":"method","name":"set_range","type_name":"Vector","ident":"trb_vector_set_range","summary":"Overwrites values of the entries at the given index ..."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the array buffer."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"Vector","ident":"trb_vector_sort","summary":"Sorts the array."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"Vector","ident":"trb_vector_sort_data","summary":"Sorts the array using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the array buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the array buffer. Array's buffer becomes %NULL."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality seudorandom number generator. ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."}],"terms":{"":[10,11,101,102,174,178,261,265,268,272],"-":[174,261,265,268,272],"1-3":[48,49],"128":[39],"2":[40,41,42],"2^n":[92],"32":[13,35,38,41],"32-bit":[29,30,37,47,261],"64":[14,36,39,42],"64-bit":[29,31,37,47,174,268],"FORMAT":[70],"TRB_FORMAT":[70],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[30],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[31],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[43,44],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[38,39],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[48],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[49],"[reference]https://prng.di.unimi.it/":[174,261,265,268,272],"[reference]https://www.pcg-random.org/":[141,146],"`snprintf`":[50,52],"`trb_heap_get`":[71],"`trb_vector_get`":[91],"`vsnprintf`":[51,58],"ab":[7],"abs32":[8],"abs64":[9],"accept":[97,113,224],"add":[93,134,135,167,168,207,208,209,210,211,212,213,214,215,216,243,244,245,246],"advanc":[105],"after":[125,126,158,159],"all":[101,121,154,221,222,247,261,265,268,272],"all-purpos":[265,272],"alloc":[50,51,52,58],"an":[98,101,102,108,178,261,268],"analog":[50,51,52,58],"and":[268],"and/or":[105],"anoth":[140,173],"arrai":[10,11,18,19,20,21,26,27,43,44,59,60,61,108,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"array'":[260],"as":[261,268],"assign":[179,180,181,182],"avail":[2,3,4,5,6,7,8,9,15,33,46,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"avl":[219],"awar":[261],"back":[115,131,134,164,167,207,208,209,210,211,241,243,244],"becom":[218,260],"befor":[126,159],"begin":[135,168,212,213,214,215,216,245,246],"best":[261,268],"binari":[10,11],"bit":[39,261,268],"bucket":[94],"buffer":[109,185,217,218,234,250,256,259,260],"byte":[50,51,52,58,181,186,189,194,195,200,205,210,215],"c":[187,190,198,203,208,213],"can":[261,268],"capac":[195],"case":[261,268],"cell":[59],"chang":[254],"charact":[187,190,198,203,208,213],"check":[122,155],"circular":[119,152],"clz":[62],"clz32":[63],"clz64":[64],"cmp":[0,1,183],"code":[69],"compar":[0,1,16,17,22,23,24,25,28,45,53,54,55,56,57,183],"comparison":[97,113,224],"complet":[95,110,123,156,188,235],"complex":[261,268],"consid":[261,268],"contain":[65],"content":[179,180,181,182],"copi":[2,120,153,184,220,233],"creat":[96,97,104,112,113,124,157,184,191,192,193,194,195,196,217,220,223,224,233,238,259],"critic":[15],"critical":[6],"current":[106,107],"data":[0,11,19,21,27,44,97,108,113,129,139,162,172,224,253,254,255,258],"debug":[6],"descript":[2,3,4,5,6,7,8,9,15,33,46,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"destroi":[94,109,121,154,185,221,234],"discard":[39],"distanc":[66],"div":[12,13,14],"divid":[12,13,14],"do":[67],"doubly-link":[119,124],"dynam":[178,232,238],"element":[114,115,116,117,127,128,129,130,133,140,160,161,162,163,166,173,227,237,239,240,241,242,243,244,245,246,247,249],"empti":[122,155],"end":[134,167,207,208,209,210,211,243,244],"enough":[50,51,52,58],"entri":[10,11,72,84,89,93,98,99,100,101,106,111,118,134,135,167,168,236,248,252,253,254,255],"eras":[186,187],"error":[6],"exampl":[101,102,178],"excel":[272],"except":[50,51,52,58,261,268],"exist":[98],"exit":[15,68,69],"extrem":[265],"f32":[16,148,263],"f32cmp":[16],"f64":[17,143,149,270],"f64cmp":[17],"fail":[15,46,67,68,69,78,79,268],"famili":[261,268],"familii":[174],"fast":[174,265],"fastest":[261,268],"first":[116,132,165,183,242],"flag":[6],"floating-point":[261,263,268,270],"fmt":[50,180,193,199,204,209,214],"follow":[101,102,178],"foreach":[73,74,85],"format":[180,182,193,196,199,201,204,206,209,211,214,216],"four":[261],"free":[3,94,95,109,110,121,123,154,156,185,188,221,222,234,235,256],"from":[100,101,115,116,117,131,132,136,140,164,165,169,173,174,186,189,190,191,193,196,230,241,242,247,248,249,261,268],"front":[116,132,135,165,168,212,213,214,215,216,242,245,246],"func":[0,1,2,3,4,5,33],"function":[0,1,10,11,97,101,113,224],"gener":[141,143,144,145,146,148,149,150,151,174,176,177,261,263,264,265,267,268,270,271,272,274],"get":[60,71,91,101,102,103,111,130,133,163,166,178,189,190,236,237],"given":[98,111,130,142,143,144,145,147,148,149,150,151,163,175,176,177,187,197,198,199,200,201,202,203,204,205,206,236,239,240,248,254,255,262,263,264,266,267,269,270,271,273,274],"ha":[272],"half":[48],"hash":[4,30,31,92,93,94,95,98,99,100,101,102],"have":[261],"heap":[20,21,71,108,109,110,111,114,115,116,117,118],"heapifi":[18,19],"heapsort":[20,21],"high-qual":[174],"hold":[50,51,52,58],"how":[101,102,178],"i16":[22],"i16cmp":[22],"i32":[23],"i32cmp":[23],"i64":[24],"i64cmp":[24],"i8":[25],"i8cmp":[25],"includ":[50,51,52,58],"index":[111,187,197,198,199,200,201,202,203,204,205,206,236,239,240,248,254,255],"info":[6],"init":[75,86,90,96,97,104,112,113,124,142,147,157,175,178,191,193,194,195,196,223,224,238,262,266,269,273],"init0":[192],"initi":[142,147,174,175,262,266,269,273],"inord":[225],"insert":[26,27,98,114,125,126,158,159,197,198,199,200,201,226,239,240],"inssort":[26,27],"isiz":[28],"isizecmp":[28],"issu":[261,268],"it":[98],"iter":[102,106,107],"itself":[222],"jenkin":[30,31],"jhash":[29],"jhash32":[30],"jhash64":[31],"just":[268],"kei":[103,105],"knuth":[43,44],"larg":[50,51,52,58],"last":[115,131,164,241],"len":[127,160,181,194,200,205,210,215],"linear":[261,268],"list":[72,73,74,75,119,120,121,122,123,124,127,128,129,131,132,133,134,135,136,137,138,139,140,152,153,154,155,156,157,160,161,162,164,165,166,167,168,169,170,171,172,173],"lookup":[99,128,129,161,162,227],"low":[261,268],"lowest":[261,268],"m":[144,149,151],"mani":[240,244,246],"max":[76],"memori":[250,256],"messag":[6,32,33],"might":[268],"min":[77],"mul":[34,35,36],"multipli":[34,35,36],"murmurhash3":[37,38,39],"new":[93,96,97,104,112,113,124,134,135,157,167,168,191,192,193,194,195,196,217,223,224,238,259],"next":[40,41,42,105,143,144,145,148,149,150,151,176,177,263,264,267,270,271,274],"node":[75,86,89,90,121,125,126,131,132,136,154,158,159,164,165,169,221,222,226,230,231],"not":[122,155],"noth":[105],"now":[105],"nth":[130,163],"null":[50,51,52,58],"number":[12,13,14,34,35,36,127,143,144,145,148,149,150,151,160,174,176,177,261,263,264,267,268,270,271,274],"on":[98,125,126,140,158,159,173],"onto":[134,135,167,168],"or":[105],"other":[125,126,158,159],"output":[50,51,52,58,101,102,178,261,268],"over":[102],"overwrit":[202,203,204,205,206,255],"pass":[261,265,268,272],"pcg128":[141,143,144,145],"pcg64":[146,148,149,150,151],"platform":[29,37,47],"point":[105,107],"pointer":[106],"pop":[115,116,131,132,164,165,241,242],"posit":[130,133,163,166],"postord":[228],"pow2":[12,13,14,34,35,36,40,41,42],"power":[12,13,14,34,35,36,40,41,42],"preoder":[229],"preorder":[229],"print":[6,32,178],"probe":[92],"push":[134,135,167,168,207,208,209,210,211,212,213,214,215,216,243,244,245,246],"quadrat":[92],"quicksort":[43,44],"random":[143,144,145,148,149,150,151,176,177,263,264,267,270,271,274],"rang":[237,249,255],"real":[45],"realcmp":[45],"recommend":[174],"remov":[100,101,106,115,116,117,131,132,136,164,165,169,230,241,242,247,248,249],"replac":[98,107,179,180,181,182],"repres":[108],"requir":[250],"reserv":[250],"result":[105],"retriev":[103,105],"return":[46,78,79,127,160],"revers":[74,137,170,251],"rock-solid":[265,272],"rotl32":[80],"rotl64":[81],"rotr32":[82],"rotr64":[83],"round":[40,41,42],"rs":[143,145,148,150],"rx":[144,149,151],"s":[152],"search":[10,11,99,118,128,129,161,162,227,252,253],"second":[183],"seed":[142,147,174,175,262,266,269,273],"self-balanc":[219],"set":[254,255],"seudorandom":[174],"should":[10,11,101,102,178],"show":[101,102,178],"shrink":[256],"similar":[101,102,178],"singly-link":[152,157],"siphash":[47,48,49],"siphash32":[48],"siphash64":[49],"size":[92,178,195,232,238],"slist":[84,85,86],"sm64":[174],"so":[261,268],"sort":[10,11,20,21,26,27,43,44,138,139,171,172,257,258],"speed":[272],"splice":[140,173],"splitmix64":[174],"start":[186,189],"state":[141,142,143,144,145,146,147,148,149,150,151,175,176,177,262,263,264,266,267,269,270,271,273,274],"stdout":[178],"steal":[217,218,259,260],"steal0":[218,260],"strdup":[50,51],"strfmt":[52],"string":[50,51,52,58,178,180,182,183,184,185,186,187,188,189,190,193,196,198,199,201,204,206,208,209,211,213,214,216,217,218],"structur":[108],"sub-n":[265,272],"swap":[61],"tabl":[92,93,94,95,98,99,100,101,102],"talloc":[87],"talloc0":[88],"termin":[50,51,52,58],"test":[261,265,268,272],"those":[268],"three":[268],"too":[261,268],"transfer":[140,173],"travers":[225,228,229],"trb_abs":[7],"trb_abs32":[8],"trb_abs64":[9],"trb_array_cell":[59],"trb_array_get":[60],"trb_array_swap":[61],"trb_binary_search":[10],"trb_binary_search_data":[11],"trb_clz":[62],"trb_clz32":[63],"trb_clz64":[64],"trb_container_of":[65],"trb_distance_of":[66],"trb_div_pow2":[12],"trb_div_pow2_32":[13],"trb_div_pow2_64":[14],"trb_do_if_fail":[67],"trb_exit_if_fail":[68],"trb_exit_if_fail_critical":[15],"trb_exit_with_code_if_fail":[69],"trb_f32cmp":[16],"trb_f64cmp":[17],"trb_hash_table_add":[93],"trb_hash_table_destroy":[94],"trb_hash_table_free":[95],"trb_hash_table_init":[96],"trb_hash_table_init_data":[97],"trb_hash_table_insert":[98],"trb_hash_table_iter_get":[103],"trb_hash_table_iter_init":[104],"trb_hash_table_iter_next":[105],"trb_hash_table_iter_remove":[106],"trb_hash_table_iter_replace":[107],"trb_hash_table_lookup":[99],"trb_hash_table_remove":[100],"trb_hash_table_remove_all":[101],"trb_heap_destroy":[109],"trb_heap_free":[110],"trb_heap_get":[111],"trb_heap_get_unsafe":[71],"trb_heap_init":[112],"trb_heap_init_data":[113],"trb_heap_insert":[114],"trb_heap_pop_back":[115],"trb_heap_pop_front":[116],"trb_heap_remove":[117],"trb_heap_search":[118],"trb_heapify":[18],"trb_heapify_data":[19],"trb_heapsort":[20],"trb_heapsort_data":[21],"trb_i16cmp":[22],"trb_i32cmp":[23],"trb_i64cmp":[24],"trb_i8cmp":[25],"trb_inssort":[26],"trb_inssort_data":[27],"trb_isizecmp":[28],"trb_jhash":[29],"trb_jhash32":[30],"trb_jhash64":[31],"trb_list_copy":[120],"trb_list_destroy":[121],"trb_list_empty":[122],"trb_list_entry":[72],"trb_list_foreach":[73],"trb_list_foreach_reverse":[74],"trb_list_free":[123],"trb_list_init":[124],"trb_list_insert_after":[125],"trb_list_insert_before":[126],"trb_list_len":[127],"trb_list_lookup":[128],"trb_list_lookup_data":[129],"trb_list_node_init":[75],"trb_list_nth":[130],"trb_list_pop_back":[131],"trb_list_pop_front":[132],"trb_list_position":[133],"trb_list_push_back":[134],"trb_list_push_front":[135],"trb_list_remove":[136],"trb_list_reverse":[137],"trb_list_sort":[138],"trb_list_sort_data":[139],"trb_list_splice":[140],"trb_max":[76],"trb_message":[32],"trb_message_func":[33],"trb_min":[77],"trb_mul_pow2":[34],"trb_mul_pow2_32":[35],"trb_mul_pow2_64":[36],"trb_murmurhash3":[37],"trb_murmurhash3_32":[38],"trb_murmurhash3_64":[39],"trb_pcg128_init":[142],"trb_pcg128_next_f64":[143],"trb_pcg128_next_u128":[144],"trb_pcg128_next_u64":[145],"trb_pcg64_init":[147],"trb_pcg64_next_f32":[148],"trb_pcg64_next_f64":[149],"trb_pcg64_next_u32":[150],"trb_pcg64_next_u64":[151],"trb_pow2":[40],"trb_pow2_32":[41],"trb_pow2_64":[42],"trb_quicksort":[43],"trb_quicksort_data":[44],"trb_realcmp":[45],"trb_return_if_fail":[78],"trb_return_if_fail_warning":[46],"trb_return_val_if_fail":[79],"trb_rotl32":[80],"trb_rotl64":[81],"trb_rotr32":[82],"trb_rotr64":[83],"trb_siphash":[47],"trb_siphash32":[48],"trb_siphash64":[49],"trb_slist_copy":[153],"trb_slist_destroy":[154],"trb_slist_empty":[155],"trb_slist_entry":[84],"trb_slist_foreach":[85],"trb_slist_free":[156],"trb_slist_init":[157],"trb_slist_insert_after":[158],"trb_slist_insert_before":[159],"trb_slist_len":[160],"trb_slist_lookup":[161],"trb_slist_lookup_data":[162],"trb_slist_node_init":[86],"trb_slist_nth":[163],"trb_slist_pop_back":[164],"trb_slist_pop_front":[165],"trb_slist_position":[166],"trb_slist_push_back":[167],"trb_slist_push_front":[168],"trb_slist_remove":[169],"trb_slist_reverse":[170],"trb_slist_sort":[171],"trb_slist_sort_data":[172],"trb_slist_splice":[173],"trb_sm64_init":[175],"trb_sm64_next_u32":[176],"trb_sm64_next_u64":[177],"trb_strdup_fmt":[50],"trb_strdup_vfmt":[51],"trb_strfmt":[52],"trb_string_assign":[179],"trb_string_assign_fmt":[180],"trb_string_assign_len":[181],"trb_string_assign_vfmt":[182],"trb_string_cmp":[183],"trb_string_copy":[184],"trb_string_destroy":[185],"trb_string_erase":[186],"trb_string_erase_c":[187],"trb_string_free":[188],"trb_string_get":[189],"trb_string_get_c":[190],"trb_string_init":[191],"trb_string_init0":[192],"trb_string_init_fmt":[193],"trb_string_init_len":[194],"trb_string_init_sized":[195],"trb_string_init_vfmt":[196],"trb_string_insert":[197],"trb_string_insert_c":[198],"trb_string_insert_fmt":[199],"trb_string_insert_len":[200],"trb_string_insert_vfmt":[201],"trb_string_overwrite":[202],"trb_string_overwrite_c":[203],"trb_string_overwrite_fmt":[204],"trb_string_overwrite_len":[205],"trb_string_overwrite_vfmt":[206],"trb_string_push_back":[207],"trb_string_push_back_c":[208],"trb_string_push_back_fmt":[209],"trb_string_push_back_len":[210],"trb_string_push_back_vfmt":[211],"trb_string_push_front":[212],"trb_string_push_front_c":[213],"trb_string_push_front_fmt":[214],"trb_string_push_front_len":[215],"trb_string_push_front_vfmt":[216],"trb_string_steal":[217],"trb_string_steal0":[218],"trb_talloc":[87],"trb_talloc0":[88],"trb_tree_copy":[220],"trb_tree_destroy":[221],"trb_tree_free":[222],"trb_tree_init":[223],"trb_tree_init_data":[224],"trb_tree_inorder":[225],"trb_tree_insert":[226],"trb_tree_lookup":[227],"trb_tree_node_entry":[89],"trb_tree_node_init":[90],"trb_tree_postorder":[228],"trb_tree_preorder":[229],"trb_tree_remove":[230],"trb_u16cmp":[53],"trb_u32cmp":[54],"trb_u64cmp":[55],"trb_u8cmp":[56],"trb_usizecmp":[57],"trb_vector_copy":[233],"trb_vector_destroy":[234],"trb_vector_free":[235],"trb_vector_get":[236],"trb_vector_get_range":[237],"trb_vector_get_unsafe":[91],"trb_vector_init":[238],"trb_vector_insert":[239],"trb_vector_insert_many":[240],"trb_vector_pop_back":[241],"trb_vector_pop_front":[242],"trb_vector_push_back":[243],"trb_vector_push_back_many":[244],"trb_vector_push_front":[245],"trb_vector_push_front_many":[246],"trb_vector_remove_all":[247],"trb_vector_remove_index":[248],"trb_vector_remove_range":[249],"trb_vector_require":[250],"trb_vector_reverse":[251],"trb_vector_search":[252],"trb_vector_search_data":[253],"trb_vector_set":[254],"trb_vector_set_range":[255],"trb_vector_shrink":[256],"trb_vector_sort":[257],"trb_vector_sort_data":[258],"trb_vector_steal":[259],"trb_vector_steal0":[260],"trb_vstrfmt":[58],"trb_xs128p_init":[262],"trb_xs128p_next_f32":[263],"trb_xs128p_next_u32":[264],"trb_xs128ss_init":[266],"trb_xs128ss_next":[267],"trb_xs256p_init":[269],"trb_xs256p_next_f64":[270],"trb_xs256p_next_u64":[271],"trb_xs256ss_init":[273],"trb_xs256ss_next":[274],"trbcmpdatafunc":[0],"trbcmpfunc":[1],"trbcopyfunc":[2],"trbfreefunc":[3],"trbhashfunc":[4],"trbhashtable":[92],"trbhashtableiter":[102],"trbheap":[108],"trblist":[119],"trbmessageflags":[6],"trbpcg128":[141],"trbpcg64":[146],"trbslist":[152],"trbsm64":[174],"trbstring":[178,217],"trbstring'":[218],"trbtree":[219],"trbtreenode":[231],"trbuserfunc":[5],"trbvector":[232],"trbxs128p":[261],"trbxs128ss":[265],"trbxs256p":[268],"trbxs256ss":[272],"tree":[89,90,219,220,221,222,225,226,227,228,229,230,231],"two":[0,1,12,13,14,16,17,22,23,24,25,28,34,35,36,45,53,54,55,56,57],"u128":[144],"u16":[53],"u16cmp":[53],"u32":[54,150,176,264],"u32cmp":[54],"u64":[55,145,151,177,271],"u64cmp":[55],"u8":[56],"u8cmp":[56],"unsaf":[71,91],"unus":[256],"up":[40,41,42],"upper":[39],"us":[0,10,11,19,20,21,26,27,29,37,43,44,47,101,129,139,143,144,145,148,149,150,151,162,172,253,258,261,268],"user":[0,5,11,19,21,27,97,113,129,139,162,172,224,253,258],"usiz":[57],"usizecmp":[57],"usual":[261,268],"val":[79],"valu":[0,1,98,103,105,107,111,236,254,255],"vector":[91,232],"version":[71,91],"vfmt":[51,182,196,201,206,211,216],"vstrfmt":[58],"want":[10,11],"warn":[46],"warning":[6],"we":[39,261],"whether":[122,155],"which":[268],"x64":[39],"x86":[38],"xorshift":[261,268],"xoshiro":[174],"xoshiro128**":[265],"xoshiro128+":[261],"xoshiro256**":[272],"xoshiro256+":[268],"xs":[144,149,151],"xs128p":[261],"xs128ss":[265],"xs256p":[268],"xs256ss":[272],"xsh":[143,145,148,150],"you":[10,11,101,102,178],"zero":[200,205,210,215,239,240,243,244,245,246,254,255]}}