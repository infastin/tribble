{"meta":{"ns":"Tribble","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"f128","ctype":"f128","summary":"A quadruple precision floating-point number type."},{"type":"alias","name":"f32","ctype":"f32","summary":"A single precision floating-point number type."},{"type":"alias","name":"f64","ctype":"f64","summary":"A double precision floating-point number type."},{"type":"alias","name":"i16","ctype":"i16","summary":"A signed 16-bit integer type."},{"type":"alias","name":"i32","ctype":"i32","summary":"A signed 32-bit integer type."},{"type":"alias","name":"i64","ctype":"i64","summary":"A signed 64-bit integer type."},{"type":"alias","name":"i8","ctype":"i8","summary":"A signed 8-bit integer type."},{"type":"alias","name":"isize","ctype":"isize","summary":"A signed pointer size integer type."},{"type":"alias","name":"u16","ctype":"u16","summary":"An unsigned 16-bit integer type."},{"type":"alias","name":"u32","ctype":"u32","summary":"An unsigned 32-bit integer type."},{"type":"alias","name":"u64","ctype":"u64","summary":"An unsigned 64-bit integer type."},{"type":"alias","name":"u8","ctype":"u8","summary":"An unsigned 8-bit integer type."},{"type":"alias","name":"usize","ctype":"usize","summary":"An unsigned pointer size integer type."},{"type":"callback","name":"CmpDataFunc","ctype":"TrbCmpDataFunc","summary":"The function for comparing two values using user data."},{"type":"callback","name":"CmpFunc","ctype":"TrbCmpFunc","summary":"The function for comparing two values."},{"type":"callback","name":"CopyFunc","ctype":"TrbCopyFunc","summary":"No description available."},{"type":"callback","name":"FreeFunc","ctype":"TrbFreeFunc","summary":"No description available."},{"type":"callback","name":"HashFunc","ctype":"TrbHashFunc","summary":"The function for hashing keys."},{"type":"callback","name":"UserFunc","ctype":"TrbUserFunc","summary":"No description available."},{"type":"constant","name":"FALSE","ident":"FALSE","summary":"No description available."},{"type":"constant","name":"I16_WIDTH","ident":"I16_WIDTH","summary":"No description available."},{"type":"constant","name":"I32_WIDTH","ident":"I32_WIDTH","summary":"No description available."},{"type":"constant","name":"I64_WIDTH","ident":"I64_WIDTH","summary":"No description available."},{"type":"constant","name":"I8_WIDTH","ident":"I8_WIDTH","summary":"No description available."},{"type":"constant","name":"ISIZE_WIDTH","ident":"ISIZE_WIDTH","summary":"No description available."},{"type":"constant","name":"TRUE","ident":"TRUE","summary":"No description available."},{"type":"constant","name":"U16_WIDTH","ident":"U16_WIDTH","summary":"No description available."},{"type":"constant","name":"U32_WIDTH","ident":"U32_WIDTH","summary":"No description available."},{"type":"constant","name":"U64_WIDTH","ident":"U64_WIDTH","summary":"No description available."},{"type":"constant","name":"U8_WIDTH","ident":"U8_WIDTH","summary":"No description available."},{"type":"constant","name":"USIZE_WIDTH","ident":"USIZE_WIDTH","summary":"No description available."},{"type":"constant","name":"USUZE_WUDTH","ident":"USUZE_WUDTH","summary":"No description available."},{"type":"enum","name":"MessageFlags","ctype":"TrbMessageFlags","summary":"No description available."},{"type":"function","name":"abs_16","ident":"trb_abs_16","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_32","ident":"trb_abs_32","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_64","ident":"trb_abs_64","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_8","ident":"trb_abs_8","summary":"Gets the absolute value of @num."},{"type":"function","name":"abs_size","ident":"trb_abs_size","summary":"Gets the absolute value of @num."},{"type":"function","name":"binary_search","ident":"trb_binary_search","summary":"Searches for the entry in the slice using binary ..."},{"type":"function","name":"binary_search_data","ident":"trb_binary_search_data","summary":"Searches for the entry in the slice using binary ..."},{"type":"function","name":"chk_add_i16","ident":"trb_chk_add_i16","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i32","ident":"trb_chk_add_i32","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i64","ident":"trb_chk_add_i64","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_i8","ident":"trb_chk_add_i8","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_isize","ident":"trb_chk_add_isize","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u16","ident":"trb_chk_add_u16","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u32","ident":"trb_chk_add_u32","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u64","ident":"trb_chk_add_u64","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_u8","ident":"trb_chk_add_u8","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_add_usize","ident":"trb_chk_add_usize","summary":"Adds up @a and @b and puts the result ..."},{"type":"function","name":"chk_mul_i16","ident":"trb_chk_mul_i16","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i32","ident":"trb_chk_mul_i32","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i64","ident":"trb_chk_mul_i64","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_i8","ident":"trb_chk_mul_i8","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_isize","ident":"trb_chk_mul_isize","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u16","ident":"trb_chk_mul_u16","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u32","ident":"trb_chk_mul_u32","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u64","ident":"trb_chk_mul_u64","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_u8","ident":"trb_chk_mul_u8","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_mul_usize","ident":"trb_chk_mul_usize","summary":"Multiplies @a by @b and puts the result to @res."},{"type":"function","name":"chk_sub_i16","ident":"trb_chk_sub_i16","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i32","ident":"trb_chk_sub_i32","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i64","ident":"trb_chk_sub_i64","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_i8","ident":"trb_chk_sub_i8","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_isize","ident":"trb_chk_sub_isize","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u16","ident":"trb_chk_sub_u16","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u32","ident":"trb_chk_sub_u32","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u64","ident":"trb_chk_sub_u64","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_u8","ident":"trb_chk_sub_u8","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"chk_sub_usize","ident":"trb_chk_sub_usize","summary":"Subtracts @b from @a and puts the result to @res."},{"type":"function","name":"div_pow2_32","ident":"trb_div_pow2_32","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_64","ident":"trb_div_pow2_64","summary":"Divides the number by a power of two."},{"type":"function","name":"div_pow2_size","ident":"trb_div_pow2_size","summary":"Divides the number by a power of two."},{"type":"function","name":"exit_if_fail_critical","ident":"trb_exit_if_fail_critical","summary":"No description available."},{"type":"function","name":"f128cmp","ident":"trb_f128cmp","summary":"Compares two `f128`."},{"type":"function","name":"f32cmp","ident":"trb_f32cmp","summary":"Compares two `f32`."},{"type":"function","name":"f64cmp","ident":"trb_f64cmp","summary":"Compares two `f64`."},{"type":"function","name":"heapify","ident":"trb_heapify","summary":"Heapifies the slice."},{"type":"function","name":"heapify_data","ident":"trb_heapify_data","summary":"Heapifies the slice using user data."},{"type":"function","name":"heapsort","ident":"trb_heapsort","summary":"Sorts the slice using Heap Sort."},{"type":"function","name":"heapsort_data","ident":"trb_heapsort_data","summary":"Sorts the slice using Heap Sort and user data."},{"type":"function","name":"i16cmp","ident":"trb_i16cmp","summary":"Compares two `i16`."},{"type":"function","name":"i32cmp","ident":"trb_i32cmp","summary":"Compares two `i32`."},{"type":"function","name":"i64cmp","ident":"trb_i64cmp","summary":"Compares two `i64`."},{"type":"function","name":"i8cmp","ident":"trb_i8cmp","summary":"Compares two `i8`."},{"type":"function","name":"inssort","ident":"trb_inssort","summary":"Sorts the slice using Insertion Sort."},{"type":"function","name":"inssort_data","ident":"trb_inssort_data","summary":"Sorts the slice using Insertion Sort and user data."},{"type":"function","name":"isizecmp","ident":"trb_isizecmp","summary":"Compares two `isize`."},{"type":"function","name":"jhash","ident":"trb_jhash","summary":"Uses trb_jhash32() on 32-bit platform and trb_jhash64() on 64-bit platform."},{"type":"function","name":"jhash32","ident":"trb_jhash32","summary":"Jenkins Hash 32-bit. [Reference](http://burtleburtle.net/bob/c/lookup2.c)."},{"type":"function","name":"jhash64","ident":"trb_jhash64","summary":"Jenkins Hash 64-bit. [Reference](http://burtleburtle.net/bob/c/lookup8.c)."},{"type":"function","name":"message","ident":"trb_message","summary":"Prints a message."},{"type":"function","name":"message_func","ident":"trb_message_func","summary":"No description available."},{"type":"function","name":"mul_pow2_32","ident":"trb_mul_pow2_32","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_64","ident":"trb_mul_pow2_64","summary":"Multiplies the number by a power of two."},{"type":"function","name":"mul_pow2_size","ident":"trb_mul_pow2_size","summary":"Multiplies the number by a power of two."},{"type":"function","name":"murmurhash3","ident":"trb_murmurhash3","summary":"Uses trb_murmurhash3_32() on 32-bit platform and trb_murmurhash3_64() on 64-bit platform."},{"type":"function","name":"murmurhash3_32","ident":"trb_murmurhash3_32","summary":"MurmurHash3 x86 32. [Reference](https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp#L94)."},{"type":"function","name":"murmurhash3_64","ident":"trb_murmurhash3_64","summary":"MurmurHash3 x64 128, but we discard the upper 64 ..."},{"type":"function","name":"pow2_32","ident":"trb_pow2_32","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_64","ident":"trb_pow2_64","summary":"Rounds up to the next power of 2."},{"type":"function","name":"pow2_size","ident":"trb_pow2_size","summary":"Rounds up to the next power of 2."},{"type":"function","name":"quicksort","ident":"trb_quicksort","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"quicksort_data","ident":"trb_quicksort_data","summary":"Sorts the slice using Quicksort by Knuth. [Reference](http://math.utoledo.edu/~codenth/Fall_14/4380/Notes/trb_quicksort.pdf)."},{"type":"function","name":"return_if_fail_warning","ident":"trb_return_if_fail_warning","summary":"No description available."},{"type":"function","name":"reverse","ident":"trb_reverse","summary":"Reverses the slice."},{"type":"function","name":"siphash","ident":"trb_siphash","summary":"Uses trb_siphash32() on 32-bit platform and trb_siphash64() on 64-bit platform."},{"type":"function","name":"siphash32","ident":"trb_siphash32","summary":"Half SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/halftrb_siphash.c)."},{"type":"function","name":"siphash64","ident":"trb_siphash64","summary":"SipHash 1-3. [Reference](https://github.com/veorq/SipHash/blob/master/trb_siphash.c)."},{"type":"function","name":"strdup_fmt","ident":"trb_strdup_fmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"strdup_vfmt","ident":"trb_strdup_vfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function","name":"strfmt","ident":"trb_strfmt","summary":"It is analogous to `snprintf()`, except it allocates a ..."},{"type":"function","name":"u16cmp","ident":"trb_u16cmp","summary":"Compares two `u16`."},{"type":"function","name":"u32cmp","ident":"trb_u32cmp","summary":"Compares two `u32`."},{"type":"function","name":"u64cmp","ident":"trb_u64cmp","summary":"Compares two `u64`."},{"type":"function","name":"u8cmp","ident":"trb_u8cmp","summary":"Compares two `u8`."},{"type":"function","name":"usizecmp","ident":"trb_usizecmp","summary":"Compares two `usize`."},{"type":"function","name":"vstrfmt","ident":"trb_vstrfmt","summary":"It is analogous to `vsnprintf()`, except it allocates a ..."},{"type":"function_macro","name":"FORMAT","ident":"TRB_FORMAT","summary":"No description available."},{"type":"function_macro","name":"I16_C","ident":"I16_C","summary":"No description available."},{"type":"function_macro","name":"I32_C","ident":"I32_C","summary":"No description available."},{"type":"function_macro","name":"I64_C","ident":"I64_C","summary":"No description available."},{"type":"function_macro","name":"I8_C","ident":"I8_C","summary":"No description available."},{"type":"function_macro","name":"U16_C","ident":"U16_C","summary":"No description available."},{"type":"function_macro","name":"U32_C","ident":"U32_C","summary":"No description available."},{"type":"function_macro","name":"U64_C","ident":"U64_C","summary":"No description available."},{"type":"function_macro","name":"U8_C","ident":"U8_C","summary":"No description available."},{"type":"function_macro","name":"abs","ident":"trb_abs","summary":"Gets the absolute value of @num."},{"type":"function_macro","name":"array_cell","ident":"trb_array_cell","summary":"No description available."},{"type":"function_macro","name":"array_get","ident":"trb_array_get","summary":"No description available."},{"type":"function_macro","name":"chk_add","ident":"trb_chk_add","summary":"Adds up @a and @b and puts the result ..."},{"type":"function_macro","name":"chk_mul","ident":"trb_chk_mul","summary":"Multiplies @a by @b and puts the result to ..."},{"type":"function_macro","name":"chk_sub","ident":"trb_chk_sub","summary":"Subtracts @b from @a and puts the result to ..."},{"type":"function_macro","name":"clz","ident":"trb_clz","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz32","ident":"trb_clz32","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"clz64","ident":"trb_clz64","summary":"Counts the number of leading 0-bits in @num, starting ..."},{"type":"function_macro","name":"container_of","ident":"trb_container_of","summary":"No description available."},{"type":"function_macro","name":"deque_get","ident":"trb_deque_get","summary":"Gets the value of the entry in the deque ..."},{"type":"function_macro","name":"deque_ptr","ident":"trb_deque_ptr","summary":"Gets the pointer to the entry in the deque ..."},{"type":"function_macro","name":"distance_of","ident":"trb_distance_of","summary":"Returns the distance between @m1 and @m2 in the @type."},{"type":"function_macro","name":"div_pow2","ident":"trb_div_pow2","summary":"Divides the number by a power of two. Returns ..."},{"type":"function_macro","name":"do_if_fail","ident":"trb_do_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_if_fail","ident":"trb_exit_if_fail","summary":"No description available."},{"type":"function_macro","name":"exit_with_code_if_fail","ident":"trb_exit_with_code_if_fail","summary":"No description available."},{"type":"function_macro","name":"heap_get","ident":"trb_heap_get","summary":"Gets the value of the entry in the heap ..."},{"type":"function_macro","name":"heap_ptr","ident":"trb_heap_ptr","summary":"Gets the pointer to the entry in the heap ..."},{"type":"function_macro","name":"list_entry","ident":"trb_list_entry","summary":"No description available."},{"type":"function_macro","name":"list_foreach","ident":"trb_list_foreach","summary":"No description available."},{"type":"function_macro","name":"list_foreach_reverse","ident":"trb_list_foreach_reverse","summary":"No description available."},{"type":"function_macro","name":"list_node_init","ident":"trb_list_node_init","summary":"No description available."},{"type":"function_macro","name":"max","ident":"trb_max","summary":"Chooses the largest value between @a and @b."},{"type":"function_macro","name":"memswap","ident":"trb_memswap","summary":"Swaps @size bytes in @a and @b."},{"type":"function_macro","name":"min","ident":"trb_min","summary":"Chooses the lowest value between @a and @b."},{"type":"function_macro","name":"mul_pow2","ident":"trb_mul_pow2","summary":"Multiplies the number by a power of two."},{"type":"function_macro","name":"offsetof","ident":"offsetof","summary":"No description available."},{"type":"function_macro","name":"pow2","ident":"trb_pow2","summary":"Rounds up to the next power of 2."},{"type":"function_macro","name":"return_if_fail","ident":"trb_return_if_fail","summary":"No description available."},{"type":"function_macro","name":"return_val_if_fail","ident":"trb_return_val_if_fail","summary":"No description available."},{"type":"function_macro","name":"rotl","ident":"trb_rotl","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotl32","ident":"trb_rotl32","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotl64","ident":"trb_rotl64","summary":"Rotates @x by @r bits to the left. Returns ..."},{"type":"function_macro","name":"rotr","ident":"trb_rotr","summary":"Rotates @x by @r bits to the right. Returns ..."},{"type":"function_macro","name":"rotr32","ident":"trb_rotr32","summary":"Rotates @x by @r bits to the right. Returnsa ..."},{"type":"function_macro","name":"rotr64","ident":"trb_rotr64","summary":"Rotates @x by @r bits to the right. Returns ..."},{"type":"function_macro","name":"slice_len","ident":"trb_slice_len","summary":"Gets the slice length."},{"type":"function_macro","name":"slist_entry","ident":"trb_slist_entry","summary":"No description available."},{"type":"function_macro","name":"slist_foreach","ident":"trb_slist_foreach","summary":"No description available."},{"type":"function_macro","name":"slist_node_init","ident":"trb_slist_node_init","summary":"No description available."},{"type":"function_macro","name":"string_get","ident":"trb_string_get","summary":"Gets the character in the string at the given index."},{"type":"function_macro","name":"string_ptr","ident":"trb_string_ptr","summary":"Gets the pointer to the character in the string ..."},{"type":"function_macro","name":"talloc","ident":"trb_talloc","summary":"Allocates @n_structs of the @struct_type using `malloc()`."},{"type":"function_macro","name":"talloc0","ident":"trb_talloc0","summary":"Allocates @n_structs of the @struct_type using `calloc()`."},{"type":"function_macro","name":"tree_node_entry","ident":"trb_tree_node_entry","summary":"No description available."},{"type":"function_macro","name":"tree_node_init","ident":"trb_tree_node_init","summary":"No description available."},{"type":"function_macro","name":"vector_get","ident":"trb_vector_get","summary":"Gets the value of the entry in the vector ..."},{"type":"function_macro","name":"vector_ptr","ident":"trb_vector_ptr","summary":"Gets the pointer to the entry in the vector ..."},{"type":"method","name":"add","type_name":"HashTable","ident":"trb_hash_table_add","summary":"Adds a new entry to the hash table."},{"type":"method","name":"assign","type_name":"String","ident":"trb_string_assign","summary":"Replaces contents of the @self with the @str."},{"type":"method","name":"assign_fmt","type_name":"String","ident":"trb_string_assign_fmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"assign_len","type_name":"String","ident":"trb_string_assign_len","summary":"Replaces contents of the @self with @len bytes of ..."},{"type":"method","name":"assign_vfmt","type_name":"String","ident":"trb_string_assign_vfmt","summary":"Replaces contents of the @self with the formatted string."},{"type":"method","name":"cmp","type_name":"String","ident":"trb_string_cmp","summary":"Compares the first and second strings."},{"type":"method","name":"copy","type_name":"List","ident":"trb_list_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"SList","ident":"trb_slist_copy","summary":"Copies the list."},{"type":"method","name":"copy","type_name":"Tree","ident":"trb_tree_copy","summary":"Creates a copy of the tree."},{"type":"method","name":"copy","type_name":"Vector","ident":"trb_vector_copy","summary":"Creates a copy of the vector."},{"type":"method","name":"destroy","type_name":"Deque","ident":"trb_deque_destroy","summary":"Frees the deque buckets."},{"type":"method","name":"destroy","type_name":"HashTable","ident":"trb_hash_table_destroy","summary":"Frees the hash table buckets."},{"type":"method","name":"destroy","type_name":"Heap","ident":"trb_heap_destroy","summary":"Frees the heap buffer."},{"type":"method","name":"destroy","type_name":"List","ident":"trb_list_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"SList","ident":"trb_slist_destroy","summary":"Frees all nodes in the list."},{"type":"method","name":"destroy","type_name":"String","ident":"trb_string_destroy","summary":"Frees the string buffer."},{"type":"method","name":"destroy","type_name":"Tree","ident":"trb_tree_destroy","summary":"Frees all nodes in the tree."},{"type":"method","name":"destroy","type_name":"Vector","ident":"trb_vector_destroy","summary":"Frees the vector buffer."},{"type":"method","name":"empty","type_name":"List","ident":"trb_list_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"empty","type_name":"SList","ident":"trb_slist_empty","summary":"Checks whether the list is empty or not."},{"type":"method","name":"erase","type_name":"String","ident":"trb_string_erase","summary":"Erases @len bytes in the string starting from @index."},{"type":"method","name":"erase_c","type_name":"String","ident":"trb_string_erase_c","summary":"Erases character in the string at the given index."},{"type":"method","name":"fix","type_name":"Heap","ident":"trb_heap_fix","summary":"Re-establishes the heap ordering."},{"type":"method","name":"free","type_name":"Deque","ident":"trb_deque_free","summary":"Frees the deque completely."},{"type":"method","name":"free","type_name":"HashTable","ident":"trb_hash_table_free","summary":"Frees the hash table completely."},{"type":"method","name":"free","type_name":"Heap","ident":"trb_heap_free","summary":"Frees the heap completely."},{"type":"method","name":"free","type_name":"List","ident":"trb_list_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"SList","ident":"trb_slist_free","summary":"Frees the list completely."},{"type":"method","name":"free","type_name":"String","ident":"trb_string_free","summary":"Frees the string completely."},{"type":"method","name":"free","type_name":"Tree","ident":"trb_tree_free","summary":"Frees all nodes in the tree and the tree itself."},{"type":"method","name":"free","type_name":"Vector","ident":"trb_vector_free","summary":"Frees the vector completely."},{"type":"method","name":"get","type_name":"HashTableIter","ident":"trb_hash_table_iter_get","summary":"Retrieves the key and the value."},{"type":"method","name":"init","type_name":"Deque","ident":"trb_deque_init","summary":"Creates a new double-ended queue."},{"type":"method","name":"init","type_name":"HashTable","ident":"trb_hash_table_init","summary":"Creates a new #TrbHashTable."},{"type":"method","name":"init","type_name":"HashTableIter","ident":"trb_hash_table_iter_init","summary":"Creates a new #HashTableIter. If allocated on the heap, ..."},{"type":"method","name":"init","type_name":"Heap","ident":"trb_heap_init","summary":"Creates a new #TrbHeap."},{"type":"method","name":"init","type_name":"List","ident":"trb_list_init","summary":"Creates a new doubly-linked list."},{"type":"method","name":"init","type_name":"Pcg128","ident":"trb_pcg128_init","summary":"Initializes the state of #TrbPcg128 with the given seed. ..."},{"type":"method","name":"init","type_name":"Pcg64","ident":"trb_pcg64_init","summary":"Initializes the state of #TrbPcg64 with the given seed. ..."},{"type":"method","name":"init","type_name":"Slice","ident":"trb_slice_init","summary":"Creates a new #TrbSlice from an array. If allocated ..."},{"type":"method","name":"init","type_name":"SList","ident":"trb_slist_init","summary":"Creates a new singly-linked list."},{"type":"method","name":"init","type_name":"SM64","ident":"trb_sm64_init","summary":"Initializes the state of #TrbSM64 with the given seed. ..."},{"type":"method","name":"init","type_name":"String","ident":"trb_string_init","summary":"Creates a new #TrbString from @str."},{"type":"method","name":"init","type_name":"Tree","ident":"trb_tree_init","summary":"Creates a new #TrbTree."},{"type":"method","name":"init","type_name":"Vector","ident":"trb_vector_init","summary":"Creates a new dynamic size array."},{"type":"method","name":"init","type_name":"Xs128p","ident":"trb_xs128p_init","summary":"Initializes the state of #TrbXs128p with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs128ss","ident":"trb_xs128ss_init","summary":"Initializes the state of #TrbXs128ss with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs256p","ident":"trb_xs256p_init","summary":"Initializes the state of #TrbXs256p with the given seed. ..."},{"type":"method","name":"init","type_name":"Xs256ss","ident":"trb_xs256ss_init","summary":"Initializes the state of #TrbXs256ss with the given seed. ..."},{"type":"method","name":"init0","type_name":"String","ident":"trb_string_init0","summary":"Creates a new #TrbString."},{"type":"method","name":"init_data","type_name":"HashTable","ident":"trb_hash_table_init_data","summary":"Creates a new #TrbHashTable with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Heap","ident":"trb_heap_init_data","summary":"Creates a new #TrbHeap with the comparison function that ..."},{"type":"method","name":"init_data","type_name":"Tree","ident":"trb_tree_init_data","summary":"Creates a new #TrbTree with the comparison function that ..."},{"type":"method","name":"init_fmt","type_name":"String","ident":"trb_string_init_fmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"init_len","type_name":"String","ident":"trb_string_init_len","summary":"Creates a new #TrbString with @len bytes of the @str."},{"type":"method","name":"init_sized","type_name":"String","ident":"trb_string_init_sized","summary":"Creates a new #TrbString with capacity of @cap bytes."},{"type":"method","name":"init_vfmt","type_name":"String","ident":"trb_string_init_vfmt","summary":"Creates a new #TrbString from the formatted string."},{"type":"method","name":"inorder","type_name":"Tree","ident":"trb_tree_inorder","summary":"Traverses the tree. It is inorder traversal."},{"type":"method","name":"insert","type_name":"Deque","ident":"trb_deque_insert","summary":"Inserts the element into the deque at the given ..."},{"type":"method","name":"insert","type_name":"HashTable","ident":"trb_hash_table_insert","summary":"Inserts an entry to the hash table. If the ..."},{"type":"method","name":"insert","type_name":"Heap","ident":"trb_heap_insert","summary":"Inserts the element in the heap."},{"type":"method","name":"insert","type_name":"String","ident":"trb_string_insert","summary":"Inserts the @str into the @self at the given index."},{"type":"method","name":"insert","type_name":"Tree","ident":"trb_tree_insert","summary":"Inserts the node into the tree."},{"type":"method","name":"insert","type_name":"Vector","ident":"trb_vector_insert","summary":"Inserts the element into the vector at the given ..."},{"type":"method","name":"insert_after","type_name":"List","ident":"trb_list_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_after","type_name":"SList","ident":"trb_slist_insert_after","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"List","ident":"trb_list_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_before","type_name":"SList","ident":"trb_slist_insert_before","summary":"Inserts one node after other node."},{"type":"method","name":"insert_c","type_name":"String","ident":"trb_string_insert_c","summary":"Inserts the character into the string at the given index."},{"type":"method","name":"insert_fmt","type_name":"String","ident":"trb_string_insert_fmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"insert_len","type_name":"String","ident":"trb_string_insert_len","summary":"Inserts @len bytes of the @str into the @self ..."},{"type":"method","name":"insert_many","type_name":"Deque","ident":"trb_deque_insert_many","summary":"Inserts elements into the deque at the given index. ..."},{"type":"method","name":"insert_many","type_name":"Vector","ident":"trb_vector_insert_many","summary":"Inserts elements into the vector at the given index. ..."},{"type":"method","name":"insert_vfmt","type_name":"String","ident":"trb_string_insert_vfmt","summary":"Inserts the formatted string into the @self at the ..."},{"type":"method","name":"len","type_name":"List","ident":"trb_list_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"len","type_name":"SList","ident":"trb_slist_len","summary":"Returns the number of elements in the list."},{"type":"method","name":"lookup","type_name":"HashTable","ident":"trb_hash_table_lookup","summary":"Searches for the entry in the hash table."},{"type":"method","name":"lookup","type_name":"List","ident":"trb_list_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"SList","ident":"trb_slist_lookup","summary":"Searches for the element in the list."},{"type":"method","name":"lookup","type_name":"Tree","ident":"trb_tree_lookup","summary":"Searches for the element in the tree."},{"type":"method","name":"lookup_data","type_name":"List","ident":"trb_list_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"lookup_data","type_name":"SList","ident":"trb_slist_lookup_data","summary":"Searches for the element in the list using user data."},{"type":"method","name":"next","type_name":"HashTableIter","ident":"trb_hash_table_iter_next","summary":"Advances the @self and retrieves the key and/or the ..."},{"type":"method","name":"next","type_name":"Xs128ss","ident":"trb_xs128ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next","type_name":"Xs256ss","ident":"trb_xs256ss_next","summary":"Generates a random number with the given state."},{"type":"method","name":"next_f32","type_name":"Pcg64","ident":"trb_pcg64_next_f32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f32","type_name":"Xs128p","ident":"trb_xs128p_next_f32","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_f64","type_name":"Pcg128","ident":"trb_pcg128_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Pcg64","ident":"trb_pcg64_next_f64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_f64","type_name":"Xs256p","ident":"trb_xs256p_next_f64","summary":"Generates a random floating-point number with the given state."},{"type":"method","name":"next_u32","type_name":"Pcg64","ident":"trb_pcg64_next_u32","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u32","type_name":"SM64","ident":"trb_sm64_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u32","type_name":"Xs128p","ident":"trb_xs128p_next_u32","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Pcg128","ident":"trb_pcg128_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"Pcg64","ident":"trb_pcg64_next_u64","summary":"Generates a random number with the given state. Uses ..."},{"type":"method","name":"next_u64","type_name":"SM64","ident":"trb_sm64_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"next_u64","type_name":"Xs256p","ident":"trb_xs256p_next_u64","summary":"Generates a random number with the given state."},{"type":"method","name":"nth","type_name":"List","ident":"trb_list_nth","summary":"Gets the element at the given position."},{"type":"method","name":"nth","type_name":"SList","ident":"trb_slist_nth","summary":"Gets the element at the given position."},{"type":"method","name":"overwrite","type_name":"String","ident":"trb_string_overwrite","summary":"Overwrites the @self at the given index with the @str."},{"type":"method","name":"overwrite_c","type_name":"String","ident":"trb_string_overwrite_c","summary":"Overwrites the character in the @self at the given ..."},{"type":"method","name":"overwrite_fmt","type_name":"String","ident":"trb_string_overwrite_fmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"overwrite_len","type_name":"String","ident":"trb_string_overwrite_len","summary":"Overwrites @len bytes in the @self at the given ..."},{"type":"method","name":"overwrite_vfmt","type_name":"String","ident":"trb_string_overwrite_vfmt","summary":"Overwrites the @self at the given index with the ..."},{"type":"method","name":"pop_back","type_name":"Deque","ident":"trb_deque_pop_back","summary":"Removes the last element from the deque."},{"type":"method","name":"pop_back","type_name":"Heap","ident":"trb_heap_pop_back","summary":"Removes the last element from the heap."},{"type":"method","name":"pop_back","type_name":"List","ident":"trb_list_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"SList","ident":"trb_slist_pop_back","summary":"Removes the last node from the list."},{"type":"method","name":"pop_back","type_name":"Vector","ident":"trb_vector_pop_back","summary":"Removes the last element from the vector."},{"type":"method","name":"pop_back_many","type_name":"Deque","ident":"trb_deque_pop_back_many","summary":"Removes last @len elements from the deque."},{"type":"method","name":"pop_back_many","type_name":"Vector","ident":"trb_vector_pop_back_many","summary":"Removes last @len elements from the vector."},{"type":"method","name":"pop_front","type_name":"Deque","ident":"trb_deque_pop_front","summary":"Removes the first element from the deque."},{"type":"method","name":"pop_front","type_name":"Heap","ident":"trb_heap_pop_front","summary":"Removes the first element from the heap."},{"type":"method","name":"pop_front","type_name":"List","ident":"trb_list_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"SList","ident":"trb_slist_pop_front","summary":"Removes the first node from the list."},{"type":"method","name":"pop_front","type_name":"Vector","ident":"trb_vector_pop_front","summary":"Removes the first element from the vector."},{"type":"method","name":"pop_front_many","type_name":"Deque","ident":"trb_deque_pop_front_many","summary":"Removes first @len elements from the deque."},{"type":"method","name":"pop_front_many","type_name":"Vector","ident":"trb_vector_pop_front_many","summary":"Removes first @len elements from the vector."},{"type":"method","name":"position","type_name":"List","ident":"trb_list_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"position","type_name":"SList","ident":"trb_slist_position","summary":"Gets the position of the element in the list."},{"type":"method","name":"postorder","type_name":"Tree","ident":"trb_tree_postorder","summary":"Traverses the tree. It is postorder traversal."},{"type":"method","name":"preorder","type_name":"Tree","ident":"trb_tree_preorder","summary":"Traverses the tree. It is preoder traversal."},{"type":"method","name":"push_back","type_name":"Deque","ident":"trb_deque_push_back","summary":"Adds the element to the end of the deque. ..."},{"type":"method","name":"push_back","type_name":"List","ident":"trb_list_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"SList","ident":"trb_slist_push_back","summary":"Adds a new entry onto the end of the list."},{"type":"method","name":"push_back","type_name":"String","ident":"trb_string_push_back","summary":"Adds the @str to the end of the @self."},{"type":"method","name":"push_back","type_name":"Vector","ident":"trb_vector_push_back","summary":"Adds the element to the end of the vector. ..."},{"type":"method","name":"push_back_c","type_name":"String","ident":"trb_string_push_back_c","summary":"Adds the character to the end of the string."},{"type":"method","name":"push_back_fmt","type_name":"String","ident":"trb_string_push_back_fmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_back_len","type_name":"String","ident":"trb_string_push_back_len","summary":"Adds @len bytes of the @str to the end ..."},{"type":"method","name":"push_back_many","type_name":"Deque","ident":"trb_deque_push_back_many","summary":"Adds elements to the end of the deque. If ..."},{"type":"method","name":"push_back_many","type_name":"Vector","ident":"trb_vector_push_back_many","summary":"Adds elements to the end of the vector. If ..."},{"type":"method","name":"push_back_vfmt","type_name":"String","ident":"trb_string_push_back_vfmt","summary":"Adds the formatted string to the end of the @self."},{"type":"method","name":"push_front","type_name":"Deque","ident":"trb_deque_push_front","summary":"Adds the element to the beginning of the deque. ..."},{"type":"method","name":"push_front","type_name":"List","ident":"trb_list_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"SList","ident":"trb_slist_push_front","summary":"Adds a new entry onto the beginning of the list."},{"type":"method","name":"push_front","type_name":"String","ident":"trb_string_push_front","summary":"Adds the @str to the beginning of the @self."},{"type":"method","name":"push_front","type_name":"Vector","ident":"trb_vector_push_front","summary":"Adds the element to the beginning of the vector. ..."},{"type":"method","name":"push_front_c","type_name":"String","ident":"trb_string_push_front_c","summary":"Adds the character to the beginning of the string."},{"type":"method","name":"push_front_fmt","type_name":"String","ident":"trb_string_push_front_fmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"push_front_len","type_name":"String","ident":"trb_string_push_front_len","summary":"Adds @len bytes of the @str to the beginning ..."},{"type":"method","name":"push_front_many","type_name":"Deque","ident":"trb_deque_push_front_many","summary":"Adds elements to the beginning of the deque. If ..."},{"type":"method","name":"push_front_many","type_name":"Vector","ident":"trb_vector_push_front_many","summary":"Adds elements to the beginning of the vector. If ..."},{"type":"method","name":"push_front_vfmt","type_name":"String","ident":"trb_string_push_front_vfmt","summary":"Adds the formatted string to the beginning of the @self."},{"type":"method","name":"remove","type_name":"Deque","ident":"trb_deque_remove","summary":"Removes the entry at the given index from the deque."},{"type":"method","name":"remove","type_name":"HashTable","ident":"trb_hash_table_remove","summary":"Removes the entry from the hash table."},{"type":"method","name":"remove","type_name":"HashTableIter","ident":"trb_hash_table_iter_remove","summary":"Removes the entry currently pointer to by the iterator."},{"type":"method","name":"remove","type_name":"Heap","ident":"trb_heap_remove","summary":"Removes the element from the heap."},{"type":"method","name":"remove","type_name":"List","ident":"trb_list_remove","summary":"Removes the node from a list."},{"type":"method","name":"remove","type_name":"SList","ident":"trb_slist_remove","summary":"Removes the node from the list."},{"type":"method","name":"remove","type_name":"Tree","ident":"trb_tree_remove","summary":"Removes the node from the tree."},{"type":"method","name":"remove","type_name":"Vector","ident":"trb_vector_remove","summary":"Removes the entry at the given index from the vector."},{"type":"method","name":"remove_all","type_name":"Deque","ident":"trb_deque_remove_all","summary":"Removes all elements from the deque."},{"type":"method","name":"remove_all","type_name":"HashTable","ident":"trb_hash_table_remove_all","summary":"Removes all entries from the hash table.  This ..."},{"type":"method","name":"remove_all","type_name":"Vector","ident":"trb_vector_remove_all","summary":"Removes all elements from the vector."},{"type":"method","name":"remove_range","type_name":"Deque","ident":"trb_deque_remove_range","summary":"Removes the range of elements from the deque."},{"type":"method","name":"remove_range","type_name":"Vector","ident":"trb_vector_remove_range","summary":"Removes the range of elements from the vector."},{"type":"method","name":"replace","type_name":"HashTableIter","ident":"trb_hash_table_iter_replace","summary":"Replaces the value currently pointed to by the iterator."},{"type":"method","name":"require","type_name":"Vector","ident":"trb_vector_require","summary":"Reserves memory in the vector buffer."},{"type":"method","name":"reslice","type_name":"Slice","ident":"trb_slice_reslice","summary":"Creates a new #TrbSlice of another #TrbSlice. If allocated ..."},{"type":"method","name":"reverse","type_name":"List","ident":"trb_list_reverse","summary":"Reverses the list."},{"type":"method","name":"reverse","type_name":"SList","ident":"trb_slist_reverse","summary":"Reverses the list."},{"type":"method","name":"search","type_name":"Deque","ident":"trb_deque_search","summary":"Searches for the entry in the deque."},{"type":"method","name":"search","type_name":"Heap","ident":"trb_heap_search","summary":"Searches for the entry in the heap using user data."},{"type":"method","name":"search","type_name":"Vector","ident":"trb_vector_search","summary":"Searches for the entry in the vector."},{"type":"method","name":"search_data","type_name":"Deque","ident":"trb_deque_search_data","summary":"Searches for the entry in the deque using user data."},{"type":"method","name":"search_data","type_name":"Heap","ident":"trb_heap_search_data","summary":"No description available."},{"type":"method","name":"search_data","type_name":"Vector","ident":"trb_vector_search_data","summary":"Searches for the entry in the vector using user data."},{"type":"method","name":"shrink","type_name":"Deque","ident":"trb_deque_shrink","summary":"Frees unused memory of the deque buckets."},{"type":"method","name":"shrink","type_name":"Vector","ident":"trb_vector_shrink","summary":"Frees unused memory of the vector buffer."},{"type":"method","name":"slice","type_name":"Deque","ident":"trb_deque_slice","summary":"Slices the #TrbDeque. If allocated on the heap, use ..."},{"type":"method","name":"slice","type_name":"Vector","ident":"trb_vector_slice","summary":"Slices the #TrbVector. If allocated on the heap, use ..."},{"type":"method","name":"sort","type_name":"List","ident":"trb_list_sort","summary":"Sorts the list."},{"type":"method","name":"sort","type_name":"SList","ident":"trb_slist_sort","summary":"Sorts the list."},{"type":"method","name":"sort_data","type_name":"List","ident":"trb_list_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"sort_data","type_name":"SList","ident":"trb_slist_sort_data","summary":"Sorts the list using user data."},{"type":"method","name":"splice","type_name":"List","ident":"trb_list_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"splice","type_name":"SList","ident":"trb_slist_splice","summary":"Transfers elements from one list to another."},{"type":"method","name":"steal","type_name":"String","ident":"trb_string_steal","summary":"Steals the string buffer. TrbString creates a new buffer."},{"type":"method","name":"steal","type_name":"Vector","ident":"trb_vector_steal","summary":"Steals the vector buffer. Array creates a new buffer."},{"type":"method","name":"steal0","type_name":"String","ident":"trb_string_steal0","summary":"Steals the string buffer. TrbString's buffer becomes %NULL."},{"type":"method","name":"steal0","type_name":"Vector","ident":"trb_vector_steal0","summary":"Steals the vector buffer. Array's buffer becomes %NULL."},{"type":"record","name":"Deque","ctype":"TrbDeque","summary":"A double-ended queue."},{"type":"record","name":"HashTable","ctype":"TrbHashTable","summary":"A hash table with quadratic probing and size 2^n."},{"type":"record","name":"HashTableIter","ctype":"TrbHashTableIter","summary":"An iterator over a hash table.  This example ..."},{"type":"record","name":"Heap","ctype":"TrbHeap","summary":"A max-heap data structure represented as an array."},{"type":"record","name":"List","ctype":"TrbList","summary":"A circular doubly-linked list."},{"type":"record","name":"Pcg128","ctype":"TrbPcg128","summary":"It is the state of a PCG128 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"Pcg64","ctype":"TrbPcg64","summary":"It is the state of a PCG64 generator. [Reference](https://www.pcg-random.org/)"},{"type":"record","name":"SList","ctype":"TrbSList","summary":"A circular singly-linked list."},{"type":"record","name":"SM64","ctype":"TrbSM64","summary":"SplitMix64 - is a fast, high-quality pseudorandom number generator. ..."},{"type":"record","name":"Slice","ctype":"TrbSlice","summary":"It is a data structure that is used to ..."},{"type":"record","name":"String","ctype":"TrbString","summary":"A dynamic size string.  This example shows how ..."},{"type":"record","name":"Tree","ctype":"TrbTree","summary":"A self-balancing AVL tree."},{"type":"record","name":"TreeNode","ctype":"TrbTreeNode","summary":"A node in a #TrbTree."},{"type":"record","name":"Vector","ctype":"TrbVector","summary":"A dynamic size array."},{"type":"record","name":"Xs128p","ctype":"TrbXs128p","summary":"Xoshiro128+ - is the best and fastest 32-bit generator ..."},{"type":"record","name":"Xs128ss","ctype":"TrbXs128ss","summary":"Xoshiro128** - is all-purpose, rock-solid generator. It is extremely ..."},{"type":"record","name":"Xs256p","ctype":"TrbXs256p","summary":"Xoshiro256+ - is the best and fastest generator from ..."},{"type":"record","name":"Xs256ss","ctype":"TrbXs256ss","summary":"Xoshiro256** - is all-purpose, rock-solid generator. It has excellent ..."},{"type":"record","name":"div32","ctype":"div32","summary":"Stores the result of division of two `i32`."},{"type":"record","name":"div64","ctype":"div64","summary":"Stores the result of division of two `i64`."},{"type":"record","name":"divsize","ctype":"divsize","summary":"Stores the result of division of two `isize`."},{"type":"record","name":"udiv32","ctype":"udiv32","summary":"Stores the result of division of two `u32`."},{"type":"record","name":"udiv64","ctype":"udiv64","summary":"Stores the result of division of two `u64`."},{"type":"record","name":"udivsize","ctype":"udivsize","summary":"Stores the result of division of two `usize`."}],"terms":{"":[38,39,209,210,260,289],"-":[285,368,372,375,379],"0-bit":[124,125,126],"1-3":[107,108],"128":[98],"16":[33],"16-bit":[3,8],"2":[99,100,101,151],"2^n":[200],"32":[34,70,93,97,99],"32-bit":[4,9,88,89,96,106,155,158,368],"32/64-bit":[154,157],"64":[35,71,94,98,100],"64-bit":[5,10,88,90,96,106,156,159,285,375],"8":[36],"8-bit":[6,11],"C":[138,139,140,141,170,171,172,173],"FALSE":[19],"FORMAT":[135],"I16":[20,138],"I16_C":[138],"I32":[21,139],"I32_C":[139],"I64":[22,140],"I64_C":[140],"I8":[23,141],"I8_C":[141],"ISIZE":[24],"TRB_FORMAT":[135],"TRUE":[25],"U16":[26,170],"U16_C":[170],"U32":[27,171],"U32_C":[171],"U64":[28,172],"U64_C":[172],"U8":[29,173],"U8_C":[173],"USIZE":[30],"USUZE":[31],"WIDTH":[20,21,22,23,24,26,27,28,29,30],"WUDTH":[31],"[reference]http://burtleburtle.net/bob/c/lookup2.c":[89],"[reference]http://burtleburtle.net/bob/c/lookup8.c":[90],"[reference]http://math.utoledo.edu/~codenth/fall_14/4380/notes/trb_quicksort.pdf":[102,103],"[reference]https://github.com/aappleby/smhasher/blob/master/src/murmurhash3.cpp#l94":[97,98],"[reference]https://github.com/veorq/siphash/blob/master/halftrb_siphash.c":[107],"[reference]https://github.com/veorq/siphash/blob/master/trb_siphash.c":[108],"[reference]https://prng.di.unimi.it/":[285,368,372,375,379],"[reference]https://www.pcg-random.org/":[250,254],"`calloc`":[167],"`free":[196,212,251,255,261,262,286,365,369,373,376,380],"`malloc`":[166],"`snprintf`":[109,111],"`vsnprintf`":[110,117],"ab":[33,34,35,36,37,118],"absolut":[33,34,35,36,37,118],"accept":[205,221,332],"access":[260],"add":[40,41,42,43,44,45,46,47,48,49,121,186,187,188,189,201,243,244,278,279,315,316,317,318,319,320,321,322,323,324,354,355,356,357],"advanc":[213],"after":[234,235,269,270],"all":[191,209,230,265,329,330,359,368,372,375,379],"all-purpos":[372,379],"alloc":[109,110,111,117,166,167,196,212,251,255,261,262,286,365,369,373,376,380],"an":[8,9,10,11,12,206,209,210,216,260,261,289,368,375],"analog":[109,110,111,117],"and":[375],"and/or":[213],"ani":[260],"anoth":[249,262,284],"arrai":[119,120,216,260,261,343,347,366],"array'":[367],"as":[368,375],"assign":[290,291,292,293],"avail":[15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,73,92,104,119,120,127,132,133,134,135,138,139,140,141,142,143,144,145,150,152,153,161,162,163,168,169,170,171,172,173,227],"avl":[327],"awar":[368],"back":[182,183,186,187,223,240,243,275,278,315,316,317,318,319,350,351,354,355],"becom":[326,367],"befor":[235,270],"begin":[188,189,244,279,320,321,322,323,324,356,357],"best":[368,375],"between":[130,146,148],"binari":[38,39],"bit":[98,124,125,126,154,155,156,157,158,159,368,375],"bucket":[177,195,202],"buffer":[217,295,325,326,345,361,364,366,367],"byte":[109,110,111,117,147,292,296,302,303,308,313,318,323],"c":[297,306,311,316,321],"can":[260,368,375],"capac":[303],"case":[368,375],"cell":[119],"charact":[164,165,297,306,311,316,321],"check":[231,266],"chk":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,121,122,123],"choos":[146,148],"circular":[228,263],"clz":[124],"clz32":[125],"clz64":[126],"cmp":[13,14,294],"code":[134],"compar":[13,14,74,75,76,81,82,83,84,87,112,113,114,115,116,294],"comparison":[205,221,332],"complet":[178,203,219,232,267,298,346],"complex":[368,375],"consid":[368,375],"contain":[127,260],"content":[290,291,292,293],"copi":[15,229,264,328,344],"count":[124,125,126],"creat":[179,204,205,212,220,221,233,261,262,268,299,300,301,302,303,304,325,328,331,332,344,347,366],"critic":[73],"critical":[32],"current":[214,215],"data":[13,39,78,80,86,103,194,205,216,221,226,227,238,248,260,273,283,332,363],"debug":[32],"dequ":[128,129,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"descript":[15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,73,92,104,119,120,127,132,133,134,135,138,139,140,141,142,143,144,145,150,152,153,161,162,163,168,169,170,171,172,173,227],"destroi":[177,202,217,230,265,295,329,345],"directli":[260],"discard":[98],"distanc":[130],"div":[70,71,72,131],"div32":[197],"div64":[198],"divid":[70,71,72,131],"divis":[197,198,199,340,341,342],"divsiz":[199],"divsize":[199],"do":[132],"doubl":[2],"double-end":[176,179],"doubly-link":[228,233],"dynam":[289,343,347],"element":[180,181,182,183,184,185,186,187,188,189,191,192,222,223,224,225,236,237,238,239,242,249,260,271,272,273,274,277,284,335,348,349,350,351,352,353,354,355,356,357,359,360],"empti":[231,266],"end":[186,187,243,278,315,316,317,318,319,354,355],"enough":[109,110,111,117],"entri":[38,39,128,129,136,137,142,161,168,174,175,190,193,194,201,206,207,208,209,214,226,243,244,278,279,358,362,363],"eras":[296,297],"error":[32],"exampl":[209,210,260,289],"excel":[379],"except":[109,110,111,117,368,375],"exist":[206],"exit":[73,133,134],"extrem":[372],"f128":[0,74],"f128cmp":[74],"f32":[1,75,256,370],"f32cmp":[75],"f64":[2,76,252,257,377],"f64cmp":[76],"fail":[73,104,132,133,134,152,153,375],"false":[19],"famili":[368,375],"familii":[285],"fast":[285,372],"fastest":[368,375],"first":[184,185,224,241,276,294,352,353],"fix":[218],"flag":[32],"floating-point":[0,1,2,368,370,375,377],"fmt":[109,291,301,307,312,317,322],"follow":[209,210,289],"foreach":[143,144,162],"format":[291,293,301,304,307,309,312,314,317,319,322,324],"four":[368],"free":[16,177,178,195,202,203,217,219,230,232,265,267,295,298,329,330,345,346,364],"from":[60,61,62,63,64,65,66,67,68,69,123,182,183,184,185,190,191,192,208,209,223,224,225,240,241,245,249,261,275,276,280,284,285,296,299,301,304,338,350,351,352,353,358,359,360,368,375],"front":[184,185,188,189,224,241,244,276,279,320,321,322,323,324,352,353,356,357],"func":[13,14,15,16,17,18,92],"function":[13,14,17,38,39,205,209,221,332],"gener":[250,252,253,254,256,257,258,259,285,287,288,368,370,371,372,374,375,377,378,379,381],"get":[33,34,35,36,37,118,120,128,129,136,137,160,164,165,174,175,209,210,211,239,242,260,274,277,289],"given":[128,129,136,137,164,165,174,175,180,181,190,206,239,251,252,253,255,256,257,258,259,274,286,287,288,297,305,306,307,308,309,310,311,312,313,314,348,349,358,369,370,371,373,374,376,377,378,380,381],"ha":[379],"half":[107],"hash":[17,89,90,200,201,202,203,206,207,208,209,210],"have":[368],"heap":[79,80,136,137,196,212,216,217,218,219,222,223,224,225,226,251,255,261,262,286,365,369,373,376,380],"heapifi":[77,78],"heapsort":[79,80],"high-qual":[285],"hold":[109,110,111,117],"how":[209,210,260,289],"i16":[3,40,50,60,81],"i16_width":[20],"i16cmp":[81],"i32":[4,41,51,61,82,197],"i32_width":[21],"i32cmp":[82],"i64":[5,42,52,62,83,198],"i64_width":[22],"i64cmp":[83],"i8":[6,43,53,63,84],"i8_width":[23],"i8cmp":[84],"includ":[109,110,111,117],"index":[128,129,136,137,164,165,174,175,180,181,190,297,305,306,307,308,309,310,311,312,313,314,348,349,358],"info":[32],"init":[145,163,169,179,204,205,212,220,221,233,251,255,261,268,286,289,299,301,302,303,304,331,332,347,369,373,376,380],"init0":[300],"initi":[251,255,285,286,369,373,376,380],"inord":[333],"insert":[85,86,180,181,206,222,234,235,269,270,305,306,307,308,309,334,348,349],"inssort":[85,86],"integ":[3,4,5,6,7,8,9,10,11,12,154,155,156,157,158,159],"isiz":[7,44,54,64,87,199],"isize":[7],"isize_width":[24],"isizecmp":[87],"issu":[368,375],"it":[206],"iter":[210,214,215],"itself":[330],"jenkin":[89,90],"jhash":[88],"jhash32":[89],"jhash64":[90],"just":[375],"kei":[17,211,213],"knuth":[102,103],"larg":[109,110,111,117],"largest":[146],"last":[182,183,223,240,275,350,351],"lead":[124,125,126],"left":[154,155,156],"len":[160,236,271,292,302,308,313,318,323],"length":[160],"linear":[368,375],"list":[142,143,144,145,228,229,230,231,232,233,236,237,238,240,241,242,243,244,245,246,247,248,249,263,264,265,266,267,268,271,272,273,275,276,277,278,279,280,281,282,283,284],"lookup":[207,237,238,272,273,335],"low":[368,375],"lowest":[148,368,375],"m":[257,259],"mani":[181,183,185,187,189,349,351,353,355,357],"max":[146],"max-heap":[216],"memori":[195,196,212,251,255,261,262,286,361,364,365,369,373,376,380],"memswap":[147],"messag":[32,91,92],"might":[375],"min":[148],"most":[124,125,126],"mul":[50,51,52,53,54,55,56,57,58,59,93,94,95,122,149],"multipli":[50,51,52,53,54,55,56,57,58,59,93,94,95,122,149],"murmurhash3":[96,97,98],"new":[179,201,204,205,212,220,221,233,243,244,261,262,268,278,279,299,300,301,302,303,304,325,331,332,347,366],"next":[99,100,101,151,213,252,253,256,257,258,259,287,288,370,371,374,377,378,381],"node":[145,163,168,169,230,234,235,240,241,245,265,269,270,275,276,280,329,330,334,338,339],"not":[231,266],"noth":[213],"now":[213],"nth":[239,274],"null":[109,110,111,117],"number":[0,1,2,70,71,72,93,94,95,124,125,126,131,149,236,252,253,256,257,258,259,271,285,287,288,368,370,371,374,375,377,378,381],"offsetof":[150],"on":[206,234,235,249,269,270,284],"onto":[243,244,278,279],"oper":[121,122,123],"or":[213],"order":[218],"other":[234,235,269,270],"output":[109,110,111,117,209,210,260,289,368,375],"over":[210],"overflow":[121,122],"overwrit":[310,311,312,313,314],"pass":[368,372,375,379],"pcg128":[250,252,253],"pcg64":[254,256,257,258,259],"platform":[88,96,106],"point":[213,215],"pointer":[7,12,129,137,165,175,214],"pop":[182,183,184,185,223,224,240,241,275,276,350,351,352,353],"portion":[260],"posit":[124,125,126,239,242,274,277],"postord":[336],"pow2":[70,71,72,93,94,95,99,100,101,131,149,151],"power":[70,71,72,93,94,95,99,100,101,131,149,151],"precis":[0,1,2],"preoder":[337],"preorder":[337],"print":[32,91,289],"probe":[200],"pseudorandom":[285],"ptr":[129,137,165,175],"push":[186,187,188,189,243,244,278,279,315,316,317,318,319,320,321,322,323,324,354,355,356,357],"put":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,121,122,123],"quadrat":[200],"quadrupl":[0],"queue":[176,179],"quicksort":[102,103],"quotient":[131],"random":[252,253,256,257,258,259,287,288,370,371,374,377,378,381],"rang":[192,360],"re-establish":[218],"recommend":[285],"releas":[196,212,251,255,261,262,286,365,369,373,376,380],"remaind":[131],"remov":[182,183,184,185,190,191,192,208,209,214,223,224,225,240,241,245,275,276,280,338,350,351,352,353,358,359,360],"replac":[206,215,290,291,292,293],"repres":[216,260],"requir":[361],"reserv":[361],"reslic":[262],"result":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,121,122,123,197,198,199,213,340,341,342],"retriev":[211,213],"return":[104,121,122,123,124,125,126,130,131,152,153,154,155,156,157,159,236,271],"returnsa":[158],"revers":[105,144,246,281],"right":[157,158,159],"rock-solid":[372,379],"rotat":[154,155,156,157,158,159],"rotl":[154],"rotl32":[155],"rotl64":[156],"rotr":[157],"rotr32":[158],"rotr64":[159],"round":[99,100,101,151],"rs":[252,253,256,258],"rx":[257,259],"s":[263],"search":[38,39,193,194,207,226,227,237,238,272,273,335,362,363],"second":[294],"seed":[251,255,285,286,369,373,376,380],"self-balanc":[327],"should":[38,39,209,210,260,289],"show":[209,210,260,289],"shrink":[195,364],"sign":[3,4,5,6,7],"signific":[124,125,126],"similar":[209,210,289],"singl":[1],"singly-link":[263,268],"siphash":[106,107,108],"siphash32":[107],"siphash64":[108],"size":[7,12,37,72,95,101,200,289,303,343,347],"slice":[38,39,77,78,79,80,85,86,102,103,105,160,196,260,365],"slist":[161,162,163],"sm64":[285],"so":[368,375],"sort":[38,39,79,80,85,86,102,103,247,248,260,282,283],"speed":[379],"splice":[249,284],"splitmix64":[285],"start":[124,125,126,296],"state":[250,251,252,253,254,255,256,257,258,259,286,287,288,369,370,371,373,374,376,377,378,380,381],"stdout":[289],"steal":[325,326,366,367],"steal0":[326,367],"store":[197,198,199,340,341,342],"strdup":[109,110],"strfmt":[111],"string":[109,110,111,117,164,165,289,291,293,294,295,296,297,298,301,304,306,307,309,312,314,316,317,319,321,322,324,325,326],"structur":[216,260],"sub":[60,61,62,63,64,65,66,67,68,69,123],"sub-n":[372,379],"subtract":[60,61,62,63,64,65,66,67,68,69,123],"swap":[147],"tabl":[200,201,202,203,206,207,208,209,210],"talloc":[166],"talloc0":[167],"termin":[109,110,111,117],"test":[368,372,375,379],"those":[375],"three":[375],"too":[368,375],"transfer":[249,284],"travers":[333,336,337],"trb_abs":[118],"trb_abs_16":[33],"trb_abs_32":[34],"trb_abs_64":[35],"trb_abs_8":[36],"trb_abs_size":[37],"trb_array_cell":[119],"trb_array_get":[120],"trb_binary_search":[38],"trb_binary_search_data":[39],"trb_chk_add":[121],"trb_chk_add_i16":[40],"trb_chk_add_i32":[41],"trb_chk_add_i64":[42],"trb_chk_add_i8":[43],"trb_chk_add_isize":[44],"trb_chk_add_u16":[45],"trb_chk_add_u32":[46],"trb_chk_add_u64":[47],"trb_chk_add_u8":[48],"trb_chk_add_usize":[49],"trb_chk_mul":[122],"trb_chk_mul_i16":[50],"trb_chk_mul_i32":[51],"trb_chk_mul_i64":[52],"trb_chk_mul_i8":[53],"trb_chk_mul_isize":[54],"trb_chk_mul_u16":[55],"trb_chk_mul_u32":[56],"trb_chk_mul_u64":[57],"trb_chk_mul_u8":[58],"trb_chk_mul_usize":[59],"trb_chk_sub":[123],"trb_chk_sub_i16":[60],"trb_chk_sub_i32":[61],"trb_chk_sub_i64":[62],"trb_chk_sub_i8":[63],"trb_chk_sub_isize":[64],"trb_chk_sub_u16":[65],"trb_chk_sub_u32":[66],"trb_chk_sub_u64":[67],"trb_chk_sub_u8":[68],"trb_chk_sub_usize":[69],"trb_clz":[124],"trb_clz32":[125],"trb_clz64":[126],"trb_container_of":[127],"trb_deque_destroy":[177],"trb_deque_free":[178],"trb_deque_get":[128],"trb_deque_init":[179],"trb_deque_insert":[180],"trb_deque_insert_many":[181],"trb_deque_pop_back":[182],"trb_deque_pop_back_many":[183],"trb_deque_pop_front":[184],"trb_deque_pop_front_many":[185],"trb_deque_ptr":[129],"trb_deque_push_back":[186],"trb_deque_push_back_many":[187],"trb_deque_push_front":[188],"trb_deque_push_front_many":[189],"trb_deque_remove":[190],"trb_deque_remove_all":[191],"trb_deque_remove_range":[192],"trb_deque_search":[193],"trb_deque_search_data":[194],"trb_deque_shrink":[195],"trb_deque_slice":[196],"trb_distance_of":[130],"trb_div_pow2":[131],"trb_div_pow2_32":[70],"trb_div_pow2_64":[71],"trb_div_pow2_size":[72],"trb_do_if_fail":[132],"trb_exit_if_fail":[133],"trb_exit_if_fail_critical":[73],"trb_exit_with_code_if_fail":[134],"trb_f128cmp":[74],"trb_f32cmp":[75],"trb_f64cmp":[76],"trb_hash_table_add":[201],"trb_hash_table_destroy":[202],"trb_hash_table_free":[203],"trb_hash_table_init":[204],"trb_hash_table_init_data":[205],"trb_hash_table_insert":[206],"trb_hash_table_iter_get":[211],"trb_hash_table_iter_init":[212],"trb_hash_table_iter_next":[213],"trb_hash_table_iter_remove":[214],"trb_hash_table_iter_replace":[215],"trb_hash_table_lookup":[207],"trb_hash_table_remove":[208],"trb_hash_table_remove_all":[209],"trb_heap_destroy":[217],"trb_heap_fix":[218],"trb_heap_free":[219],"trb_heap_get":[136],"trb_heap_init":[220],"trb_heap_init_data":[221],"trb_heap_insert":[222],"trb_heap_pop_back":[223],"trb_heap_pop_front":[224],"trb_heap_ptr":[137],"trb_heap_remove":[225],"trb_heap_search":[226],"trb_heap_search_data":[227],"trb_heapify":[77],"trb_heapify_data":[78],"trb_heapsort":[79],"trb_heapsort_data":[80],"trb_i16cmp":[81],"trb_i32cmp":[82],"trb_i64cmp":[83],"trb_i8cmp":[84],"trb_inssort":[85],"trb_inssort_data":[86],"trb_isizecmp":[87],"trb_jhash":[88],"trb_jhash32":[89],"trb_jhash64":[90],"trb_list_copy":[229],"trb_list_destroy":[230],"trb_list_empty":[231],"trb_list_entry":[142],"trb_list_foreach":[143],"trb_list_foreach_reverse":[144],"trb_list_free":[232],"trb_list_init":[233],"trb_list_insert_after":[234],"trb_list_insert_before":[235],"trb_list_len":[236],"trb_list_lookup":[237],"trb_list_lookup_data":[238],"trb_list_node_init":[145],"trb_list_nth":[239],"trb_list_pop_back":[240],"trb_list_pop_front":[241],"trb_list_position":[242],"trb_list_push_back":[243],"trb_list_push_front":[244],"trb_list_remove":[245],"trb_list_reverse":[246],"trb_list_sort":[247],"trb_list_sort_data":[248],"trb_list_splice":[249],"trb_max":[146],"trb_memswap":[147],"trb_message":[91],"trb_message_func":[92],"trb_min":[148],"trb_mul_pow2":[149],"trb_mul_pow2_32":[93],"trb_mul_pow2_64":[94],"trb_mul_pow2_size":[95],"trb_murmurhash3":[96],"trb_murmurhash3_32":[97],"trb_murmurhash3_64":[98],"trb_pcg128_init":[251],"trb_pcg128_next_f64":[252],"trb_pcg128_next_u64":[253],"trb_pcg64_init":[255],"trb_pcg64_next_f32":[256],"trb_pcg64_next_f64":[257],"trb_pcg64_next_u32":[258],"trb_pcg64_next_u64":[259],"trb_pow2":[151],"trb_pow2_32":[99],"trb_pow2_64":[100],"trb_pow2_size":[101],"trb_quicksort":[102],"trb_quicksort_data":[103],"trb_return_if_fail":[152],"trb_return_if_fail_warning":[104],"trb_return_val_if_fail":[153],"trb_reverse":[105],"trb_rotl":[154],"trb_rotl32":[155],"trb_rotl64":[156],"trb_rotr":[157],"trb_rotr32":[158],"trb_rotr64":[159],"trb_siphash":[106],"trb_siphash32":[107],"trb_siphash64":[108],"trb_slice_init":[261],"trb_slice_len":[160],"trb_slice_reslice":[262],"trb_slist_copy":[264],"trb_slist_destroy":[265],"trb_slist_empty":[266],"trb_slist_entry":[161],"trb_slist_foreach":[162],"trb_slist_free":[267],"trb_slist_init":[268],"trb_slist_insert_after":[269],"trb_slist_insert_before":[270],"trb_slist_len":[271],"trb_slist_lookup":[272],"trb_slist_lookup_data":[273],"trb_slist_node_init":[163],"trb_slist_nth":[274],"trb_slist_pop_back":[275],"trb_slist_pop_front":[276],"trb_slist_position":[277],"trb_slist_push_back":[278],"trb_slist_push_front":[279],"trb_slist_remove":[280],"trb_slist_reverse":[281],"trb_slist_sort":[282],"trb_slist_sort_data":[283],"trb_slist_splice":[284],"trb_sm64_init":[286],"trb_sm64_next_u32":[287],"trb_sm64_next_u64":[288],"trb_strdup_fmt":[109],"trb_strdup_vfmt":[110],"trb_strfmt":[111],"trb_string_assign":[290],"trb_string_assign_fmt":[291],"trb_string_assign_len":[292],"trb_string_assign_vfmt":[293],"trb_string_cmp":[294],"trb_string_destroy":[295],"trb_string_erase":[296],"trb_string_erase_c":[297],"trb_string_free":[298],"trb_string_get":[164],"trb_string_init":[299],"trb_string_init0":[300],"trb_string_init_fmt":[301],"trb_string_init_len":[302],"trb_string_init_sized":[303],"trb_string_init_vfmt":[304],"trb_string_insert":[305],"trb_string_insert_c":[306],"trb_string_insert_fmt":[307],"trb_string_insert_len":[308],"trb_string_insert_vfmt":[309],"trb_string_overwrite":[310],"trb_string_overwrite_c":[311],"trb_string_overwrite_fmt":[312],"trb_string_overwrite_len":[313],"trb_string_overwrite_vfmt":[314],"trb_string_ptr":[165],"trb_string_push_back":[315],"trb_string_push_back_c":[316],"trb_string_push_back_fmt":[317],"trb_string_push_back_len":[318],"trb_string_push_back_vfmt":[319],"trb_string_push_front":[320],"trb_string_push_front_c":[321],"trb_string_push_front_fmt":[322],"trb_string_push_front_len":[323],"trb_string_push_front_vfmt":[324],"trb_string_steal":[325],"trb_string_steal0":[326],"trb_talloc":[166],"trb_talloc0":[167],"trb_tree_copy":[328],"trb_tree_destroy":[329],"trb_tree_free":[330],"trb_tree_init":[331],"trb_tree_init_data":[332],"trb_tree_inorder":[333],"trb_tree_insert":[334],"trb_tree_lookup":[335],"trb_tree_node_entry":[168],"trb_tree_node_init":[169],"trb_tree_postorder":[336],"trb_tree_preorder":[337],"trb_tree_remove":[338],"trb_u16cmp":[112],"trb_u32cmp":[113],"trb_u64cmp":[114],"trb_u8cmp":[115],"trb_usizecmp":[116],"trb_vector_copy":[344],"trb_vector_destroy":[345],"trb_vector_free":[346],"trb_vector_get":[174],"trb_vector_init":[347],"trb_vector_insert":[348],"trb_vector_insert_many":[349],"trb_vector_pop_back":[350],"trb_vector_pop_back_many":[351],"trb_vector_pop_front":[352],"trb_vector_pop_front_many":[353],"trb_vector_ptr":[175],"trb_vector_push_back":[354],"trb_vector_push_back_many":[355],"trb_vector_push_front":[356],"trb_vector_push_front_many":[357],"trb_vector_remove":[358],"trb_vector_remove_all":[359],"trb_vector_remove_range":[360],"trb_vector_require":[361],"trb_vector_search":[362],"trb_vector_search_data":[363],"trb_vector_shrink":[364],"trb_vector_slice":[365],"trb_vector_steal":[366],"trb_vector_steal0":[367],"trb_vstrfmt":[117],"trb_xs128p_init":[369],"trb_xs128p_next_f32":[370],"trb_xs128p_next_u32":[371],"trb_xs128ss_init":[373],"trb_xs128ss_next":[374],"trb_xs256p_init":[376],"trb_xs256p_next_f64":[377],"trb_xs256p_next_u64":[378],"trb_xs256ss_init":[380],"trb_xs256ss_next":[381],"trbcmpdatafunc":[13],"trbcmpfunc":[14],"trbcopyfunc":[15],"trbdeque":[176],"trbfreefunc":[16],"trbhashfunc":[17],"trbhashtable":[200],"trbhashtableiter":[210],"trbheap":[216],"trblist":[228],"trbmessageflags":[32],"trbpcg128":[250],"trbpcg64":[254],"trbslice":[260],"trbslist":[263],"trbsm64":[285],"trbstring":[289,325],"trbstring'":[326],"trbtree":[327],"trbtreenode":[339],"trbuserfunc":[18],"trbvector":[343],"trbxs128p":[368],"trbxs128ss":[372],"trbxs256p":[375],"trbxs256ss":[379],"tree":[168,169,327,328,329,330,333,334,335,336,337,338,339],"true":[25],"two":[13,14,70,71,72,74,75,76,81,82,83,84,87,93,94,95,112,113,114,115,116,131,149,197,198,199,340,341,342],"type":[0,1,2,3,4,5,6,7,8,9,10,11,12],"u16":[8,45,55,65,112],"u16_width":[26],"u16cmp":[112],"u32":[9,46,56,66,113,258,287,340,371],"u32_width":[27],"u32cmp":[113],"u64":[10,47,57,67,114,253,259,288,341,378],"u64_width":[28],"u64cmp":[114],"u8":[11,48,58,68,115],"u8_width":[29],"u8cmp":[115],"udiv32":[340],"udiv64":[341],"udivs":[342],"udivsize":[342],"underflow":[123],"unsign":[8,9,10,11,12],"unus":[195,364],"up":[40,41,42,43,44,45,46,47,48,49,99,100,101,121,151],"upper":[98],"us":[13,38,39,78,79,80,85,86,88,96,102,103,106,166,167,194,196,209,212,226,238,248,251,252,253,255,256,257,258,259,260,261,262,273,283,286,363,365,368,369,373,375,376,380],"user":[13,18,39,78,80,86,194,205,221,226,238,248,273,283,332,363],"usiz":[12,49,59,69,116,342],"usize":[12],"usize_width":[30],"usizecmp":[116],"usual":[368,375],"usuze_wudth":[31],"val":[153],"valu":[13,14,33,34,35,36,37,118,128,136,146,148,174,206,211,213,215],"vector":[174,175,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367],"vfmt":[110,293,304,309,314,319,324],"vstrfmt":[117],"want":[38,39],"warn":[104],"warning":[32],"we":[98,368],"whether":[231,266],"which":[375],"whose":[260],"x64":[98],"x86":[97],"xorshift":[368,375],"xoshiro":[285],"xoshiro128**":[372],"xoshiro128+":[368],"xoshiro256**":[379],"xoshiro256+":[375],"xs":[257,259],"xs128p":[368],"xs128ss":[372],"xs256p":[375],"xs256ss":[379],"xsh":[252,253,256,258],"you":[38,39,209,210,260,289],"zero":[180,181,186,187,188,189,308,313,318,323,348,349,354,355,356,357]}}